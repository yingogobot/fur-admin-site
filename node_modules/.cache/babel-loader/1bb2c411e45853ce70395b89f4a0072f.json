{"remainingRequest":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/thread-loader/dist/cjs.js!/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/babel-loader/lib/index.js!/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/src/views/login/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/src/views/login/index.vue","mtime":1576644363052},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { login } from '@/api/user';\nexport default {\n  name: 'Login',\n  components: {},\n  data: function data() {\n    var validatePassword = function validatePassword(rule, value, callback) {\n      if (value.length < 6) {\n        callback(new Error('The password can not be less than 6 digits'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      loginForm: {\n        login_name: '',\n        password: ''\n      },\n      loginRules: {\n        login_name: [{\n          required: true,\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          trigger: 'blur'\n        }]\n      },\n      passwordType: 'password',\n      capsTooltip: false,\n      loading: false,\n      showDialog: false,\n      redirect: undefined,\n      otherQuery: {},\n      version: ''\n    };\n  },\n  watch: {\n    $route: {\n      handler: function handler(route) {\n        var query = route.query;\n\n        if (query) {\n          this.redirect = query.redirect;\n          this.otherQuery = this.getOtherQuery(query);\n        }\n      },\n      immediate: true\n    }\n  },\n  created: function created() {// window.addEventListener('storage', this.afterQRScan)\n  },\n  mounted: function mounted() {\n    if (this.loginForm.login_name === '') {\n      this.$refs.username.focus();\n    } else if (this.loginForm.password === '') {\n      this.$refs.password.focus();\n    }\n  },\n  destroyed: function destroyed() {// window.removeEventListener('storage', this.afterQRScan)\n  },\n  methods: {\n    checkCapslock: function checkCapslock() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          shiftKey = _ref.shiftKey,\n          key = _ref.key;\n\n      if (key && key.length === 1) {\n        if (shiftKey && key >= 'a' && key <= 'z' || !shiftKey && key >= 'A' && key <= 'Z') {\n          this.capsTooltip = true;\n        } else {\n          this.capsTooltip = false;\n        }\n      }\n\n      if (key === 'CapsLock' && this.capsTooltip === true) {\n        this.capsTooltip = false;\n      }\n    },\n    showPwd: function showPwd() {\n      var _this = this;\n\n      if (this.passwordType === 'password') {\n        this.passwordType = '';\n      } else {\n        this.passwordType = 'password';\n      }\n\n      this.$nextTick(function () {\n        _this.$refs.password.focus();\n      });\n    },\n    handleLogin: function handleLogin() {\n      var _this2 = this;\n\n      this.$refs.loginForm.validate(function (valid) {\n        if (valid) {\n          _this2.loading = true;\n\n          _this2.$store.dispatch('user/login', _this2.loginForm).then(function () {\n            _this2.$router.push({\n              path: _this2.redirect || '/',\n              query: _this2.otherQuery\n            });\n\n            _this2.loading = false;\n          }).catch(function () {\n            _this2.loading = false;\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    getOtherQuery: function getOtherQuery(query) {\n      return Object.keys(query).reduce(function (acc, cur) {\n        if (cur !== 'redirect') {\n          acc[cur] = query[cur];\n        }\n\n        return acc;\n      }, {});\n    }\n  }\n};",null]}