{"remainingRequest":"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/babel-loader/lib/index.js!/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/src/utils/request.js","dependencies":[{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/src/utils/request.js","mtime":1574920378486},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _elementUi = require(\"element-ui\");\n\nvar _store = _interopRequireDefault(require(\"@/store\"));\n\nvar _auth = require(\"@/utils/auth\");\n\nvar service = _axios.default.create({\n  baseURL: process.env.VUE_APP_BASE_API,\n  // url = base url + request url\n  // withCredentials: true, // send cookies when cross-domain requests\n  timeout: 5000 // request timeout\n\n}); // request interceptor\n\n\nservice.interceptors.request.use(function (config) {\n  config.headers['x-fur-admin-access-token'] = (0, _auth.getToken)();\n  return config;\n}, function (error) {\n  // do something with request error\n  console.log(error); // for debug\n\n  return Promise.reject(error);\n}); // response interceptor\n\nservice.interceptors.response.use(\n/**\n * If you want to get http information such as headers or status\n * Please return  response => response\n*/\n\n/**\n * Determine the request status by custom code\n * Here is just an example\n * You can also judge the status by HTTP Status Code\n */\nfunction (response) {\n  var res = response.data;\n  console.log(res.results); // if the custom code is not 20000, it is judged as an error.\n\n  if (res.status !== 200) {\n    (0, _elementUi.Message)({\n      message: res.message || 'Error',\n      type: 'error',\n      duration: 5 * 1000\n    }); // 50008: Illegal token; 50012: Other clients logged in; 50014: Token expired;\n\n    if (res.status === 401) {\n      // to re-login\n      _elementUi.MessageBox.confirm('You have been logged out, you can cancel to stay on this page, or log in again', 'Confirm logout', {\n        confirmButtonText: 'Re-Login',\n        cancelButtonText: 'Cancel',\n        type: 'warning'\n      }).then(function () {\n        _store.default.dispatch('user/resetToken').then(function () {\n          location.reload();\n        });\n      });\n    }\n\n    return Promise.reject(new Error(res.message || 'Error'));\n  } else {\n    return res.results;\n  }\n}, function (error) {\n  console.log('err' + error); // for debug\n\n  (0, _elementUi.Message)({\n    message: error.message,\n    type: 'error',\n    duration: 5 * 1000\n  });\n  return Promise.reject(error);\n});\nvar _default = service;\nexports.default = _default;",{"version":3,"sources":["/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/src/utils/request.js"],"names":["service","axios","create","baseURL","process","env","VUE_APP_BASE_API","timeout","interceptors","request","use","config","headers","error","console","log","Promise","reject","response","res","data","results","status","message","type","duration","MessageBox","confirm","confirmButtonText","cancelButtonText","then","store","dispatch","location","reload","Error"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAGA,IAAMA,OAAO,GAAGC,eAAMC,MAAN,CAAa;AAC3BC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,gBADM;AACY;AACvC;AACAC,EAAAA,OAAO,EAAE,IAHkB,CAGb;;AAHa,CAAb,CAAhB,C,CAMA;;;AACAP,OAAO,CAACQ,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CACE,UAAAC,MAAM,EAAI;AACRA,EAAAA,MAAM,CAACC,OAAP,CAAe,0BAAf,IAA6C,qBAA7C;AACA,SAAOD,MAAP;AACD,CAJH,EAKE,UAAAE,KAAK,EAAI;AACP;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAFO,CAEY;;AACnB,SAAOG,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD,CATH,E,CAYA;;AACAb,OAAO,CAACQ,YAAR,CAAqBU,QAArB,CAA8BR,GAA9B;AACE;;;;;AAKA;;;;;AAKA,UAAAQ,QAAQ,EAAI;AACV,MAAMC,GAAG,GAAGD,QAAQ,CAACE,IAArB;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACE,OAAhB,EAFU,CAGV;;AACA,MAAIF,GAAG,CAACG,MAAJ,KAAe,GAAnB,EAAwB;AACtB,4BAAQ;AACNC,MAAAA,OAAO,EAAEJ,GAAG,CAACI,OAAJ,IAAe,OADlB;AAENC,MAAAA,IAAI,EAAE,OAFA;AAGNC,MAAAA,QAAQ,EAAE,IAAI;AAHR,KAAR,EADsB,CAOtB;;AACA,QAAIN,GAAG,CAACG,MAAJ,KAAe,GAAnB,EAAwB;AACtB;AACAI,4BAAWC,OAAX,CAAmB,gFAAnB,EAAqG,gBAArG,EAAuH;AACrHC,QAAAA,iBAAiB,EAAE,UADkG;AAErHC,QAAAA,gBAAgB,EAAE,QAFmG;AAGrHL,QAAAA,IAAI,EAAE;AAH+G,OAAvH,EAIGM,IAJH,CAIQ,YAAM;AACZC,uBAAMC,QAAN,CAAe,iBAAf,EAAkCF,IAAlC,CAAuC,YAAM;AAC3CG,UAAAA,QAAQ,CAACC,MAAT;AACD,SAFD;AAGD,OARD;AASD;;AACD,WAAOlB,OAAO,CAACC,MAAR,CAAe,IAAIkB,KAAJ,CAAUhB,GAAG,CAACI,OAAJ,IAAe,OAAzB,CAAf,CAAP;AACD,GArBD,MAqBO;AACL,WAAOJ,GAAG,CAACE,OAAX;AACD;AACF,CAvCH,EAwCE,UAAAR,KAAK,EAAI;AACPC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAQF,KAApB,EADO,CACoB;;AAC3B,0BAAQ;AACNU,IAAAA,OAAO,EAAEV,KAAK,CAACU,OADT;AAENC,IAAAA,IAAI,EAAE,OAFA;AAGNC,IAAAA,QAAQ,EAAE,IAAI;AAHR,GAAR;AAKA,SAAOT,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD,CAhDH;eAmDeb,O","sourcesContent":["import axios from 'axios'\nimport { MessageBox, Message } from 'element-ui'\nimport store from '@/store'\nimport { getToken } from '@/utils/auth'\n\n// create an axios instance\nconst service = axios.create({\n  baseURL: process.env.VUE_APP_BASE_API, // url = base url + request url\n  // withCredentials: true, // send cookies when cross-domain requests\n  timeout: 5000 // request timeout\n})\n\n// request interceptor\nservice.interceptors.request.use(\n  config => {\n    config.headers['x-fur-admin-access-token'] = getToken()\n    return config\n  },\n  error => {\n    // do something with request error\n    console.log(error) // for debug\n    return Promise.reject(error)\n  }\n)\n\n// response interceptor\nservice.interceptors.response.use(\n  /**\n   * If you want to get http information such as headers or status\n   * Please return  response => response\n  */\n\n  /**\n   * Determine the request status by custom code\n   * Here is just an example\n   * You can also judge the status by HTTP Status Code\n   */\n  response => {\n    const res = response.data\n    console.log(res.results)\n    // if the custom code is not 20000, it is judged as an error.\n    if (res.status !== 200) {\n      Message({\n        message: res.message || 'Error',\n        type: 'error',\n        duration: 5 * 1000\n      })\n\n      // 50008: Illegal token; 50012: Other clients logged in; 50014: Token expired;\n      if (res.status === 401) {\n        // to re-login\n        MessageBox.confirm('You have been logged out, you can cancel to stay on this page, or log in again', 'Confirm logout', {\n          confirmButtonText: 'Re-Login',\n          cancelButtonText: 'Cancel',\n          type: 'warning'\n        }).then(() => {\n          store.dispatch('user/resetToken').then(() => {\n            location.reload()\n          })\n        })\n      }\n      return Promise.reject(new Error(res.message || 'Error'))\n    } else {\n      return res.results\n    }\n  },\n  error => {\n    console.log('err' + error) // for debug\n    Message({\n      message: error.message,\n      type: 'error',\n      duration: 5 * 1000\n    })\n    return Promise.reject(error)\n  }\n)\n\nexport default service\n"]}]}