{"remainingRequest":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/babel-loader/lib/index.js!/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/src/store/modules/user.js","dependencies":[{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/src/store/modules/user.js","mtime":1574162838090},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _user = require(\"@/api/user\");\n\nvar _auth = require(\"@/utils/auth\");\n\nvar _router = require(\"@/router\");\n\nvar _jsCookie = _interopRequireDefault(require(\"js-cookie\"));\n\nvar TokenKey = 'Admin-Token';\nvar UserObject = 'Admin-User';\nvar state = {\n  token: _jsCookie.default.get(TokenKey),\n  name: _jsCookie.default.get(UserObject) ? JSON.parse(_jsCookie.default.get(UserObject)).name : '',\n  avatar: 'https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif',\n  id: _jsCookie.default.get(UserObject) ? JSON.parse(_jsCookie.default.get(UserObject)).id : ''\n};\nvar mutations = {\n  SET_TOKEN: function SET_TOKEN(state, token) {\n    state.token = token;\n  },\n  SET_NAME: function SET_NAME(state, name) {\n    state.name = name;\n  },\n  SET_AVATAR: function SET_AVATAR(state, avatar) {\n    state.avatar = avatar;\n  },\n  SET_ROLES: function SET_ROLES(state, roles) {\n    state.roles = roles;\n  },\n  SET_ID: function SET_ID(state, id) {\n    state.id = id;\n  }\n};\nvar actions = {\n  // user login\n  login: function login(_ref, userInfo) {\n    var commit = _ref.commit;\n    console.log(userInfo);\n    var login_name = userInfo.login_name,\n        password = userInfo.password;\n    return new Promise(function (resolve, reject) {\n      (0, _user.login)({\n        login_name: login_name.trim(),\n        password: password\n      }).then(function (response) {\n        state.toke = response.access_token;\n        state.name = response.name;\n        state.id = response.id;\n\n        _jsCookie.default.set(TokenKey, response.access_token);\n\n        _jsCookie.default.set(UserObject, JSON.stringify(response));\n\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // user logout\n  logout: function logout(_ref2) {\n    var commit = _ref2.commit,\n        state = _ref2.state,\n        dispatch = _ref2.dispatch;\n    return new Promise(function (resolve, reject) {\n      commit('SET_TOKEN', '');\n      commit('SET_ROLES', []);\n      (0, _auth.removeToken)();\n      (0, _router.resetRouter)();\n      resolve();\n    });\n  },\n  // remove token\n  resetToken: function resetToken(_ref3) {\n    var commit = _ref3.commit;\n    return new Promise(function (resolve) {\n      commit('SET_TOKEN', '');\n      commit('SET_ROLES', []);\n      (0, _auth.removeToken)();\n      resolve();\n    });\n  }\n};\nvar _default = {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};\nexports.default = _default;",{"version":3,"sources":["/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/src/store/modules/user.js"],"names":["TokenKey","UserObject","state","token","Cookies","get","name","JSON","parse","avatar","id","mutations","SET_TOKEN","SET_NAME","SET_AVATAR","SET_ROLES","roles","SET_ID","actions","login","userInfo","commit","console","log","login_name","password","Promise","resolve","reject","trim","then","response","toke","access_token","set","stringify","catch","error","logout","dispatch","resetToken","namespaced"],"mappings":"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","sourcesContent":["import { login } from '@/api/user'\nimport { getToken, setToken, removeToken } from '@/utils/auth'\nimport { resetRouter } from '@/router'\nimport Cookies from 'js-cookie'\nconst TokenKey = 'Admin-Token'\nconst UserObject = 'Admin-User'\n\nconst state = {\n  token: Cookies.get(TokenKey),\n  name: Cookies.get(UserObject) ? JSON.parse(Cookies.get(UserObject)).name : '',\n  avatar: 'https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif',\n  id: Cookies.get(UserObject) ? JSON.parse(Cookies.get(UserObject)).id : ''\n}\n\nconst mutations = {\n  SET_TOKEN: (state, token) => {\n    state.token = token\n  },\n  SET_NAME: (state, name) => {\n    state.name = name\n  },\n  SET_AVATAR: (state, avatar) => {\n    state.avatar = avatar\n  },\n  SET_ROLES: (state, roles) => {\n    state.roles = roles\n  },\n  SET_ID: (state, id) => {\n    state.id = id\n  }\n}\n\nconst actions = {\n  // user login\n  login({ commit }, userInfo) {\n    console.log(userInfo)\n    const { login_name, password } = userInfo\n    return new Promise((resolve, reject) => {\n      login({ login_name: login_name.trim(), password: password }).then(response => {\n        state.toke = response.access_token\n        state.name = response.name\n        state.id = response.id\n        Cookies.set(TokenKey, response.access_token)\n        Cookies.set(UserObject, JSON.stringify(response))\n        resolve()\n      }).catch(error => {\n        reject(error)\n      })\n    })\n  },\n\n  // user logout\n  logout({ commit, state, dispatch }) {\n    return new Promise((resolve, reject) => {\n      commit('SET_TOKEN', '')\n      commit('SET_ROLES', [])\n      removeToken()\n      resetRouter()\n      resolve()\n    })\n  },\n\n  // remove token\n  resetToken({ commit }) {\n    return new Promise(resolve => {\n      commit('SET_TOKEN', '')\n      commit('SET_ROLES', [])\n      removeToken()\n      resolve()\n    })\n  }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n}\n"]}]}