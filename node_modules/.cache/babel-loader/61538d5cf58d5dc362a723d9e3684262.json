{"remainingRequest":"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/babel-loader/lib/index.js!/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/src/views/permission/role.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/src/views/permission/role.vue","mtime":1573891651618},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/@babel/runtime-corejs2/helpers/objectSpread2\"));\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/@babel/runtime-corejs2/helpers/toConsumableArray\"));\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _utils = require(\"@/utils\");\n\nvar _role = require(\"@/api/role\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar defaultRole = {\n  key: '',\n  name: '',\n  description: '',\n  routes: []\n};\nvar _default = {\n  data: function data() {\n    return {\n      role: Object.assign({}, defaultRole),\n      routes: [],\n      rolesList: [],\n      dialogVisible: false,\n      dialogType: 'new',\n      checkStrictly: false,\n      defaultProps: {\n        children: 'children',\n        label: 'title'\n      }\n    };\n  },\n  computed: {\n    routesData: function routesData() {\n      return this.routes;\n    }\n  },\n  created: function created() {\n    // Mock: get all routes and roles list from server\n    this.getRoutes();\n    this.getRoles();\n  },\n  methods: {\n    getRoutes: function () {\n      var _getRoutes2 = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _role.getRoutes)();\n\n              case 2:\n                res = _context.sent;\n                this.serviceRoutes = res.data;\n                this.routes = this.generateRoutes(res.data);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getRoutes() {\n        return _getRoutes2.apply(this, arguments);\n      }\n\n      return getRoutes;\n    }(),\n    getRoles: function () {\n      var _getRoles2 = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _role.getRoles)();\n\n              case 2:\n                res = _context2.sent;\n                this.rolesList = res.data;\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getRoles() {\n        return _getRoles2.apply(this, arguments);\n      }\n\n      return getRoles;\n    }(),\n    // Reshape the routes structure so that it looks the same as the sidebar\n    generateRoutes: function generateRoutes(routes) {\n      var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '/';\n      var res = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = routes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var route = _step.value;\n\n          // skip some route\n          if (route.hidden) {\n            continue;\n          }\n\n          var onlyOneShowingChild = this.onlyOneShowingChild(route.children, route);\n\n          if (route.children && onlyOneShowingChild && !route.alwaysShow) {\n            route = onlyOneShowingChild;\n          }\n\n          var data = {\n            path: _path.default.resolve(basePath, route.path),\n            title: route.meta && route.meta.title\n          }; // recursive child routes\n\n          if (route.children) {\n            data.children = this.generateRoutes(route.children, data.path);\n          }\n\n          res.push(data);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return res;\n    },\n    generateArr: function generateArr(routes) {\n      var _this = this;\n\n      var data = [];\n      routes.forEach(function (route) {\n        data.push(route);\n\n        if (route.children) {\n          var temp = _this.generateArr(route.children);\n\n          if (temp.length > 0) {\n            data = [].concat((0, _toConsumableArray2.default)(data), (0, _toConsumableArray2.default)(temp));\n          }\n        }\n      });\n      return data;\n    },\n    handleAddRole: function handleAddRole() {\n      this.role = Object.assign({}, defaultRole);\n\n      if (this.$refs.tree) {\n        this.$refs.tree.setCheckedNodes([]);\n      }\n\n      this.dialogType = 'new';\n      this.dialogVisible = true;\n    },\n    handleEdit: function handleEdit(scope) {\n      var _this2 = this;\n\n      this.dialogType = 'edit';\n      this.dialogVisible = true;\n      this.checkStrictly = true;\n      this.role = (0, _utils.deepClone)(scope.row);\n      this.$nextTick(function () {\n        var routes = _this2.generateRoutes(_this2.role.routes);\n\n        _this2.$refs.tree.setCheckedNodes(_this2.generateArr(routes)); // set checked state of a node not affects its father and child nodes\n\n\n        _this2.checkStrictly = false;\n      });\n    },\n    handleDelete: function handleDelete(_ref) {\n      var _this3 = this;\n\n      var $index = _ref.$index,\n          row = _ref.row;\n      this.$confirm('Confirm to remove the role?', 'Warning', {\n        confirmButtonText: 'Confirm',\n        cancelButtonText: 'Cancel',\n        type: 'warning'\n      }).then(\n      /*#__PURE__*/\n      (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return (0, _role.deleteRole)(row.key);\n\n              case 2:\n                _this3.rolesList.splice($index, 1);\n\n                _this3.$message({\n                  type: 'success',\n                  message: 'Delete succed!'\n                });\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))).catch(function (err) {\n        console.error(err);\n      });\n    },\n    generateTree: function generateTree(routes) {\n      var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '/';\n      var checkedKeys = arguments.length > 2 ? arguments[2] : undefined;\n      var res = [];\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = routes[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var route = _step2.value;\n\n          var routePath = _path.default.resolve(basePath, route.path); // recursive child routes\n\n\n          if (route.children) {\n            route.children = this.generateTree(route.children, routePath, checkedKeys);\n          }\n\n          if (checkedKeys.includes(routePath) || route.children && route.children.length >= 1) {\n            res.push(route);\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return res;\n    },\n    confirmRole: function () {\n      var _confirmRole = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        var isEdit, checkedKeys, index, _ref3, data, _this$role, description, key, name;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                isEdit = this.dialogType === 'edit';\n                checkedKeys = this.$refs.tree.getCheckedKeys();\n                this.role.routes = this.generateTree((0, _utils.deepClone)(this.serviceRoutes), '/', checkedKeys);\n\n                if (!isEdit) {\n                  _context4.next = 16;\n                  break;\n                }\n\n                _context4.next = 6;\n                return (0, _role.updateRole)(this.role.key, this.role);\n\n              case 6:\n                index = 0;\n\n              case 7:\n                if (!(index < this.rolesList.length)) {\n                  _context4.next = 14;\n                  break;\n                }\n\n                if (!(this.rolesList[index].key === this.role.key)) {\n                  _context4.next = 11;\n                  break;\n                }\n\n                this.rolesList.splice(index, 1, Object.assign({}, this.role));\n                return _context4.abrupt(\"break\", 14);\n\n              case 11:\n                index++;\n                _context4.next = 7;\n                break;\n\n              case 14:\n                _context4.next = 22;\n                break;\n\n              case 16:\n                _context4.next = 18;\n                return (0, _role.addRole)(this.role);\n\n              case 18:\n                _ref3 = _context4.sent;\n                data = _ref3.data;\n                this.role.key = data.key;\n                this.rolesList.push(this.role);\n\n              case 22:\n                _this$role = this.role, description = _this$role.description, key = _this$role.key, name = _this$role.name;\n                this.dialogVisible = false;\n                this.$notify({\n                  title: 'Success',\n                  dangerouslyUseHTMLString: true,\n                  message: \"\\n            <div>Role Key: \".concat(key, \"</div>\\n            <div>Role Name: \").concat(name, \"</div>\\n            <div>Description: \").concat(description, \"</div>\\n          \"),\n                  type: 'success'\n                });\n\n              case 25:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function confirmRole() {\n        return _confirmRole.apply(this, arguments);\n      }\n\n      return confirmRole;\n    }(),\n    // reference: src/view/layout/components/Sidebar/SidebarItem.vue\n    onlyOneShowingChild: function onlyOneShowingChild() {\n      var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var parent = arguments.length > 1 ? arguments[1] : undefined;\n      var onlyOneChild = null;\n      var showingChildren = children.filter(function (item) {\n        return !item.hidden;\n      }); // When there is only one child route, the child route is displayed by default\n\n      if (showingChildren.length === 1) {\n        onlyOneChild = showingChildren[0];\n        onlyOneChild.path = _path.default.resolve(parent.path, onlyOneChild.path);\n        return onlyOneChild;\n      } // Show parent if there are no child route to display\n\n\n      if (showingChildren.length === 0) {\n        onlyOneChild = (0, _objectSpread2.default)({}, parent, {\n          path: '',\n          noShowingChildren: true\n        });\n        return onlyOneChild;\n      }\n\n      return false;\n    }\n  }\n};\nexports.default = _default;",{"version":3,"sources":["role.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-button type=\"primary\" @click=\"handleAddRole\">New Role</el-button>\n\n    <el-table :data=\"rolesList\" style=\"width: 100%;margin-top:30px;\" border>\n      <el-table-column align=\"center\" label=\"Role Key\" width=\"220\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.key }}\n        </template>\n      </el-table-column>\n      <el-table-column align=\"center\" label=\"Role Name\" width=\"220\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.name }}\n        </template>\n      </el-table-column>\n      <el-table-column align=\"header-center\" label=\"Description\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.description }}\n        </template>\n      </el-table-column>\n      <el-table-column align=\"center\" label=\"Operations\">\n        <template slot-scope=\"scope\">\n          <el-button type=\"primary\" size=\"small\" @click=\"handleEdit(scope)\">Edit</el-button>\n          <el-button type=\"danger\" size=\"small\" @click=\"handleDelete(scope)\">Delete</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <el-dialog :visible.sync=\"dialogVisible\" :title=\"dialogType==='edit'?'Edit Role':'New Role'\">\n      <el-form :model=\"role\" label-width=\"80px\" label-position=\"left\">\n        <el-form-item label=\"Name\">\n          <el-input v-model=\"role.name\" placeholder=\"Role Name\" />\n        </el-form-item>\n        <el-form-item label=\"Desc\">\n          <el-input\n            v-model=\"role.description\"\n            :autosize=\"{ minRows: 2, maxRows: 4}\"\n            type=\"textarea\"\n            placeholder=\"Role Description\"\n          />\n        </el-form-item>\n        <el-form-item label=\"Menus\">\n          <el-tree\n            ref=\"tree\"\n            :check-strictly=\"checkStrictly\"\n            :data=\"routesData\"\n            :props=\"defaultProps\"\n            show-checkbox\n            node-key=\"path\"\n            class=\"permission-tree\"\n          />\n        </el-form-item>\n      </el-form>\n      <div style=\"text-align:right;\">\n        <el-button type=\"danger\" @click=\"dialogVisible=false\">Cancel</el-button>\n        <el-button type=\"primary\" @click=\"confirmRole\">Confirm</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport path from 'path'\nimport { deepClone } from '@/utils'\nimport { getRoutes, getRoles, addRole, deleteRole, updateRole } from '@/api/role'\n\nconst defaultRole = {\n  key: '',\n  name: '',\n  description: '',\n  routes: []\n}\n\nexport default {\n  data() {\n    return {\n      role: Object.assign({}, defaultRole),\n      routes: [],\n      rolesList: [],\n      dialogVisible: false,\n      dialogType: 'new',\n      checkStrictly: false,\n      defaultProps: {\n        children: 'children',\n        label: 'title'\n      }\n    }\n  },\n  computed: {\n    routesData() {\n      return this.routes\n    }\n  },\n  created() {\n    // Mock: get all routes and roles list from server\n    this.getRoutes()\n    this.getRoles()\n  },\n  methods: {\n    async getRoutes() {\n      const res = await getRoutes()\n      this.serviceRoutes = res.data\n      this.routes = this.generateRoutes(res.data)\n    },\n    async getRoles() {\n      const res = await getRoles()\n      this.rolesList = res.data\n    },\n\n    // Reshape the routes structure so that it looks the same as the sidebar\n    generateRoutes(routes, basePath = '/') {\n      const res = []\n\n      for (let route of routes) {\n        // skip some route\n        if (route.hidden) { continue }\n\n        const onlyOneShowingChild = this.onlyOneShowingChild(route.children, route)\n\n        if (route.children && onlyOneShowingChild && !route.alwaysShow) {\n          route = onlyOneShowingChild\n        }\n\n        const data = {\n          path: path.resolve(basePath, route.path),\n          title: route.meta && route.meta.title\n\n        }\n\n        // recursive child routes\n        if (route.children) {\n          data.children = this.generateRoutes(route.children, data.path)\n        }\n        res.push(data)\n      }\n      return res\n    },\n    generateArr(routes) {\n      let data = []\n      routes.forEach(route => {\n        data.push(route)\n        if (route.children) {\n          const temp = this.generateArr(route.children)\n          if (temp.length > 0) {\n            data = [...data, ...temp]\n          }\n        }\n      })\n      return data\n    },\n    handleAddRole() {\n      this.role = Object.assign({}, defaultRole)\n      if (this.$refs.tree) {\n        this.$refs.tree.setCheckedNodes([])\n      }\n      this.dialogType = 'new'\n      this.dialogVisible = true\n    },\n    handleEdit(scope) {\n      this.dialogType = 'edit'\n      this.dialogVisible = true\n      this.checkStrictly = true\n      this.role = deepClone(scope.row)\n      this.$nextTick(() => {\n        const routes = this.generateRoutes(this.role.routes)\n        this.$refs.tree.setCheckedNodes(this.generateArr(routes))\n        // set checked state of a node not affects its father and child nodes\n        this.checkStrictly = false\n      })\n    },\n    handleDelete({ $index, row }) {\n      this.$confirm('Confirm to remove the role?', 'Warning', {\n        confirmButtonText: 'Confirm',\n        cancelButtonText: 'Cancel',\n        type: 'warning'\n      })\n        .then(async() => {\n          await deleteRole(row.key)\n          this.rolesList.splice($index, 1)\n          this.$message({\n            type: 'success',\n            message: 'Delete succed!'\n          })\n        })\n        .catch(err => { console.error(err) })\n    },\n    generateTree(routes, basePath = '/', checkedKeys) {\n      const res = []\n\n      for (const route of routes) {\n        const routePath = path.resolve(basePath, route.path)\n\n        // recursive child routes\n        if (route.children) {\n          route.children = this.generateTree(route.children, routePath, checkedKeys)\n        }\n\n        if (checkedKeys.includes(routePath) || (route.children && route.children.length >= 1)) {\n          res.push(route)\n        }\n      }\n      return res\n    },\n    async confirmRole() {\n      const isEdit = this.dialogType === 'edit'\n\n      const checkedKeys = this.$refs.tree.getCheckedKeys()\n      this.role.routes = this.generateTree(deepClone(this.serviceRoutes), '/', checkedKeys)\n\n      if (isEdit) {\n        await updateRole(this.role.key, this.role)\n        for (let index = 0; index < this.rolesList.length; index++) {\n          if (this.rolesList[index].key === this.role.key) {\n            this.rolesList.splice(index, 1, Object.assign({}, this.role))\n            break\n          }\n        }\n      } else {\n        const { data } = await addRole(this.role)\n        this.role.key = data.key\n        this.rolesList.push(this.role)\n      }\n\n      const { description, key, name } = this.role\n      this.dialogVisible = false\n      this.$notify({\n        title: 'Success',\n        dangerouslyUseHTMLString: true,\n        message: `\n            <div>Role Key: ${key}</div>\n            <div>Role Name: ${name}</div>\n            <div>Description: ${description}</div>\n          `,\n        type: 'success'\n      })\n    },\n    // reference: src/view/layout/components/Sidebar/SidebarItem.vue\n    onlyOneShowingChild(children = [], parent) {\n      let onlyOneChild = null\n      const showingChildren = children.filter(item => !item.hidden)\n\n      // When there is only one child route, the child route is displayed by default\n      if (showingChildren.length === 1) {\n        onlyOneChild = showingChildren[0]\n        onlyOneChild.path = path.resolve(parent.path, onlyOneChild.path)\n        return onlyOneChild\n      }\n\n      // Show parent if there are no child route to display\n      if (showingChildren.length === 0) {\n        onlyOneChild = { ... parent, path: '', noShowingChildren: true }\n        return onlyOneChild\n      }\n\n      return false\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.app-container {\n  .roles-table {\n    margin-top: 30px;\n  }\n  .permission-tree {\n    margin-bottom: 30px;\n  }\n}\n</style>\n"],"sourceRoot":"src/views/permission"}]}