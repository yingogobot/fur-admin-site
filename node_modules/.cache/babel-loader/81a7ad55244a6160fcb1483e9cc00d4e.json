{"remainingRequest":"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/babel-loader/lib/index.js!/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/src/utils/clipboard.js","dependencies":[{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/src/utils/clipboard.js","mtime":1573891651605},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = handleClipboard;\n\nvar _vue = _interopRequireDefault(require(\"vue\"));\n\nvar _clipboard = _interopRequireDefault(require(\"clipboard\"));\n\nfunction clipboardSuccess() {\n  _vue.default.prototype.$message({\n    message: 'Copy successfully',\n    type: 'success',\n    duration: 1500\n  });\n}\n\nfunction clipboardError() {\n  _vue.default.prototype.$message({\n    message: 'Copy failed',\n    type: 'error'\n  });\n}\n\nfunction handleClipboard(_text, event) {\n  var clipboard = new _clipboard.default(event.target, {\n    text: function text() {\n      return _text;\n    }\n  });\n  clipboard.on('success', function () {\n    clipboardSuccess();\n    clipboard.destroy();\n  });\n  clipboard.on('error', function () {\n    clipboardError();\n    clipboard.destroy();\n  });\n  clipboard.onClick(event);\n}",{"version":3,"sources":["/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/src/utils/clipboard.js"],"names":["clipboardSuccess","Vue","prototype","$message","message","type","duration","clipboardError","handleClipboard","text","event","clipboard","Clipboard","target","on","destroy","onClick"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA,SAASA,gBAAT,GAA4B;AAC1BC,eAAIC,SAAJ,CAAcC,QAAd,CAAuB;AACrBC,IAAAA,OAAO,EAAE,mBADY;AAErBC,IAAAA,IAAI,EAAE,SAFe;AAGrBC,IAAAA,QAAQ,EAAE;AAHW,GAAvB;AAKD;;AAED,SAASC,cAAT,GAA0B;AACxBN,eAAIC,SAAJ,CAAcC,QAAd,CAAuB;AACrBC,IAAAA,OAAO,EAAE,aADY;AAErBC,IAAAA,IAAI,EAAE;AAFe,GAAvB;AAID;;AAEc,SAASG,eAAT,CAAyBC,KAAzB,EAA+BC,KAA/B,EAAsC;AACnD,MAAMC,SAAS,GAAG,IAAIC,kBAAJ,CAAcF,KAAK,CAACG,MAApB,EAA4B;AAC5CJ,IAAAA,IAAI,EAAE;AAAA,aAAMA,KAAN;AAAA;AADsC,GAA5B,CAAlB;AAGAE,EAAAA,SAAS,CAACG,EAAV,CAAa,SAAb,EAAwB,YAAM;AAC5Bd,IAAAA,gBAAgB;AAChBW,IAAAA,SAAS,CAACI,OAAV;AACD,GAHD;AAIAJ,EAAAA,SAAS,CAACG,EAAV,CAAa,OAAb,EAAsB,YAAM;AAC1BP,IAAAA,cAAc;AACdI,IAAAA,SAAS,CAACI,OAAV;AACD,GAHD;AAIAJ,EAAAA,SAAS,CAACK,OAAV,CAAkBN,KAAlB;AACD","sourcesContent":["import Vue from 'vue'\nimport Clipboard from 'clipboard'\n\nfunction clipboardSuccess() {\n  Vue.prototype.$message({\n    message: 'Copy successfully',\n    type: 'success',\n    duration: 1500\n  })\n}\n\nfunction clipboardError() {\n  Vue.prototype.$message({\n    message: 'Copy failed',\n    type: 'error'\n  })\n}\n\nexport default function handleClipboard(text, event) {\n  const clipboard = new Clipboard(event.target, {\n    text: () => text\n  })\n  clipboard.on('success', () => {\n    clipboardSuccess()\n    clipboard.destroy()\n  })\n  clipboard.on('error', () => {\n    clipboardError()\n    clipboard.destroy()\n  })\n  clipboard.onClick(event)\n}\n"]}]}