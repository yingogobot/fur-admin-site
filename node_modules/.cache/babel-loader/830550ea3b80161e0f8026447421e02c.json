{"remainingRequest":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/thread-loader/dist/cjs.js!/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/babel-loader/lib/index.js!/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/src/store/modules/user.js","dependencies":[{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/src/store/modules/user.js","mtime":1576739036825},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport UserAPI from '@/api/user';\nimport { getToken, setToken, removeToken } from '@/utils/auth';\nimport { resetRouter } from '@/router';\nimport Cookies from 'js-cookie';\nvar TokenKey = 'Admin-Token';\nvar UserObject = 'Admin-User';\nvar state = {\n  token: Cookies.get(TokenKey),\n  name: Cookies.get(UserObject) ? JSON.parse(Cookies.get(UserObject)).name : '',\n  avatar: 'https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif',\n  id: Cookies.get(UserObject) ? JSON.parse(Cookies.get(UserObject)).id : ''\n};\nvar mutations = {\n  SET_TOKEN: function SET_TOKEN(state, token) {\n    state.token = token;\n  },\n  SET_NAME: function SET_NAME(state, name) {\n    state.name = name;\n  },\n  SET_AVATAR: function SET_AVATAR(state, avatar) {\n    state.avatar = avatar;\n  },\n  SET_ROLES: function SET_ROLES(state, roles) {\n    state.roles = roles;\n  },\n  SET_ID: function SET_ID(state, id) {\n    state.id = id;\n  }\n};\nvar actions = {\n  // user login\n  login: function login(_ref, userInfo) {\n    var commit = _ref.commit;\n    console.log(userInfo);\n    var login_name = userInfo.login_name,\n        password = userInfo.password;\n    return new Promise(function (resolve, reject) {\n      UserAPI.login({\n        login_name: login_name.trim(),\n        password: password\n      }).then(function (response) {\n        state.toke = response.access_token;\n        state.name = response.name;\n        state.id = response.id;\n        Cookies.set(TokenKey, response.access_token);\n        Cookies.set(UserObject, JSON.stringify(response));\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // user logout\n  logout: function logout(_ref2) {\n    var commit = _ref2.commit,\n        state = _ref2.state,\n        dispatch = _ref2.dispatch;\n    return new Promise(function (resolve, reject) {\n      commit('SET_TOKEN', '');\n      commit('SET_ROLES', []);\n      removeToken();\n      resetRouter();\n      resolve();\n    });\n  },\n  // remove token\n  resetToken: function resetToken(_ref3) {\n    var commit = _ref3.commit;\n    return new Promise(function (resolve) {\n      commit('SET_TOKEN', '');\n      commit('SET_ROLES', []);\n      removeToken();\n      resolve();\n    });\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};",null]}