{"remainingRequest":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/babel-loader/lib/index.js!/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/src/views/inventory/inventory-out.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/src/views/inventory/inventory-out.vue","mtime":1576147428277},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/@babel/runtime-corejs2/helpers/objectSpread2\"));\n\nvar _inventory = require(\"@/api/inventory\");\n\nvar _product = require(\"@/api/product\");\n\nvar _waves = _interopRequireDefault(require(\"@/directive/waves\"));\n\nvar _utils = require(\"@/utils\");\n\nvar _Pagination = _interopRequireDefault(require(\"@/components/Pagination\"));\n\nvar _vuex = require(\"vuex\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// waves directive\n// secondary package based on el-pagination\nvar _default = {\n  name: 'ComplexTable',\n  components: {\n    Pagination: _Pagination.default\n  },\n  directives: {\n    waves: _waves.default\n  },\n  filters: {},\n  data: function data() {\n    return {\n      tableKey: 0,\n      inventories: null,\n      total: 0,\n      listLoading: true,\n      inventoryOutTypes: [],\n      productTypes: [],\n      productSubTypes: [],\n      selectedProducts: [],\n      products: [],\n      resalers: [],\n      salesChannel: [],\n      events: [],\n      listQuery: {\n        inventory_out_id: undefined,\n        inventory_out_type: undefined,\n        sales_channel: undefined,\n        page: 1,\n        limit: 10,\n        product_type: undefined,\n        product_sub_type: undefined,\n        product: undefined,\n        resaler_id: undefined,\n        event_id: undefined\n      },\n      temp: {\n        inventory_out_type: undefined,\n        products: [{\n          product_type: '',\n          product_sub_type: '',\n          product_id: '',\n          quantity: 0,\n          cost: undefined,\n          price: undefined,\n          discount: 0,\n          discount_rate: 1,\n          note: undefined,\n          key: 1,\n          total_price: 0\n        }],\n        order_total_price: 0,\n        order_total_profit: 0,\n        coupon: 0,\n        discount: 1,\n        shipping_cost: 0,\n        other_cost: 0,\n        sales_channel: undefined,\n        resaler_id: undefined,\n        event_id: undefined,\n        note: undefined,\n        fully_paid: true,\n        special_type: false\n      },\n      dialogFormVisible: false,\n      rowSpans: null\n    };\n  },\n  created: function created() {\n    this.getInventoryOut();\n    this.getInventoryOutCount();\n    this.getProductTypes();\n    this.getInventoryOutTypes();\n    this.getResalers();\n    this.getSalesChannels();\n    this.getEvents();\n  },\n  computed: (0, _objectSpread2.default)({}, (0, _vuex.mapGetters)(['id'])),\n  methods: {\n    calculateRowSpan: function calculateRowSpan() {\n      var g = [];\n      var count = 0;\n      this.inventories.forEach(function (i) {\n        var found = false;\n        g.forEach(function (t) {\n          if (t.id === i.id) {\n            found = true;\n            t.end++;\n            t.rowSpan++;\n            count = t.start + t.rowSpan;\n          }\n        });\n\n        if (!found) {\n          var newT = {\n            id: i.id,\n            start: count,\n            end: count + 1,\n            rowSpan: 1\n          };\n          count++;\n          g.push(newT);\n        }\n      });\n      this.rowSpans = g;\n    },\n    getInventoryOut: function getInventoryOut() {\n      var _this = this;\n\n      this.listLoading = true;\n      (0, _inventory.fetchAllInventoryOut)({\n        filter_data: this.listQuery\n      }).then(function (response) {\n        _this.inventories = response.data;\n        _this.listLoading = false;\n\n        _this.calculateRowSpan();\n\n        var g = [];\n\n        _this.inventories.forEach(function (i) {\n          i.total_price = (i.per_item_price_atm * i.per_product_discount_ratio - i.per_product_discount) * i.quantity;\n          i.total_profit = i.total_price - i.per_item_cost_atm * i.quantity;\n          var found = false;\n          g.forEach(function (t) {\n            if (t.id === i.id) {\n              found = true;\n              t.order_total_price = t.order_total_price + i.total_price;\n              t.order_total_profit = t.order_total_profit + i.total_profit;\n            }\n          });\n\n          if (!found) {\n            var t = {\n              id: i.id,\n              order_total_price: i.total_price,\n              order_total_profit: i.total_profit\n            };\n            g.push(t);\n          }\n        });\n\n        g.forEach(function (t) {\n          _this.inventories.forEach(function (i) {\n            if (t.id === i.id) {\n              i.order_total_price = t.order_total_price - i.coupon - i.discount;\n              i.order_total_profit = t.order_total_profit - i.shipping_cost - i.other_cost;\n            }\n          });\n        });\n      }).catch(function (err) {\n        _this.$message({\n          message: '读取库存失败，请联系徐神检查',\n          type: 'error'\n        });\n\n        _this.listLoading = false;\n      });\n    },\n    getInventoryOutTypes: function getInventoryOutTypes() {\n      var _this2 = this;\n\n      (0, _inventory.getAllInventoryOutTypes)().then(function (response) {\n        console.log(response);\n        _this2.inventoryOutTypes = response;\n      });\n    },\n    getInventoryOutCount: function getInventoryOutCount() {\n      var _this3 = this;\n\n      (0, _inventory.getAllInventoryOutCount)().then(function (response) {\n        _this3.total = response.total;\n      });\n    },\n    getProductTypes: function getProductTypes() {\n      var _this4 = this;\n\n      (0, _product.getAllProductType)().then(function (response) {\n        _this4.productTypes = response;\n      });\n    },\n    getSubType: function getSubType(productType, item) {\n      var _this5 = this;\n\n      this.selectedProducts = [];\n      this.listQuery.product = undefined;\n      this.productSubTypes = [];\n      this.listQuery.product_sub_type = undefined;\n\n      if (productType) {\n        (0, _product.getProductSubType)({\n          product_type_id: productType\n        }).then(function (response) {\n          _this5.productSubTypes = response;\n        });\n      }\n\n      if (item) {\n        item.product_sub_type = undefined;\n        item.product_id = undefined;\n        item.cost = undefined;\n        item.size = undefined;\n        item.quantity = 0;\n        item.total_price = 0;\n        item.discount = 0;\n        item.discount_ratio = 1;\n      }\n    },\n    getSelectedProducts: function getSelectedProducts(subType) {\n      var _this6 = this;\n\n      this.selectedProducts = [];\n      this.listQuery.product = undefined;\n\n      if (subType) {\n        (0, _product.getProductBySubType)({\n          product_sub_type: subType\n        }).then(function (response) {\n          _this6.selectedProducts = response;\n        });\n      }\n    },\n    getProductBySubType: function getProductBySubType(subType, item) {\n      var _this7 = this;\n\n      if (subType) {\n        (0, _product.getProductBySubType)({\n          product_sub_type: subType\n        }).then(function (response) {\n          _this7.products = response;\n        });\n      }\n\n      if (item) {\n        item.product_id = undefined;\n        item.cost = undefined;\n        item.size = undefined;\n        item.quantity = 0;\n        item.total_price = 0;\n        item.discount = 0;\n        item.discount_ratio = 1;\n      }\n    },\n    getResalers: function getResalers() {\n      var _this8 = this;\n\n      (0, _inventory.getAllResalers)().then(function (response) {\n        _this8.resalers = response;\n      });\n    },\n    getEvents: function getEvents() {\n      var _this9 = this;\n\n      (0, _inventory.getAllEvents)().then(function (response) {\n        _this9.events = response;\n      });\n    },\n    getSalesChannels: function getSalesChannels() {\n      var _this10 = this;\n\n      (0, _inventory.getAllSalesChannel)().then(function (response) {\n        _this10.salesChannel = response;\n      });\n    },\n    readProductInfo: function readProductInfo(item) {\n      this.products.forEach(function (p) {\n        if (p.id === item.product_id) {\n          item.size = p.size;\n          item.cost = p.cost;\n          item.price = p.price;\n        }\n      });\n    },\n    calculateTotalPrice: function calculateTotalPrice(item) {\n      item.total_price = Math.round((item.price * item.discount_rate - item.discount) * item.quantity * 100) / 100;\n      this.calculateOrderPrice();\n    },\n    calculateOrderPrice: function calculateOrderPrice() {\n      console.log('sdfsfsfs');\n      var total = 0;\n      this.temp.products.forEach(function (p) {\n        console.log(p);\n        total = total + p.total_price;\n      });\n      this.temp.order_total_price = total * this.temp.discount - this.temp.coupon;\n      this.temp.order_total_profit = total * this.temp.discount - this.temp.coupon - this.temp.shipping_cost - this.temp.other_cost;\n    },\n    objectSpanMethod: function objectSpanMethod(_ref) {\n      var row = _ref.row,\n          column = _ref.column,\n          rowIndex = _ref.rowIndex,\n          columnIndex = _ref.columnIndex;\n\n      if (columnIndex < 4 || columnIndex >= 14 && columnIndex < 22) {\n        var data = {\n          rowspan: 0,\n          colspan: 0\n        };\n        this.rowSpans.forEach(function (i) {\n          if (rowIndex >= i.start && rowIndex < i.end && (rowIndex - i.start) % i.rowSpan === 0) {\n            data = {\n              rowspan: i.rowSpan,\n              colspan: 1\n            };\n            return;\n          }\n        });\n        return data;\n      }\n    },\n    handleFilter: function handleFilter() {\n      this.listQuery.page = 1;\n      this.getInventoryOut();\n    },\n    addMoreProduct: function addMoreProduct() {\n      this.temp.products.push({\n        product_type: '',\n        product_sub_type: '',\n        product_id: '',\n        quantity: undefined,\n        cost: undefined,\n        price: undefined,\n        discount: 0,\n        discount_rate: 1,\n        note: undefined,\n        key: this.temp.products.length + 1,\n        total_price: 0\n      });\n    },\n    removeProduct: function removeProduct(itemIndex) {\n      this.$delete(this.temp.products, itemIndex);\n    },\n    handleCreate: function handleCreate() {\n      var _this11 = this;\n\n      this.dialogFormVisible = true;\n      this.$nextTick(function () {\n        _this11.$refs['dataForm'].clearValidate();\n      });\n    },\n    addNewInventoryOut: function addNewInventoryOut() {\n      var _this12 = this;\n\n      this.$confirm('确定添加?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        _this12.sendAddInventoryOutRequest();\n      }).catch(function () {});\n    },\n    sendAddInventoryOutRequest: function sendAddInventoryOutRequest() {\n      var _this13 = this;\n\n      if (!this.temp.inventory_out_type) {\n        this.$message({\n          message: '入库类型必须填写',\n          type: 'error'\n        });\n      } else if (this.temp.products.length === 0) {\n        this.$message({\n          message: '至少要有一个或以上的产品入库',\n          type: 'error'\n        });\n      } else {\n        var data = {\n          inventory_out_data: {\n            type: this.temp.inventory_out_type,\n            coupon: this.temp.coupon,\n            discount: this.temp.discount,\n            shipping_cost: this.temp.shipping_cost,\n            other_cost: this.temp.other_cost,\n            sales_channel: this.temp.sales_channel,\n            resaler_id: this.temp.resaler_id,\n            event_id: this.temp.event_id,\n            fully_paid: this.temp.fully_paid ? 1 : 0,\n            special_type: this.temp.special_type ? 1 : 0,\n            added_by: this.id,\n            note: this.temp.note\n          },\n          product_data: []\n        };\n        console.log(data);\n        this.temp.products.forEach(function (p) {\n          var d = {\n            product_id: p.product_id,\n            quantity: p.quantity,\n            cost: p.cost,\n            price: p.price,\n            discount: p.discount,\n            discount_ratio: p.discount_rate\n          };\n          data.product_data.push(d);\n        });\n        this.listLoading = true;\n        (0, _inventory.addNewInventoryOut)(data).then(function (response) {\n          _this13.listLoading = false;\n\n          _this13.$alert('库存添加成功', '成功', {\n            confirmButtonText: '确定',\n            callback: function callback(action) {\n              _this13.page = 1;\n\n              _this13.getInventoryOut();\n\n              _this13.dialogFormVisible = false;\n              _this13.temp = {\n                inventory_in_type: undefined,\n                products: [{\n                  product_type: '',\n                  product_sub_type: '',\n                  product_id: '',\n                  quantity: undefined,\n                  cost: undefined,\n                  size: '',\n                  key: 1\n                }],\n                note: undefined\n              };\n            }\n          });\n        }).catch(function (err) {\n          _this13.$message({\n            message: '添加库存失败，请联系徐神检查',\n            type: 'error'\n          });\n\n          _this13.listLoading = false;\n        });\n      }\n    }\n  }\n};\nexports.default = _default;",{"version":3,"sources":["inventory-out.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <h2>筛选结果</h2>\n      <el-input v-model=\"listQuery.inventory_out_id\" placeholder=\"出库批次\" style=\"width: 150px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-select v-model=\"listQuery.inventory_out_type\" placeholder=\"出库类型\" clearable style=\"width: 150px; margin-left: 15px;\" class=\"filter-item\">\n        <el-option v-for=\"item in inventoryOutTypes\" :key=\"item.id\" :label=\"item.title\" :value=\"item.id\" />\n      </el-select>\n      <el-select v-if=\"listQuery.inventory_type === 1\" v-model=\"listQuery.sales_channel\" placeholder=\"销售渠道\" clearable style=\"width: 150px; margin-left: 15px;\" class=\"filter-item\">\n        <el-option v-for=\"item in salesChannel\" :key=\"item.id\" :label=\"item.title\" :value=\"item.id\" />\n      </el-select>\n      <el-select v-if=\"listQuery.inventory_type === 2\" v-model=\"listQuery.event_id\" placeholder=\"活动类型\" clearable style=\"width: 150px; margin-left: 15px;\" class=\"filter-item\">\n        <el-option v-for=\"item in events\" :key=\"item.id\" :label=\"item.title\" :value=\"item.id\" />\n      </el-select>\n      <el-select v-if=\"listQuery.inventory_type === 3\" v-model=\"listQuery.resaler_id\" placeholder=\"分销渠道\" clearable style=\"width: 150px; margin-left: 15px;\" class=\"filter-item\">\n        <el-option v-for=\"item in resalers\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\" />\n      </el-select>\n      <el-select v-model=\"listQuery.product_type\" placeholder=\"产品类型\" clearable style=\"width: 150px; margin-left: 15px;\" class=\"filter-item\" @change=\"getSubType(listQuery.product_type)\">\n        <el-option v-for=\"item in productTypes\" :key=\"item.id\" :label=\"item.title\" :value=\"item.id\" />\n      </el-select>\n      <el-select v-model=\"listQuery.product_sub_type\" placeholder=\"产品分类\" clearable style=\"width: 150px; margin-left: 15px;\" class=\"filter-item\"  @change=\"getSelectedProducts(listQuery.product_sub_type)\">\n        <el-option v-for=\"item in productSubTypes\" :key=\"item.id\" :label=\"item.title\" :value=\"item.id\" />\n      </el-select>\n      <el-select v-model=\"listQuery.product\" placeholder=\"产品\" clearable style=\"width: 150px; margin-left: 15px;\" class=\"filter-item\">\n        <el-option v-for=\"item in selectedProducts\" :key=\"item.id\" :label=\"item.title\" :value=\"item.id\" />\n      </el-select>\n      <el-button v-waves class=\"filter-item\" type=\"primary\" icon=\"el-icon-search\" @click=\"handleFilter\" style=\"width: 100px; margin-left: 15px;\">\n        搜索\n      </el-button>\n      <el-button class=\"filter-item\" style=\"width: 200px; margin-left: 10px;\" type=\"success\" icon=\"el-icon-edit\" @click=\"handleCreate\">\n        添加新出库\n      </el-button>\n    </div>\n\n    <h2>出库详情</h2>\n    <el-table\n      :key=\"tableKey\"\n      v-loading=\"listLoading\"\n      :data=\"inventories\"\n      :span-method=\"objectSpanMethod\"\n      border\n      fit\n      style=\"width: 100%;\"\n    >\n      <el-table-column label=\"订单ID\" prop=\"id\" width=\"80px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.id }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"出库类型\" prop=\"inventory_type\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.inventory_out_type }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"出库时间\" prop=\"inventory_type\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{moment(row.created_at).format('YYYY-MM-DD')}}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"出库渠道\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.sales_channel || row.resaler_name || row.event_title }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"产品类型\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <el-tag class=\"tag\" :color=\"row.tag_color\">{{ row.product_type }}</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"产品细类\" width=\"140px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <el-tag class=\"sub_type_tag\" :color=\"row.sub_type_tag_color\">{{ row.product_sub_type }}</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"产品名称\" width=\"150px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span class=\"link-type\" @click=\"handleUpdate(row)\">{{ row.product_title }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"产品型号\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.size }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"出库数量\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.quantity }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"产品成本\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>￥{{ row.per_item_cost_atm }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"出库价格\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>￥{{ row.per_item_price_atm }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"单品优惠\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>￥{{ row.per_product_discount }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"单品折扣\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.per_product_discount_ratio * 100 }}%</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"单品总价\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>￥{{ row.total_price}}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"运费成本\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>￥{{ row.shipping_cost }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"其他成本\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>￥{{ row.other_cost }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"订单优惠\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>￥{{ row.coupon }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"订单折扣\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>￥{{ row.discount }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"全额付款\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.fully_paid === 1 ? '是' : '否' }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"特殊状态\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.special_type === 1 ? '是' : '否' }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"录入人\" width=\"150px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.added_by_name }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"查看订单详情\" width=\"150px\" align=\"center\">\n        <el-button type=\"primary\" plain @click=\"addMoreProduct\">详情</el-button>\n      </el-table-column>\n    </el-table>\n\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.limit\" @pagination=\"getInventoryOut\" />\n\n    <el-dialog title=\"添加新出库\" :visible.sync=\"dialogFormVisible\" width=\"80%\">\n      <el-form ref=\"dataForm\"\n        :model=\"temp\" \n        label-position=\"left\" \n        label-width=\"10px\" \n        style=\"margin-left:20px;\">\n        <div>\n          <h3 style=\"display: inline-block; width: 100px;\"> 出库类型 </h3>\n          <el-form-item prop=\"type\" style=\"display: inline-block;\">\n            <el-select v-model=\"temp.inventory_out_type\" placeholder=\"选择入库类型\">\n              <el-option v-for=\"item in inventoryOutTypes\" :key=\"item.id\" :label=\"item.title\" :value=\"item.id\" />\n            </el-select>\n          </el-form-item>\n        </div>\n        <div v-if=\"temp.inventory_out_type === 1\">\n          <h3 style=\"display: inline-block; width: 100px;\"> 直销渠道 </h3>\n          <el-form-item prop=\"type\" style=\"display: inline-block;\">\n            <el-select v-model=\"temp.sales_channel\" placeholder=\"选择入库类型\">\n              <el-option v-for=\"item in salesChannel\" :key=\"item.id\" :label=\"item.title\" :value=\"item.id\" />\n            </el-select>\n          </el-form-item>\n        </div>\n        <div v-if=\"temp.inventory_out_type === 2\">\n          <h3 style=\"display: inline-block; width: 100px;\"> 活动名称 </h3>\n          <el-form-item prop=\"type\" style=\"display: inline-block;\">\n            <el-select v-model=\"temp.event\" placeholder=\"选择入库类型\">\n              <el-option v-for=\"item in events\" :key=\"item.id\" :label=\"item.title\" :value=\"item.id\" />\n            </el-select>\n          </el-form-item>\n        </div>\n        <div v-if=\"temp.inventory_out_type === 3\">\n          <h3 style=\"display: inline-block; width: 100px;\"> 分销渠道 </h3>\n          <el-form-item prop=\"type\" style=\"display: inline-block;\">\n            <el-select v-model=\"temp.event\" placeholder=\"选择入库类型\">\n              <el-option v-for=\"item in resalers\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\" />\n            </el-select>\n          </el-form-item>\n        </div>\n        <div>\n          <h3 style=\"display: inline-block; width: 100px; vertical-align: top; margin-top: 0;\"> 出库产品 </h3>\n          <div style=\"display: inline-block;\">\n            <div style=\" margin-bottom: 5px;\">\n              <div class=\"input-title input-title-extra-long\">产品类型</div>\n              <div class=\"input-title input-title-extra-long\">产品分类</div>\n              <div class=\"input-title input-title-extra-long\">产品名称</div>\n              <div class=\"input-title input-title-short\">零售价</div>\n              <div class=\"input-title input-title-short\">出库数量</div>\n              <div class=\"input-title input-title-short\">产品优惠</div>\n              <div class=\"input-title input-title-short\">产品折扣</div>\n              <div class=\"input-title input-title-extra-long\">总价</div>\n            </div>\n            <el-form-item v-for=\"(item, index) in temp.products\" \n              label=\"\" :key=\"item.id\" prop=\"product\" style=\"margin-bottom: 10px;\">\n              <el-select v-model=\"item.product_type\" placeholder=\"产品类型\" \n                clearable style=\"width: 150px;\" class=\"filter-item\" \n                @change=\"getSubType(item.product_type, item)\"\n                @clear=\"getSubType(item.product_type, item)\">\n                <el-option v-for=\"item in productTypes\" :key=\"item.id\" :label=\"item.title\" :value=\"item.id\" />\n              </el-select>\n              <el-select v-model=\"item.product_sub_type\" class=\"filter-item inventory-in-input-extra\" placeholder=\"产品分类\" \n                clearable @change=\"getProductBySubType(item.product_sub_type, item)\" \n                @clear=\"getProductBySubType(item.product_sub_type, item)\">\n                <el-option v-for=\"item in productSubTypes\" :key=\"item.id\" :label=\"item.title\" :value=\"item.id\" />\n              </el-select>\n              <el-select v-model=\"item.product_id\" class=\"filter-item inventory-in-input-extra\" placeholder=\"产品名称\" \n                clearable @change=\"readProductInfo(item)\"\n                @clear=\"readProductInfo(item)\">\n                <el-option v-for=\"item in products\" :key=\"item.id\" :label=\"item.title\" :value=\"item.id\" />\n              </el-select>\n              <el-input placeholder=\"零售价\" v-model=\"item.price\" :disabled=\"true\" class=\"filter-item inventory-in-input-short\" />\n              <el-input v-model=\"item.quantity\" placeholder=\"数量\" class=\"filter-item inventory-in-input-short\" clearable @change=\"calculateTotalPrice(item)\" />\n              <el-input v-model=\"item.discount\" placeholder=\"产品优惠\" class=\"filter-item inventory-in-input-short\" clearable @change=\"calculateTotalPrice(item)\"  />\n              <el-input v-model=\"item.discount_rate\" placeholder=\"折扣率\" class=\"filter-item inventory-in-input-short\" clearable @change=\"calculateTotalPrice(item)\"  />\n              <el-input v-model=\"item.total_price\" placeholder=\"总价\" class=\"filter-item inventory-in-input-extra\" clearable :disabled=\"true\"/>\n              <el-button style=\"margin-left: 10px;\" type=\"danger\" icon=\"el-icon-delete\" @click=\"removeProduct(index)\" />\n            </el-form-item>\n\n            <el-form-item>\n              <el-button style=\"width: 150px;\" type=\"primary\" plain @click=\"addMoreProduct\">添加产品</el-button>\n              <div> 产品折扣为0-1，例如：9折，则填写0.9</div>\n              <div> 总价 =（零售价*产品折扣 - 产品优惠）*出库数量</div>\n            </el-form-item>\n          </div>\n          <div style=\" margin-bottom: 20px; \">\n            <h3 class=\"section-title\"> 优惠信息 </h3>\n            <div style=\"display: inline-block; width: 150px;\">\n              <h3 class=\"middle-title\"> 订单优惠券 </h3>\n              <el-input v-model=\"temp.coupon\" placeholder=\"订单优惠券\" class=\"filter-item\" clearable @change=\"calculateOrderPrice()\" />\n            </div>\n            <div style=\"margin-left: 10px; display: inline-block; width: 150px;\">\n              <h3 class=\"middle-title\"> 订单折扣 </h3>\n              <el-input v-model=\"temp.discount\" placeholder=\"订单折扣\" class=\"filter-item\" clearable @change=\"calculateOrderPrice()\" />\n            </div>\n            <div style=\"margin-left: 10px; display: inline-block; width: 150px;\">\n              <h3 class=\"middle-title\"> 运费 </h3>\n              <el-input v-model=\"temp.shipping_cost\" placeholder=\"运费\" class=\"filter-item\" clearable @change=\"calculateOrderPrice()\" />\n            </div>\n            <div style=\"margin-left: 10px; display: inline-block; width: 150px;\">\n              <h3 class=\"middle-title\"> 其他费用 </h3>\n              <el-input v-model=\"temp.other_cost\" placeholder=\"其他费用\" class=\"filter-item\" clearable @change=\"calculateOrderPrice()\" />\n            </div>\n          </div>\n          <div style=\" margin-bottom: 20px; \">\n            <h3 class=\"section-title\"> 汇总信息 </h3>\n            <div style=\"display: inline-block; width: 150px;\">\n              <h3 class=\"middle-title\"> 订单总价 </h3>\n              <el-input v-model=\"temp.order_total_price\" placeholder=\"订单总价\" class=\"filter-item\" clearable :disabled=\"true\" />\n            </div>\n            <div style=\"margin-left: 10px; display: inline-block; width: 150px;\">\n              <h3 class=\"middle-title\"> 订单总利润 </h3>\n              <el-input v-model=\"temp.order_total_profit\" placeholder=\"订单总利润\" class=\"filter-item\" clearable :disabled=\"true\" />\n            </div>\n            <div style=\"margin-left: 10px; display: inline-block; width: 150px;\">\n              <h3 class=\"block-title\"> 是否全额付款 </h3>\n              <el-checkbox v-model=\"temp.fully_paid\">全额付款</el-checkbox>\n            </div>\n            <div style=\"margin-left: 10px; display: inline-block; width: 150px;\">\n              <h3 class=\"block-title\"> 特殊状态 </h3>\n              <el-checkbox v-model=\"temp.special_type\">特殊状态</el-checkbox>\n            </div>\n          </div>\n          <div>\n            <h3 class=\"section-title\"> 出库备注 </h3>\n            <el-input\n              type=\"textarea\"\n              :autosize=\"{ minRows: 2, maxRows: 4}\"\n              placeholder=\"备注\"\n              v-model=\"temp.note\"\n              style=\"width: 70%\" />\n          </div>\n          <!-- <div>\n            <h3 class=\"section-title-large\"> 上传合同或凭证 </h3>\n            <el-upload\n              class=\"upload-demo\"\n              drag\n              action=\"https://jsonplaceholder.typicode.com/posts/\"\n              multiple>\n              <i class=\"el-icon-upload\"></i>\n              <div class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\n            </el-upload>\n          </div> -->\n        </div>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">\n          取消\n        </el-button>\n        <el-button type=\"primary\" @click=\"addNewInventoryOut()\">\n          提交\n        </el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { \n  fetchAllInventoryOut, \n  getAllInventoryOutCount, \n  getAllInventoryInTypes, \n  getAllResalers, \n  getAllSalesChannel,\n  getAllEvents,\n  getAllInventoryOutTypes,\n  addNewInventoryOut } from '@/api/inventory'\nimport { getAllProductType, getProductSubType, getProductBySubType } from '@/api/product'\n\nimport waves from '@/directive/waves' // waves directive\nimport { parseTime } from '@/utils'\nimport Pagination from '@/components/Pagination' // secondary package based on el-pagination\nimport { mapGetters } from 'vuex'\n\nexport default {\n  name: 'ComplexTable',\n  components: { Pagination },\n  directives: { waves },\n  filters: {},\n  data() {\n    return {\n      tableKey: 0,\n      inventories: null,\n      total: 0,\n      listLoading: true,\n      inventoryOutTypes:[],\n      productTypes: [],\n      productSubTypes: [],\n      selectedProducts: [],\n      products: [],\n      resalers: [],\n      salesChannel: [],\n      events: [],\n      listQuery: {\n        inventory_out_id: undefined,\n        inventory_out_type: undefined,\n        sales_channel: undefined,\n        page: 1,\n        limit: 10,\n        product_type: undefined,\n        product_sub_type: undefined,\n        product: undefined,\n        resaler_id: undefined,\n        event_id: undefined\n      },\n      temp: {\n        inventory_out_type: undefined,\n        products: [{\n            product_type: '',\n            product_sub_type: '',\n            product_id: '',\n            quantity: 0,\n            cost: undefined,\n            price: undefined,\n            discount: 0,\n            discount_rate: 1,\n            note: undefined,\n            key: 1,\n            total_price: 0\n          }\n        ],\n        order_total_price: 0,\n        order_total_profit: 0,\n        coupon: 0,\n        discount: 1,\n        shipping_cost: 0,\n        other_cost: 0,\n        sales_channel: undefined,\n        resaler_id: undefined,\n        event_id: undefined,\n        note: undefined,\n        fully_paid: true,\n        special_type: false\n      },\n      dialogFormVisible: false,\n      rowSpans: null\n    }\n  },\n  created() {\n    this.getInventoryOut()\n    this.getInventoryOutCount()\n    this.getProductTypes()\n    this.getInventoryOutTypes()\n    this.getResalers()\n    this.getSalesChannels()\n    this.getEvents()\n  },\n  computed: {\n    ...mapGetters([\n      'id'\n    ])\n  },\n  methods: {\n    calculateRowSpan() {\n      let g = []\n      let count = 0\n      this.inventories.forEach(i => {\n        let found = false\n        g.forEach(t => {\n          if (t.id === i.id) {\n            found = true\n            t.end++\n            t.rowSpan++\n            count = t.start + t.rowSpan\n          }\n        })\n\n        if (!found) {\n          let newT = {\n            id: i.id,\n            start: count,\n            end: count+1,\n            rowSpan: 1\n          }\n          count++\n          g.push(newT)\n        }\n      });\n      this.rowSpans = g;\n    },\n    getInventoryOut() {\n      this.listLoading = true\n      fetchAllInventoryOut({ filter_data: this.listQuery })\n        .then(response => {\n          this.inventories = response.data\n          this.listLoading = false\n          this.calculateRowSpan()\n\n          let g = []\n          this.inventories.forEach(i => {\n            i.total_price = ((i.per_item_price_atm * i.per_product_discount_ratio) - i.per_product_discount) * i.quantity\n            i.total_profit = i.total_price - (i.per_item_cost_atm * i.quantity)\n            let found = false\n            g.forEach(t => {\n              if (t.id === i.id) {\n                found = true\n                t.order_total_price = t.order_total_price + i.total_price\n                t.order_total_profit = t.order_total_profit + i.total_profit\n              }\n            })\n\n            if (!found) {\n              let t = {\n                id: i.id,\n                order_total_price: i.total_price,\n                order_total_profit: i.total_profit\n              }\n\n              g.push(t)\n            }\n          })\n\n          g.forEach(t => {\n            this.inventories.forEach(i => {\n              if (t.id === i.id) {\n                i.order_total_price = t.order_total_price - i.coupon - i.discount\n                i.order_total_profit = t.order_total_profit - i.shipping_cost - i.other_cost\n              }              \n            })\n          })\n        })\n        .catch(err => {\n          this.$message({\n            message: '读取库存失败，请联系徐神检查',\n            type: 'error'\n          })\n          this.listLoading = false\n        })\n    },\n    getInventoryOutTypes() {\n      getAllInventoryOutTypes()\n        .then(response => {\n          console.log(response)\n          this.inventoryOutTypes = response\n        })\n    },\n    getInventoryOutCount() {\n      getAllInventoryOutCount()\n        .then(response => {\n          this.total = response.total\n        })\n    },\n    getProductTypes() {\n      getAllProductType()\n        .then(response => {\n          this.productTypes = response\n        })\n    },\n    getSubType(productType, item) {\n      this.selectedProducts =[]\n      this.listQuery.product = undefined\n      this.productSubTypes = []\n      this.listQuery.product_sub_type = undefined\n\n      if (productType) {\n        getProductSubType({product_type_id: productType})\n          .then(response => {\n            this.productSubTypes = response\n          })\n      }\n\n      if (item) {\n        item.product_sub_type = undefined\n        item.product_id = undefined\n        item.cost = undefined\n        item.size = undefined\n        item.quantity = 0\n        item.total_price = 0\n        item.discount = 0\n        item.discount_ratio = 1\n      }\n    },\n    getSelectedProducts(subType) {\n      this.selectedProducts =[]\n      this.listQuery.product = undefined\n\n      if (subType) {\n        getProductBySubType({product_sub_type: subType})\n            .then(response => {\n              this.selectedProducts = response\n            })\n      }\n    },\n    getProductBySubType(subType, item) {\n      if (subType) {\n        getProductBySubType({product_sub_type: subType})\n          .then(response => {\n            this.products = response\n          })\n      }\n\n      if (item) {\n        item.product_id = undefined\n        item.cost = undefined\n        item.size = undefined\n        item.quantity = 0\n        item.total_price = 0\n        item.discount = 0\n        item.discount_ratio = 1\n      }\n    },\n    getResalers() {\n      getAllResalers()\n        .then(response => {\n          this.resalers = response\n        })\n    },\n    getEvents() {\n      getAllEvents()\n        .then(response => {\n          this.events = response\n        })\n    },\n    getSalesChannels() {\n      getAllSalesChannel()\n        .then(response => {\n          this.salesChannel = response\n        })\n    },\n    readProductInfo(item) {\n      this.products.forEach(p => {\n        if (p.id === item.product_id) {\n          item.size = p.size;\n          item.cost = p.cost;\n          item.price = p.price;\n        }\n      })\n    },\n    calculateTotalPrice(item) {\n      item.total_price = Math.round(((item.price * item.discount_rate) - item.discount) * item.quantity * 100) / 100\n      this.calculateOrderPrice()\n    },\n    calculateOrderPrice() {\n      console.log('sdfsfsfs')\n      let total = 0\n      this.temp.products.forEach(p => {\n        console.log(p)\n        total = total + p.total_price;\n      })\n      this.temp.order_total_price = total * this.temp.discount - this.temp.coupon;\n      this.temp.order_total_profit = total * this.temp.discount - this.temp.coupon - this.temp.shipping_cost - this.temp.other_cost;\n    },\n    objectSpanMethod({ row, column, rowIndex, columnIndex }) {\n      if (columnIndex < 4 || (columnIndex >= 14 && columnIndex < 22)) {\n        let data = {\n          rowspan: 0,\n          colspan: 0\n        };\n        this.rowSpans.forEach(i => {\n          if (rowIndex >= i.start && rowIndex < i.end && (rowIndex - i.start) % i.rowSpan === 0) {\n            data = {\n              rowspan: i.rowSpan,\n              colspan: 1\n            };\n            return;\n          }\n        })\n\n        return data;\n      }\n        \n    },\n    handleFilter() {\n      this.listQuery.page = 1\n      this.getInventoryOut()\n    },\n    addMoreProduct() {\n      this.temp.products.push({\n        product_type: '',\n        product_sub_type: '',\n        product_id: '',\n        quantity: undefined,\n        cost: undefined,\n        price: undefined,\n        discount: 0,\n        discount_rate: 1,\n        note: undefined,\n        key: this.temp.products.length + 1,\n        total_price: 0\n      });\n    },\n    removeProduct(itemIndex) {\n      this.$delete(this.temp.products, itemIndex)\n    },\n    handleCreate() {\n      this.dialogFormVisible = true\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    addNewInventoryOut() {\n      this.$confirm('确定添加?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.sendAddInventoryOutRequest()\n      }).catch(() => {        \n      });\n    },\n    sendAddInventoryOutRequest() {\n      if (!this.temp.inventory_out_type) {\n        this.$message({\n          message: '入库类型必须填写',\n          type: 'error'\n        })\n      } else if (this.temp.products.length === 0) {\n        this.$message({\n          message: '至少要有一个或以上的产品入库',\n          type: 'error'\n        })\n      } else {\n        let data = {\n          inventory_out_data: {\n            type: this.temp.inventory_out_type,\n            coupon: this.temp.coupon,\n            discount: this.temp.discount,\n            shipping_cost: this.temp.shipping_cost,\n            other_cost: this.temp.other_cost,\n            sales_channel: this.temp.sales_channel,\n            resaler_id: this.temp.resaler_id,\n            event_id: this.temp.event_id,\n            fully_paid: this.temp.fully_paid ? 1 : 0,\n            special_type: this.temp.special_type ? 1 : 0,\n            added_by: this.id,\n            note: this.temp.note\n          },\n          product_data: [],\n        }\n\n        console.log(data)\n\n        this.temp.products.forEach(p => {\n          let d = {\n            product_id: p.product_id,\n            quantity: p.quantity,\n            cost: p.cost,\n            price: p.price,\n            discount: p.discount,\n            discount_ratio: p.discount_rate\n          }\n          data.product_data.push(d)\n        })\n\n        this.listLoading = true\n        addNewInventoryOut(data)\n          .then(response => {\n            this.listLoading = false\n            this.$alert('库存添加成功', '成功', {\n              confirmButtonText: '确定',\n              callback: action => {\n                this.page = 1\n                this.getInventoryOut()\n                this.dialogFormVisible = false;\n                this.temp = {\n                  inventory_in_type: undefined,\n                  products: [{\n                      product_type: '',\n                      product_sub_type: '',\n                      product_id: '',\n                      quantity: undefined,\n                      cost: undefined,\n                      size: '',\n                      key: 1\n                    }\n                  ],\n                  note: undefined\n                }\n              }\n            });\n          })\n          .catch(err => {\n            this.$message({\n              message: '添加库存失败，请联系徐神检查',\n              type: 'error'\n            })\n            this.listLoading = false\n          })\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n  .tag {\n    color: white;\n    font-size: 12px;\n    width: 70px;\n  }\n  .sub_type_tag {\n    color: white;\n    font-size: 12px;\n    width: 100px;\n  }\n  .input-title {\n    display: inline-block;\n    width: 120px;\n    line-height: 25px;\n    font-size: 14px;\n    margin-left: 10px;\n  }\n  .section-title {\n    display: inline-block;\n    width: 100px;\n    vertical-align: top;\n    margin-top: 0;\n  }\n  .section-title-large {\n    vertical-align: top;\n    margin-top: 30;\n  }\n  .middle-title {\n    display: inline-block;\n    vertical-align: top;\n    margin-top: 0;\n  }\n  .block-title {\n    vertical-align: top;\n    margin-top: 0;\n  }\n  .input-title-long {\n    width: 120px;\n  }\n  .input-title-short {\n    width: 80px;\n  }\n  .input-title-extra-long {\n    width: 150px;\n  }\n  .inventory-in-input {\n    width: 120px; \n    margin-left: 10px;\n  }\n  .inventory-in-input-short {\n    width: 80px; \n    margin-left: 10px;\n  }\n  .inventory-in-input-extra {\n    width: 150px; \n    margin-left: 10px;\n  }\n  .inventory-in-input-line {\n    width: 250px; \n  }\n</style>\n"],"sourceRoot":"src/views/inventory"}]}