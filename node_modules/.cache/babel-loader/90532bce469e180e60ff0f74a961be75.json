{"remainingRequest":"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/babel-loader/lib/index.js!/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/src/vendor/Export2Excel.js","dependencies":[{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/src/vendor/Export2Excel.js","mtime":1573891651606},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.export_table_to_excel = export_table_to_excel;\nexports.export_json_to_excel = export_json_to_excel;\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/@babel/runtime-corejs2/helpers/toConsumableArray\"));\n\nrequire(\"core-js/modules/es6.typed.uint8-array\");\n\nvar _fileSaver = require(\"file-saver\");\n\nvar _xlsx = _interopRequireDefault(require(\"xlsx\"));\n\n/* eslint-disable */\nfunction generateArray(table) {\n  var out = [];\n  var rows = table.querySelectorAll('tr');\n  var ranges = [];\n\n  for (var R = 0; R < rows.length; ++R) {\n    var outRow = [];\n    var row = rows[R];\n    var columns = row.querySelectorAll('td');\n\n    for (var C = 0; C < columns.length; ++C) {\n      var cell = columns[C];\n      var colspan = cell.getAttribute('colspan');\n      var rowspan = cell.getAttribute('rowspan');\n      var cellValue = cell.innerText;\n      if (cellValue !== \"\" && cellValue == +cellValue) cellValue = +cellValue; //Skip ranges\n\n      ranges.forEach(function (range) {\n        if (R >= range.s.r && R <= range.e.r && outRow.length >= range.s.c && outRow.length <= range.e.c) {\n          for (var i = 0; i <= range.e.c - range.s.c; ++i) {\n            outRow.push(null);\n          }\n        }\n      }); //Handle Row Span\n\n      if (rowspan || colspan) {\n        rowspan = rowspan || 1;\n        colspan = colspan || 1;\n        ranges.push({\n          s: {\n            r: R,\n            c: outRow.length\n          },\n          e: {\n            r: R + rowspan - 1,\n            c: outRow.length + colspan - 1\n          }\n        });\n      }\n\n      ; //Handle Value\n\n      outRow.push(cellValue !== \"\" ? cellValue : null); //Handle Colspan\n\n      if (colspan) for (var k = 0; k < colspan - 1; ++k) {\n        outRow.push(null);\n      }\n    }\n\n    out.push(outRow);\n  }\n\n  return [out, ranges];\n}\n\n;\n\nfunction datenum(v, date1904) {\n  if (date1904) v += 1462;\n  var epoch = Date.parse(v);\n  return (epoch - new Date(Date.UTC(1899, 11, 30))) / (24 * 60 * 60 * 1000);\n}\n\nfunction sheet_from_array_of_arrays(data, opts) {\n  var ws = {};\n  var range = {\n    s: {\n      c: 10000000,\n      r: 10000000\n    },\n    e: {\n      c: 0,\n      r: 0\n    }\n  };\n\n  for (var R = 0; R != data.length; ++R) {\n    for (var C = 0; C != data[R].length; ++C) {\n      if (range.s.r > R) range.s.r = R;\n      if (range.s.c > C) range.s.c = C;\n      if (range.e.r < R) range.e.r = R;\n      if (range.e.c < C) range.e.c = C;\n      var cell = {\n        v: data[R][C]\n      };\n      if (cell.v == null) continue;\n\n      var cell_ref = _xlsx.default.utils.encode_cell({\n        c: C,\n        r: R\n      });\n\n      if (typeof cell.v === 'number') cell.t = 'n';else if (typeof cell.v === 'boolean') cell.t = 'b';else if (cell.v instanceof Date) {\n        cell.t = 'n';\n        cell.z = _xlsx.default.SSF._table[14];\n        cell.v = datenum(cell.v);\n      } else cell.t = 's';\n      ws[cell_ref] = cell;\n    }\n  }\n\n  if (range.s.c < 10000000) ws['!ref'] = _xlsx.default.utils.encode_range(range);\n  return ws;\n}\n\nfunction Workbook() {\n  if (!(this instanceof Workbook)) return new Workbook();\n  this.SheetNames = [];\n  this.Sheets = {};\n}\n\nfunction s2ab(s) {\n  var buf = new ArrayBuffer(s.length);\n  var view = new Uint8Array(buf);\n\n  for (var i = 0; i != s.length; ++i) {\n    view[i] = s.charCodeAt(i) & 0xFF;\n  }\n\n  return buf;\n}\n\nfunction export_table_to_excel(id) {\n  var theTable = document.getElementById(id);\n  var oo = generateArray(theTable);\n  var ranges = oo[1];\n  /* original data */\n\n  var data = oo[0];\n  var ws_name = \"SheetJS\";\n  var wb = new Workbook(),\n      ws = sheet_from_array_of_arrays(data);\n  /* add ranges to worksheet */\n  // ws['!cols'] = ['apple', 'banan'];\n\n  ws['!merges'] = ranges;\n  /* add worksheet to workbook */\n\n  wb.SheetNames.push(ws_name);\n  wb.Sheets[ws_name] = ws;\n\n  var wbout = _xlsx.default.write(wb, {\n    bookType: 'xlsx',\n    bookSST: false,\n    type: 'binary'\n  });\n\n  (0, _fileSaver.saveAs)(new Blob([s2ab(wbout)], {\n    type: \"application/octet-stream\"\n  }), \"test.xlsx\");\n}\n\nfunction export_json_to_excel() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$multiHeader = _ref.multiHeader,\n      multiHeader = _ref$multiHeader === void 0 ? [] : _ref$multiHeader,\n      header = _ref.header,\n      data = _ref.data,\n      filename = _ref.filename,\n      _ref$merges = _ref.merges,\n      merges = _ref$merges === void 0 ? [] : _ref$merges,\n      _ref$autoWidth = _ref.autoWidth,\n      autoWidth = _ref$autoWidth === void 0 ? true : _ref$autoWidth,\n      _ref$bookType = _ref.bookType,\n      bookType = _ref$bookType === void 0 ? 'xlsx' : _ref$bookType;\n\n  /* original data */\n  filename = filename || 'excel-list';\n  data = (0, _toConsumableArray2.default)(data);\n  data.unshift(header);\n\n  for (var i = multiHeader.length - 1; i > -1; i--) {\n    data.unshift(multiHeader[i]);\n  }\n\n  var ws_name = \"SheetJS\";\n  var wb = new Workbook(),\n      ws = sheet_from_array_of_arrays(data);\n\n  if (merges.length > 0) {\n    if (!ws['!merges']) ws['!merges'] = [];\n    merges.forEach(function (item) {\n      ws['!merges'].push(_xlsx.default.utils.decode_range(item));\n    });\n  }\n\n  if (autoWidth) {\n    /*设置worksheet每列的最大宽度*/\n    var colWidth = data.map(function (row) {\n      return row.map(function (val) {\n        /*先判断是否为null/undefined*/\n        if (val == null) {\n          return {\n            'wch': 10\n          };\n        }\n        /*再判断是否为中文*/\n        else if (val.toString().charCodeAt(0) > 255) {\n            return {\n              'wch': val.toString().length * 2\n            };\n          } else {\n            return {\n              'wch': val.toString().length\n            };\n          }\n      });\n    });\n    /*以第一行为初始值*/\n\n    var result = colWidth[0];\n\n    for (var _i = 1; _i < colWidth.length; _i++) {\n      for (var j = 0; j < colWidth[_i].length; j++) {\n        if (result[j]['wch'] < colWidth[_i][j]['wch']) {\n          result[j]['wch'] = colWidth[_i][j]['wch'];\n        }\n      }\n    }\n\n    ws['!cols'] = result;\n  }\n  /* add worksheet to workbook */\n\n\n  wb.SheetNames.push(ws_name);\n  wb.Sheets[ws_name] = ws;\n\n  var wbout = _xlsx.default.write(wb, {\n    bookType: bookType,\n    bookSST: false,\n    type: 'binary'\n  });\n\n  (0, _fileSaver.saveAs)(new Blob([s2ab(wbout)], {\n    type: \"application/octet-stream\"\n  }), \"\".concat(filename, \".\").concat(bookType));\n}",{"version":3,"sources":["/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/src/vendor/Export2Excel.js"],"names":["generateArray","table","out","rows","querySelectorAll","ranges","R","length","outRow","row","columns","C","cell","colspan","getAttribute","rowspan","cellValue","innerText","forEach","range","s","r","e","c","i","push","k","datenum","v","date1904","epoch","Date","parse","UTC","sheet_from_array_of_arrays","data","opts","ws","cell_ref","XLSX","utils","encode_cell","t","z","SSF","_table","encode_range","Workbook","SheetNames","Sheets","s2ab","buf","ArrayBuffer","view","Uint8Array","charCodeAt","export_table_to_excel","id","theTable","document","getElementById","oo","ws_name","wb","wbout","write","bookType","bookSST","type","Blob","export_json_to_excel","multiHeader","header","filename","merges","autoWidth","unshift","item","decode_range","colWidth","map","val","toString","result","j"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport { saveAs } from 'file-saver'\nimport XLSX from 'xlsx'\n\nfunction generateArray(table) {\n  var out = [];\n  var rows = table.querySelectorAll('tr');\n  var ranges = [];\n  for (var R = 0; R < rows.length; ++R) {\n    var outRow = [];\n    var row = rows[R];\n    var columns = row.querySelectorAll('td');\n    for (var C = 0; C < columns.length; ++C) {\n      var cell = columns[C];\n      var colspan = cell.getAttribute('colspan');\n      var rowspan = cell.getAttribute('rowspan');\n      var cellValue = cell.innerText;\n      if (cellValue !== \"\" && cellValue == +cellValue) cellValue = +cellValue;\n\n      //Skip ranges\n      ranges.forEach(function (range) {\n        if (R >= range.s.r && R <= range.e.r && outRow.length >= range.s.c && outRow.length <= range.e.c) {\n          for (var i = 0; i <= range.e.c - range.s.c; ++i) outRow.push(null);\n        }\n      });\n\n      //Handle Row Span\n      if (rowspan || colspan) {\n        rowspan = rowspan || 1;\n        colspan = colspan || 1;\n        ranges.push({\n          s: {\n            r: R,\n            c: outRow.length\n          },\n          e: {\n            r: R + rowspan - 1,\n            c: outRow.length + colspan - 1\n          }\n        });\n      };\n\n      //Handle Value\n      outRow.push(cellValue !== \"\" ? cellValue : null);\n\n      //Handle Colspan\n      if (colspan)\n        for (var k = 0; k < colspan - 1; ++k) outRow.push(null);\n    }\n    out.push(outRow);\n  }\n  return [out, ranges];\n};\n\nfunction datenum(v, date1904) {\n  if (date1904) v += 1462;\n  var epoch = Date.parse(v);\n  return (epoch - new Date(Date.UTC(1899, 11, 30))) / (24 * 60 * 60 * 1000);\n}\n\nfunction sheet_from_array_of_arrays(data, opts) {\n  var ws = {};\n  var range = {\n    s: {\n      c: 10000000,\n      r: 10000000\n    },\n    e: {\n      c: 0,\n      r: 0\n    }\n  };\n  for (var R = 0; R != data.length; ++R) {\n    for (var C = 0; C != data[R].length; ++C) {\n      if (range.s.r > R) range.s.r = R;\n      if (range.s.c > C) range.s.c = C;\n      if (range.e.r < R) range.e.r = R;\n      if (range.e.c < C) range.e.c = C;\n      var cell = {\n        v: data[R][C]\n      };\n      if (cell.v == null) continue;\n      var cell_ref = XLSX.utils.encode_cell({\n        c: C,\n        r: R\n      });\n\n      if (typeof cell.v === 'number') cell.t = 'n';\n      else if (typeof cell.v === 'boolean') cell.t = 'b';\n      else if (cell.v instanceof Date) {\n        cell.t = 'n';\n        cell.z = XLSX.SSF._table[14];\n        cell.v = datenum(cell.v);\n      } else cell.t = 's';\n\n      ws[cell_ref] = cell;\n    }\n  }\n  if (range.s.c < 10000000) ws['!ref'] = XLSX.utils.encode_range(range);\n  return ws;\n}\n\nfunction Workbook() {\n  if (!(this instanceof Workbook)) return new Workbook();\n  this.SheetNames = [];\n  this.Sheets = {};\n}\n\nfunction s2ab(s) {\n  var buf = new ArrayBuffer(s.length);\n  var view = new Uint8Array(buf);\n  for (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n  return buf;\n}\n\nexport function export_table_to_excel(id) {\n  var theTable = document.getElementById(id);\n  var oo = generateArray(theTable);\n  var ranges = oo[1];\n\n  /* original data */\n  var data = oo[0];\n  var ws_name = \"SheetJS\";\n\n  var wb = new Workbook(),\n    ws = sheet_from_array_of_arrays(data);\n\n  /* add ranges to worksheet */\n  // ws['!cols'] = ['apple', 'banan'];\n  ws['!merges'] = ranges;\n\n  /* add worksheet to workbook */\n  wb.SheetNames.push(ws_name);\n  wb.Sheets[ws_name] = ws;\n\n  var wbout = XLSX.write(wb, {\n    bookType: 'xlsx',\n    bookSST: false,\n    type: 'binary'\n  });\n\n  saveAs(new Blob([s2ab(wbout)], {\n    type: \"application/octet-stream\"\n  }), \"test.xlsx\")\n}\n\nexport function export_json_to_excel({\n  multiHeader = [],\n  header,\n  data,\n  filename,\n  merges = [],\n  autoWidth = true,\n  bookType = 'xlsx'\n} = {}) {\n  /* original data */\n  filename = filename || 'excel-list'\n  data = [...data]\n  data.unshift(header);\n\n  for (let i = multiHeader.length - 1; i > -1; i--) {\n    data.unshift(multiHeader[i])\n  }\n\n  var ws_name = \"SheetJS\";\n  var wb = new Workbook(),\n    ws = sheet_from_array_of_arrays(data);\n\n  if (merges.length > 0) {\n    if (!ws['!merges']) ws['!merges'] = [];\n    merges.forEach(item => {\n      ws['!merges'].push(XLSX.utils.decode_range(item))\n    })\n  }\n\n  if (autoWidth) {\n    /*设置worksheet每列的最大宽度*/\n    const colWidth = data.map(row => row.map(val => {\n      /*先判断是否为null/undefined*/\n      if (val == null) {\n        return {\n          'wch': 10\n        };\n      }\n      /*再判断是否为中文*/\n      else if (val.toString().charCodeAt(0) > 255) {\n        return {\n          'wch': val.toString().length * 2\n        };\n      } else {\n        return {\n          'wch': val.toString().length\n        };\n      }\n    }))\n    /*以第一行为初始值*/\n    let result = colWidth[0];\n    for (let i = 1; i < colWidth.length; i++) {\n      for (let j = 0; j < colWidth[i].length; j++) {\n        if (result[j]['wch'] < colWidth[i][j]['wch']) {\n          result[j]['wch'] = colWidth[i][j]['wch'];\n        }\n      }\n    }\n    ws['!cols'] = result;\n  }\n\n  /* add worksheet to workbook */\n  wb.SheetNames.push(ws_name);\n  wb.Sheets[ws_name] = ws;\n\n  var wbout = XLSX.write(wb, {\n    bookType: bookType,\n    bookSST: false,\n    type: 'binary'\n  });\n  saveAs(new Blob([s2ab(wbout)], {\n    type: \"application/octet-stream\"\n  }), `${filename}.${bookType}`);\n}\n"]}]}