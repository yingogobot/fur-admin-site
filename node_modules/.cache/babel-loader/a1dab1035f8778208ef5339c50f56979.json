{"remainingRequest":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/babel-loader/lib/index.js!/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/src/views/data/product.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/src/views/data/product.vue","mtime":1585041981638},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/@babel/runtime-corejs2/helpers/objectSpread2\"));\n\nvar _product = _interopRequireDefault(require(\"@/api/product\"));\n\nvar _utils = require(\"@/utils\");\n\nvar _Pagination = _interopRequireDefault(require(\"@/components/Pagination\"));\n\nvar _vuex = require(\"vuex\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// secondary package based on el-pagination\nvar _default = {\n  name: 'ComplexTable',\n  components: {\n    Pagination: _Pagination.default\n  },\n  filters: {},\n  data: function data() {\n    return {\n      tableKey: 0,\n      products: null,\n      productTypes: null,\n      selectedProductSubTypes: null,\n      total: 0,\n      listLoading: true,\n      dialogFormVisible: false,\n      typeRowSpans: null,\n      subTypeRowSpans: null,\n      listQuery: {\n        page: 1,\n        limit: 10\n      },\n      temp: {\n        title: null,\n        type: null,\n        sub_type: null,\n        size: null,\n        cost: null,\n        price: null,\n        note: null\n      }\n    };\n  },\n  created: function created() {},\n  computed: (0, _objectSpread2.default)({}, (0, _vuex.mapGetters)(['id'])),\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    next(function (vm) {\n      vm.getProducts();\n      vm.getCount();\n      vm.getProductTypes();\n      next();\n    });\n  },\n  methods: {\n    calculateRowSpan: function calculateRowSpan() {\n      var g = [];\n      var sg = [];\n      var count = 0;\n      var scount = 0;\n      this.products.forEach(function (i) {\n        var found = false;\n        g.forEach(function (t) {\n          if (t.product_type_id === i.product_type_id) {\n            found = true;\n            t.end++;\n            t.rowSpan++;\n            count = t.start + t.rowSpan;\n          }\n        });\n\n        if (!found) {\n          var newT = {\n            product_type_id: i.product_type_id,\n            start: count,\n            end: count + 1,\n            rowSpan: 1\n          };\n          count++;\n          g.push(newT);\n        }\n\n        var sfound = false;\n        sg.forEach(function (t) {\n          if (t.product_sub_type_id === i.product_sub_type_id) {\n            sfound = true;\n            t.end++;\n            t.rowSpan++;\n            scount = t.start + t.rowSpan;\n          }\n        });\n\n        if (!sfound) {\n          var _newT = {\n            product_sub_type_id: i.product_sub_type_id,\n            start: scount,\n            end: scount + 1,\n            rowSpan: 1\n          };\n          scount++;\n          sg.push(_newT);\n        }\n      });\n      this.typeRowSpans = g;\n      this.subTypeRowSpans = sg;\n    },\n    objectSpanMethod: function objectSpanMethod(_ref) {\n      var row = _ref.row,\n          column = _ref.column,\n          rowIndex = _ref.rowIndex,\n          columnIndex = _ref.columnIndex;\n\n      if (columnIndex === 1) {\n        var data = {\n          rowspan: 0,\n          colspan: 0\n        };\n        this.typeRowSpans.forEach(function (i) {\n          if (rowIndex >= i.start && rowIndex < i.end && (rowIndex - i.start) % i.rowSpan === 0) {\n            data = {\n              rowspan: i.rowSpan,\n              colspan: 1\n            };\n            return;\n          }\n        });\n        return data;\n      } else if (columnIndex === 2) {\n        var _data = {\n          rowspan: 0,\n          colspan: 0\n        };\n        this.subTypeRowSpans.forEach(function (i) {\n          if (rowIndex >= i.start && rowIndex < i.end && (rowIndex - i.start) % i.rowSpan === 0) {\n            _data = {\n              rowspan: i.rowSpan,\n              colspan: 1\n            };\n            return;\n          }\n        });\n        return _data;\n      }\n    },\n    getProducts: function getProducts() {\n      var _this = this;\n\n      this.listLoading = true;\n\n      _product.default.getAllProducts(this.listQuery).then(function (response) {\n        _this.products = response;\n        _this.listLoading = false;\n\n        _this.calculateRowSpan();\n      }).catch(function (err) {\n        _this.$message({\n          message: '读取库存失败，请联系徐神检查',\n          type: 'error'\n        });\n\n        _this.listLoading = false;\n      });\n    },\n    getCount: function getCount() {\n      var _this2 = this;\n\n      _product.default.getAllProductCount().then(function (response) {\n        _this2.total = response.total;\n      });\n    },\n    getProductTypes: function getProductTypes() {\n      var _this3 = this;\n\n      _product.default.getAllProductType().then(function (response) {\n        _this3.productTypes = response;\n      });\n    },\n    getSubType: function getSubType(productType) {\n      var _this4 = this;\n\n      if (productType) {\n        _product.default.getProductSubType({\n          product_type_id: productType\n        }).then(function (response) {\n          _this4.selectedProductSubTypes = response;\n        });\n      }\n    },\n    handleCreate: function handleCreate() {\n      this.dialogFormVisible = true;\n    },\n    addNewProduct: function addNewProduct() {\n      var _this5 = this;\n\n      this.$confirm('确定添加?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        _this5.sendNewProductRequest();\n      }).catch(function (err) {\n        console.log(err);\n      });\n    },\n    sendNewProductRequest: function sendNewProductRequest() {\n      var _this6 = this;\n\n      if (!this.temp.title) {\n        this.$message({\n          message: '必须填写产品名称',\n          type: 'error'\n        });\n      } else {\n        this.listLoading = true;\n\n        _product.default.addProduct(this.temp).then(function (response) {\n          _this6.listLoading = false;\n\n          _this6.$alert('添加成功', '成功', {\n            confirmButtonText: '确定',\n            callback: function callback(action) {\n              _this6.page = 1;\n\n              _this6.getProducts();\n\n              _this6.getCount();\n\n              _this6.selectedProductSubTypes = null;\n              _this6.dialogFormVisible = false;\n              _this6.temp = {\n                title: null,\n                type: null,\n                sub_type: null,\n                size: null,\n                cost: null,\n                price: null,\n                note: null\n              };\n            }\n          });\n        }).catch(function (err) {\n          console.log(err);\n\n          _this6.$message({\n            message: '添加失败，请联系徐神检查',\n            type: 'error'\n          });\n\n          _this6.listLoading = false;\n        });\n      }\n    },\n    editEvent: function editEvent() {},\n    deleteEvent: function deleteEvent(item) {\n      var _this7 = this;\n\n      this.$confirm('确定删除>>' + item.title + '<<吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        _this7.sendDeleteEventRequest(item.id);\n      }).catch(function (err) {\n        console.log(err);\n      });\n    },\n    sendDeleteEventRequest: function sendDeleteEventRequest(id) {\n      var _this8 = this;\n\n      this.listLoading = true;\n      EventAPI.deleteEvent(id).then(function (response) {\n        _this8.listLoading = false;\n\n        _this8.$alert('删除成功', '成功', {\n          confirmButtonText: '确定',\n          callback: function callback(action) {\n            _this8.page = 1;\n\n            _this8.getEvents();\n\n            _this8.getCount();\n          }\n        });\n      }).catch(function (err) {\n        console.log(err);\n\n        _this8.$message({\n          message: '删除失败，请联系徐神检查',\n          type: 'error'\n        });\n\n        _this8.listLoading = false;\n      });\n    }\n  }\n};\nexports.default = _default;",{"version":3,"sources":["product.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAuHA;;AAEA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADA;eAGA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,UAAA,EAAA;AAAA,GAFA;AAGA,EAAA,OAAA,EAAA,EAHA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,CADA;AAEA,MAAA,QAAA,EAAA,IAFA;AAGA,MAAA,YAAA,EAAA,IAHA;AAIA,MAAA,uBAAA,EAAA,IAJA;AAKA,MAAA,KAAA,EAAA,CALA;AAMA,MAAA,WAAA,EAAA,IANA;AAOA,MAAA,iBAAA,EAAA,KAPA;AAQA,MAAA,YAAA,EAAA,IARA;AASA,MAAA,eAAA,EAAA,IATA;AAUA,MAAA,SAAA,EAAA;AACA,QAAA,IAAA,EAAA,CADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAVA;AAcA,MAAA,IAAA,EAAA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,IAAA,EAAA,IAFA;AAGA,QAAA,QAAA,EAAA,IAHA;AAIA,QAAA,IAAA,EAAA,IAJA;AAKA,QAAA,IAAA,EAAA,IALA;AAMA,QAAA,KAAA,EAAA,IANA;AAOA,QAAA,IAAA,EAAA;AAPA;AAdA,KAAA;AAwBA,GA7BA;AA8BA,EAAA,OA9BA,qBA8BA,CACA,CA/BA;AAgCA,EAAA,QAAA,kCACA,sBAAA,CACA,IADA,CAAA,CADA,CAhCA;AAqCA,EAAA,gBArCA,4BAqCA,EArCA,EAqCA,IArCA,EAqCA,IArCA,EAqCA;AACA,IAAA,IAAA,CAAA,UAAA,EAAA,EAAA;AACA,MAAA,EAAA,CAAA,WAAA;AACA,MAAA,EAAA,CAAA,QAAA;AACA,MAAA,EAAA,CAAA,eAAA;AACA,MAAA,IAAA;AACA,KALA,CAAA;AAMA,GA5CA;AA6CA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,8BACA;AACA,UAAA,CAAA,GAAA,EAAA;AACA,UAAA,EAAA,GAAA,EAAA;AACA,UAAA,KAAA,GAAA,CAAA;AACA,UAAA,MAAA,GAAA,CAAA;AACA,WAAA,QAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,YAAA,KAAA,GAAA,KAAA;AACA,QAAA,CAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,cAAA,CAAA,CAAA,eAAA,KAAA,CAAA,CAAA,eAAA,EAAA;AACA,YAAA,KAAA,GAAA,IAAA;AACA,YAAA,CAAA,CAAA,GAAA;AACA,YAAA,CAAA,CAAA,OAAA;AACA,YAAA,KAAA,GAAA,CAAA,CAAA,KAAA,GAAA,CAAA,CAAA,OAAA;AACA;AACA,SAPA;;AASA,YAAA,CAAA,KAAA,EAAA;AACA,cAAA,IAAA,GAAA;AACA,YAAA,eAAA,EAAA,CAAA,CAAA,eADA;AAEA,YAAA,KAAA,EAAA,KAFA;AAGA,YAAA,GAAA,EAAA,KAAA,GAAA,CAHA;AAIA,YAAA,OAAA,EAAA;AAJA,WAAA;AAMA,UAAA,KAAA;AACA,UAAA,CAAA,CAAA,IAAA,CAAA,IAAA;AACA;;AAEA,YAAA,MAAA,GAAA,KAAA;AACA,QAAA,EAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,cAAA,CAAA,CAAA,mBAAA,KAAA,CAAA,CAAA,mBAAA,EAAA;AACA,YAAA,MAAA,GAAA,IAAA;AACA,YAAA,CAAA,CAAA,GAAA;AACA,YAAA,CAAA,CAAA,OAAA;AACA,YAAA,MAAA,GAAA,CAAA,CAAA,KAAA,GAAA,CAAA,CAAA,OAAA;AACA;AACA,SAPA;;AASA,YAAA,CAAA,MAAA,EAAA;AACA,cAAA,KAAA,GAAA;AACA,YAAA,mBAAA,EAAA,CAAA,CAAA,mBADA;AAEA,YAAA,KAAA,EAAA,MAFA;AAGA,YAAA,GAAA,EAAA,MAAA,GAAA,CAHA;AAIA,YAAA,OAAA,EAAA;AAJA,WAAA;AAMA,UAAA,MAAA;AACA,UAAA,EAAA,CAAA,IAAA,CAAA,KAAA;AACA;AACA,OA1CA;AA2CA,WAAA,YAAA,GAAA,CAAA;AACA,WAAA,eAAA,GAAA,EAAA;AACA,KAnDA;AAoDA,IAAA,gBApDA,kCAoDA;AAAA,UAAA,GAAA,QAAA,GAAA;AAAA,UAAA,MAAA,QAAA,MAAA;AAAA,UAAA,QAAA,QAAA,QAAA;AAAA,UAAA,WAAA,QAAA,WAAA;;AACA,UAAA,WAAA,KAAA,CAAA,EAAA;AACA,YAAA,IAAA,GAAA;AACA,UAAA,OAAA,EAAA,CADA;AAEA,UAAA,OAAA,EAAA;AAFA,SAAA;AAIA,aAAA,YAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,cAAA,QAAA,IAAA,CAAA,CAAA,KAAA,IAAA,QAAA,GAAA,CAAA,CAAA,GAAA,IAAA,CAAA,QAAA,GAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,OAAA,KAAA,CAAA,EAAA;AACA,YAAA,IAAA,GAAA;AACA,cAAA,OAAA,EAAA,CAAA,CAAA,OADA;AAEA,cAAA,OAAA,EAAA;AAFA,aAAA;AAIA;AACA;AACA,SARA;AAUA,eAAA,IAAA;AACA,OAhBA,MAgBA,IAAA,WAAA,KAAA,CAAA,EAAA;AACA,YAAA,KAAA,GAAA;AACA,UAAA,OAAA,EAAA,CADA;AAEA,UAAA,OAAA,EAAA;AAFA,SAAA;AAIA,aAAA,eAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,cAAA,QAAA,IAAA,CAAA,CAAA,KAAA,IAAA,QAAA,GAAA,CAAA,CAAA,GAAA,IAAA,CAAA,QAAA,GAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,OAAA,KAAA,CAAA,EAAA;AACA,YAAA,KAAA,GAAA;AACA,cAAA,OAAA,EAAA,CAAA,CAAA,OADA;AAEA,cAAA,OAAA,EAAA;AAFA,aAAA;AAIA;AACA;AACA,SARA;AAUA,eAAA,KAAA;AACA;AACA,KAtFA;AAuFA,IAAA,WAvFA,yBAuFA;AAAA;;AACA,WAAA,WAAA,GAAA,IAAA;;AACA,uBAAA,cAAA,CAAA,KAAA,SAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,QAAA,GAAA,QAAA;AACA,QAAA,KAAA,CAAA,WAAA,GAAA,KAAA;;AACA,QAAA,KAAA,CAAA,gBAAA;AACA,OALA,EAMA,KANA,CAMA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,QAAA,CAAA;AACA,UAAA,OAAA,EAAA,gBADA;AAEA,UAAA,IAAA,EAAA;AAFA,SAAA;;AAIA,QAAA,KAAA,CAAA,WAAA,GAAA,KAAA;AACA,OAZA;AAaA,KAtGA;AAuGA,IAAA,QAvGA,sBAuGA;AAAA;;AACA,uBAAA,kBAAA,GACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,QAAA,MAAA,CAAA,KAAA,GAAA,QAAA,CAAA,KAAA;AACA,OAHA;AAIA,KA5GA;AA6GA,IAAA,eA7GA,6BA6GA;AAAA;;AACA,uBAAA,iBAAA,GACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,QAAA,MAAA,CAAA,YAAA,GAAA,QAAA;AACA,OAHA;AAIA,KAlHA;AAmHA,IAAA,UAnHA,sBAmHA,WAnHA,EAmHA;AAAA;;AACA,UAAA,WAAA,EAAA;AACA,yBAAA,iBAAA,CAAA;AAAA,UAAA,eAAA,EAAA;AAAA,SAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,UAAA,MAAA,CAAA,uBAAA,GAAA,QAAA;AACA,SAHA;AAIA;AACA,KA1HA;AA2HA,IAAA,YA3HA,0BA2HA;AACA,WAAA,iBAAA,GAAA,IAAA;AACA,KA7HA;AA8HA,IAAA,aA9HA,2BA8HA;AAAA;;AACA,WAAA,QAAA,CAAA,OAAA,EAAA,IAAA,EAAA;AACA,QAAA,iBAAA,EAAA,IADA;AAEA,QAAA,gBAAA,EAAA,IAFA;AAGA,QAAA,IAAA,EAAA;AAHA,OAAA,EAIA,IAJA,CAIA,YAAA;AACA,QAAA,MAAA,CAAA,qBAAA;AACA,OANA,EAMA,KANA,CAMA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,OARA;AASA,KAxIA;AAyIA,IAAA,qBAzIA,mCAyIA;AAAA;;AACA,UAAA,CAAA,KAAA,IAAA,CAAA,KAAA,EAAA;AACA,aAAA,QAAA,CAAA;AACA,UAAA,OAAA,EAAA,UADA;AAEA,UAAA,IAAA,EAAA;AAFA,SAAA;AAIA,OALA,MAKA;AACA,aAAA,WAAA,GAAA,IAAA;;AACA,yBAAA,UAAA,CAAA,KAAA,IAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,UAAA,MAAA,CAAA,WAAA,GAAA,KAAA;;AACA,UAAA,MAAA,CAAA,MAAA,CAAA,MAAA,EAAA,IAAA,EAAA;AACA,YAAA,iBAAA,EAAA,IADA;AAEA,YAAA,QAAA,EAAA,kBAAA,MAAA,EAAA;AACA,cAAA,MAAA,CAAA,IAAA,GAAA,CAAA;;AACA,cAAA,MAAA,CAAA,WAAA;;AACA,cAAA,MAAA,CAAA,QAAA;;AACA,cAAA,MAAA,CAAA,uBAAA,GAAA,IAAA;AACA,cAAA,MAAA,CAAA,iBAAA,GAAA,KAAA;AACA,cAAA,MAAA,CAAA,IAAA,GAAA;AACA,gBAAA,KAAA,EAAA,IADA;AAEA,gBAAA,IAAA,EAAA,IAFA;AAGA,gBAAA,QAAA,EAAA,IAHA;AAIA,gBAAA,IAAA,EAAA,IAJA;AAKA,gBAAA,IAAA,EAAA,IALA;AAMA,gBAAA,KAAA,EAAA,IANA;AAOA,gBAAA,IAAA,EAAA;AAPA,eAAA;AASA;AAjBA,WAAA;AAmBA,SAtBA,EAuBA,KAvBA,CAuBA,UAAA,GAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,GAAA;;AACA,UAAA,MAAA,CAAA,QAAA,CAAA;AACA,YAAA,OAAA,EAAA,cADA;AAEA,YAAA,IAAA,EAAA;AAFA,WAAA;;AAIA,UAAA,MAAA,CAAA,WAAA,GAAA,KAAA;AACA,SA9BA;AA+BA;AACA,KAjLA;AAkLA,IAAA,SAlLA,uBAkLA,CAEA,CApLA;AAqLA,IAAA,WArLA,uBAqLA,IArLA,EAqLA;AAAA;;AACA,WAAA,QAAA,CAAA,WAAA,IAAA,CAAA,KAAA,GAAA,MAAA,EAAA,IAAA,EAAA;AACA,QAAA,iBAAA,EAAA,IADA;AAEA,QAAA,gBAAA,EAAA,IAFA;AAGA,QAAA,IAAA,EAAA;AAHA,OAAA,EAIA,IAJA,CAIA,YAAA;AACA,QAAA,MAAA,CAAA,sBAAA,CAAA,IAAA,CAAA,EAAA;AACA,OANA,EAMA,KANA,CAMA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,OARA;AASA,KA/LA;AAgMA,IAAA,sBAhMA,kCAgMA,EAhMA,EAgMA;AAAA;;AACA,WAAA,WAAA,GAAA,IAAA;AACA,MAAA,QAAA,CAAA,WAAA,CAAA,EAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,QAAA,MAAA,CAAA,WAAA,GAAA,KAAA;;AACA,QAAA,MAAA,CAAA,MAAA,CAAA,MAAA,EAAA,IAAA,EAAA;AACA,UAAA,iBAAA,EAAA,IADA;AAEA,UAAA,QAAA,EAAA,kBAAA,MAAA,EAAA;AACA,YAAA,MAAA,CAAA,IAAA,GAAA,CAAA;;AACA,YAAA,MAAA,CAAA,SAAA;;AACA,YAAA,MAAA,CAAA,QAAA;AACA;AANA,SAAA;AAQA,OAXA,EAYA,KAZA,CAYA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,GAAA;;AACA,QAAA,MAAA,CAAA,QAAA,CAAA;AACA,UAAA,OAAA,EAAA,cADA;AAEA,UAAA,IAAA,EAAA;AAFA,SAAA;;AAIA,QAAA,MAAA,CAAA,WAAA,GAAA,KAAA;AACA,OAnBA;AAoBA;AAtNA;AA7CA,C","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div>\n    <h2 class=\"title\">产品列表</h2>\n    <el-button class=\"create-button\" style=\"width: 200px; margin-left: 10px;\" type=\"success\" icon=\"el-icon-edit\" @click=\"handleCreate\">\n        添加新产品\n      </el-button>\n    </div>\n    <el-table\n      :key=\"tableKey\"\n      v-loading=\"listLoading\"\n      :data=\"products\"\n      :span-method=\"objectSpanMethod\"\n      border\n      fit\n      highlight-current-row\n      style=\"width: 100%;\"\n    >\n      <el-table-column label=\"产品ID\" prop=\"id\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.id }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"产品类型\" width=\"150px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <el-tag class=\"tag\" :color=\"row.tag_color\">{{ row.product_type }}</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"产品细类\" width=\"150px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <el-tag class=\"sub_type_tag\" :color=\"row.sub_type_tag_color\">{{ row.product_sub_type }}</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"名称\" min-width=\"200px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span class=\"link-type\" @click=\"handleUpdate(row)\">{{ row.title }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"型号\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.size }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"成本\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.cost }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"零售价\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.price }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" width=\"300px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <el-button type=\"primary\" plain @click=\"editEvent(row)\">编辑</el-button>\n          <el-button type=\"danger\" plain @click=\"deleteEvent(row)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.limit\" @pagination=\"getProducts\" />\n\n    <el-dialog title=\"添加新产品\" :visible.sync=\"dialogFormVisible\" width=\"80%\">\n      <el-form ref=\"dataForm\"\n        :model=\"temp\" \n        label-position=\"left\" \n        label-width=\"10px\" \n        style=\"margin-left:20px;\">\n        <div>\n          <h3 style=\"display: inline-block; width: 100px; vertical-align: top; margin-top: 0;\"> 产品信息 </h3>\n          <div style=\"display: inline-block;\">\n            <div style=\" margin-bottom: 5px;\">\n              <div class=\"input-title\">产品名称</div>\n              <div class=\"input-title\">产品类型</div>\n              <div class=\"input-title\">产品细类</div>\n              <div class=\"input-title\">规格</div>\n              <div class=\"input-title\">成本</div>\n              <div class=\"input-title\">零售价</div>\n            </div>\n            <el-form-item label=\"\" prop=\"event\" style=\"margin-bottom: 10px;\">\n              <el-input placeholder=\"产品名称\" v-model=\"temp.title\" style=\"width: 150px;\" class=\"filter-item\" />\n              <el-select v-model=\"temp.type\" class=\"filter-item\" style=\"width: 150px;\" placeholder=\"产品类型\" clearable \n                @change=\"getSubType(temp.type, temp)\"\n                @clear=\"getSubType(temp.type, temp)\">\n                <el-option v-for=\"item in productTypes\" :key=\"item.id\" :label=\"item.title\" :value=\"item.id\" />\n              </el-select>\n              <el-select v-model=\"temp.sub_type\" class=\"filter-item\" style=\"width: 150px;\" placeholder=\"产品细类\" clearable >\n                <el-option v-for=\"item in selectedProductSubTypes\" :key=\"item.id\" :label=\"item.title\" :value=\"item.id\" />\n              </el-select>\n              <el-input placeholder=\"规格\" v-model=\"temp.size\" style=\"width: 150px;\" class=\"filter-item\" />\n              <el-input placeholder=\"成本\" v-model=\"temp.cost\" style=\"width: 150px;\" class=\"filter-item\" />\n              <el-input placeholder=\"零售价\" v-model=\"temp.price\" style=\"width: 150px;\" class=\"filter-item\" />\n            </el-form-item>\n          </div>\n          <div>\n          <h3 style=\"display: inline-block; width: 100px; vertical-align: top; margin-top: 0;\"> 产品备注 </h3>\n          <el-input\n            type=\"textarea\"\n            :autosize=\"{ minRows: 2, maxRows: 4}\"\n            placeholder=\"备注\"\n            v-model=\"temp.note\"\n            style=\"width: 70%\" />\n            </div>\n        </div>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">\n          取消\n        </el-button>\n        <el-button type=\"primary\" @click=\"addNewProduct()\">\n          提交\n        </el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport ProductAPI from '@/api/product'\n\nimport { parseTime } from '@/utils'\nimport Pagination from '@/components/Pagination' // secondary package based on el-pagination\nimport { mapGetters } from 'vuex'\n\nexport default {\n  name: 'ComplexTable',\n  components: { Pagination },\n  filters: {},\n  data() {\n    return {\n      tableKey: 0,\n      products: null,\n      productTypes: null,\n      selectedProductSubTypes: null,\n      total: 0,\n      listLoading: true,\n      dialogFormVisible: false,\n      typeRowSpans: null,\n      subTypeRowSpans: null,\n      listQuery: {\n        page: 1,\n        limit: 10\n      },\n      temp: {\n        title: null,\n        type: null,\n        sub_type: null,\n        size: null,\n        cost: null,\n        price: null,\n        note: null\n      }\n    }\n  },\n  created() {\n  },\n  computed: {\n    ...mapGetters([\n      'id'\n    ])\n  },\n  beforeRouteEnter (to, from, next) {\n    next(vm => { \n      vm.getProducts()\n      vm.getCount()\n      vm.getProductTypes()\n      next();\n    }) \n  },\n  methods: {\n    calculateRowSpan() {\n      let g = []\n      let sg = []\n      let count = 0\n      let scount = 0\n      this.products.forEach(i => {\n        let found = false\n        g.forEach(t => {\n          if (t.product_type_id === i.product_type_id) {\n            found = true\n            t.end++\n            t.rowSpan++\n            count = t.start + t.rowSpan\n          }\n        })\n\n        if (!found) {\n          let newT = {\n            product_type_id: i.product_type_id,\n            start: count,\n            end: count+1,\n            rowSpan: 1\n          }\n          count++\n          g.push(newT)\n        }\n\n        let sfound = false\n        sg.forEach(t => {\n          if (t.product_sub_type_id === i.product_sub_type_id) {\n            sfound = true\n            t.end++\n            t.rowSpan++\n            scount = t.start + t.rowSpan\n          }\n        })\n\n        if (!sfound) {\n          let newT = {\n            product_sub_type_id: i.product_sub_type_id,\n            start: scount,\n            end: scount+1,\n            rowSpan: 1\n          }\n          scount++\n          sg.push(newT)\n        }\n      });\n      this.typeRowSpans = g;\n      this.subTypeRowSpans = sg;\n    },\n    objectSpanMethod({ row, column, rowIndex, columnIndex }) {\n      if (columnIndex === 1) {\n        let data = {\n          rowspan: 0,\n          colspan: 0\n        };\n        this.typeRowSpans.forEach(i => {\n          if (rowIndex >= i.start && rowIndex < i.end && (rowIndex - i.start) % i.rowSpan === 0) {\n            data = {\n              rowspan: i.rowSpan,\n              colspan: 1\n            };\n            return;\n          }\n        })\n\n        return data;\n      } else if (columnIndex === 2) {\n        let data = {\n          rowspan: 0,\n          colspan: 0\n        };\n        this.subTypeRowSpans.forEach(i => {\n          if (rowIndex >= i.start && rowIndex < i.end && (rowIndex - i.start) % i.rowSpan === 0) {\n            data = {\n              rowspan: i.rowSpan,\n              colspan: 1\n            };\n            return;\n          }\n        })\n\n        return data;\n      }\n    },\n    getProducts() {\n      this.listLoading = true\n      ProductAPI.getAllProducts(this.listQuery)\n        .then(response => {\n          this.products = response\n          this.listLoading = false\n          this.calculateRowSpan()\n        })\n        .catch(err => {\n          this.$message({\n            message: '读取库存失败，请联系徐神检查',\n            type: 'error'\n          })\n          this.listLoading = false\n        })\n    },\n    getCount() {\n      ProductAPI.getAllProductCount()\n        .then(response => {\n          this.total = response.total\n        })\n    },\n    getProductTypes() {\n      ProductAPI.getAllProductType()\n        .then(response => {\n          this.productTypes = response\n        })\n    },\n    getSubType(productType) {\n      if (productType) {\n        ProductAPI.getProductSubType({product_type_id: productType})\n          .then(response => {\n            this.selectedProductSubTypes = response\n          })\n      }\n    },\n    handleCreate() {\n      this.dialogFormVisible = true\n    },\n    addNewProduct() {\n      this.$confirm('确定添加?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.sendNewProductRequest()\n      }).catch((err) => {   \n        console.log(err)     \n      });\n    },\n    sendNewProductRequest() {\n      if (!this.temp.title) {\n        this.$message({\n          message: '必须填写产品名称',\n          type: 'error'\n        })\n    } else {\n      this.listLoading = true\n      ProductAPI.addProduct(this.temp)\n        .then(response => {\n          this.listLoading = false\n            this.$alert('添加成功', '成功', {\n              confirmButtonText: '确定',\n              callback: action => {\n                this.page = 1\n                this.getProducts()\n                this.getCount()\n                this.selectedProductSubTypes = null\n                this.dialogFormVisible = false;\n                this.temp = {\n                  title: null,\n                  type: null,\n                  sub_type: null,\n                  size: null,\n                  cost: null,\n                  price: null,\n                  note: null\n                }\n              }\n            });\n        })\n        .catch(err => {\n          console.log(err)     \n          this.$message({\n            message: '添加失败，请联系徐神检查',\n            type: 'error'\n          })\n          this.listLoading = false\n        })\n      }\n    },\n    editEvent() {\n      \n    },\n    deleteEvent(item) {\n      this.$confirm('确定删除>>' + item.title + '<<吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.sendDeleteEventRequest(item.id)\n      }).catch((err) => {   \n        console.log(err)     \n      });\n    },\n    sendDeleteEventRequest(id) {\n      this.listLoading = true\n      EventAPI.deleteEvent(id)\n        .then(response => {\n          this.listLoading = false\n            this.$alert('删除成功', '成功', {\n              confirmButtonText: '确定',\n              callback: action => {\n                this.page = 1\n                this.getEvents()\n                this.getCount()\n              }\n            });\n        })\n        .catch(err => {\n          console.log(err)     \n          this.$message({\n            message: '删除失败，请联系徐神检查',\n            type: 'error'\n          })\n          this.listLoading = false\n        })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n  .title {\n    display: inline-block;\n  }\n\n  .create-button {\n    margin-left: 50px !important;\n  }\n\n  .tag {\n    color: white;\n    font-size: 14px;\n    width: 100px;\n  }\n\n  .sub_type_tag {\n    color: white;\n    font-size: 14px;\n    width: 120px;\n  }\n  .input-title {\n    display: inline-block;\n    width: 150px;\n    line-height: 25px;\n    font-size: 14px;\n    margin-left: 10px;\n  }\n</style>\n"],"sourceRoot":"src/views/data"}]}