{"remainingRequest":"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/babel-loader/lib/index.js!/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/src/layout/components/TagsView/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/src/layout/components/TagsView/index.vue","mtime":1573891651601},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/@babel/runtime-corejs2/helpers/toConsumableArray\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/@babel/runtime-corejs2/helpers/objectSpread2\"));\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _ScrollPane = _interopRequireDefault(require(\"./ScrollPane\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  components: {\n    ScrollPane: _ScrollPane.default\n  },\n  data: function data() {\n    return {\n      visible: false,\n      top: 0,\n      left: 0,\n      selectedTag: {},\n      affixTags: []\n    };\n  },\n  computed: {\n    visitedViews: function visitedViews() {\n      return this.$store.state.tagsView.visitedViews;\n    },\n    routes: function routes() {\n      return this.$store.state.permission.routes;\n    }\n  },\n  watch: {\n    $route: function $route() {\n      this.addTags();\n      this.moveToCurrentTag();\n    },\n    visible: function visible(value) {\n      if (value) {\n        document.body.addEventListener('click', this.closeMenu);\n      } else {\n        document.body.removeEventListener('click', this.closeMenu);\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.initTags();\n    this.addTags();\n  },\n  methods: {\n    isActive: function isActive(route) {\n      return route.path === this.$route.path;\n    },\n    isAffix: function isAffix(tag) {\n      return tag.meta && tag.meta.affix;\n    },\n    filterAffixTags: function filterAffixTags(routes) {\n      var _this = this;\n\n      var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '/';\n      var tags = [];\n      routes.forEach(function (route) {\n        if (route.meta && route.meta.affix) {\n          var tagPath = _path.default.resolve(basePath, route.path);\n\n          tags.push({\n            fullPath: tagPath,\n            path: tagPath,\n            name: route.name,\n            meta: (0, _objectSpread2.default)({}, route.meta)\n          });\n        }\n\n        if (route.children) {\n          var tempTags = _this.filterAffixTags(route.children, route.path);\n\n          if (tempTags.length >= 1) {\n            tags = [].concat((0, _toConsumableArray2.default)(tags), (0, _toConsumableArray2.default)(tempTags));\n          }\n        }\n      });\n      return tags;\n    },\n    initTags: function initTags() {\n      var affixTags = this.affixTags = this.filterAffixTags(this.routes);\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = affixTags[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var tag = _step.value;\n\n          // Must have tag name\n          if (tag.name) {\n            this.$store.dispatch('tagsView/addVisitedView', tag);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    },\n    addTags: function addTags() {\n      var name = this.$route.name;\n\n      if (name) {\n        this.$store.dispatch('tagsView/addView', this.$route);\n      }\n\n      return false;\n    },\n    moveToCurrentTag: function moveToCurrentTag() {\n      var _this2 = this;\n\n      var tags = this.$refs.tag;\n      this.$nextTick(function () {\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = tags[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var tag = _step2.value;\n\n            if (tag.to.path === _this2.$route.path) {\n              _this2.$refs.scrollPane.moveToTarget(tag); // when query is different then update\n\n\n              if (tag.to.fullPath !== _this2.$route.fullPath) {\n                _this2.$store.dispatch('tagsView/updateVisitedView', _this2.$route);\n              }\n\n              break;\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      });\n    },\n    refreshSelectedTag: function refreshSelectedTag(view) {\n      var _this3 = this;\n\n      this.$store.dispatch('tagsView/delCachedView', view).then(function () {\n        var fullPath = view.fullPath;\n\n        _this3.$nextTick(function () {\n          _this3.$router.replace({\n            path: '/redirect' + fullPath\n          });\n        });\n      });\n    },\n    closeSelectedTag: function closeSelectedTag(view) {\n      var _this4 = this;\n\n      this.$store.dispatch('tagsView/delView', view).then(function (_ref) {\n        var visitedViews = _ref.visitedViews;\n\n        if (_this4.isActive(view)) {\n          _this4.toLastView(visitedViews, view);\n        }\n      });\n    },\n    closeOthersTags: function closeOthersTags() {\n      var _this5 = this;\n\n      this.$router.push(this.selectedTag);\n      this.$store.dispatch('tagsView/delOthersViews', this.selectedTag).then(function () {\n        _this5.moveToCurrentTag();\n      });\n    },\n    closeAllTags: function closeAllTags(view) {\n      var _this6 = this;\n\n      this.$store.dispatch('tagsView/delAllViews').then(function (_ref2) {\n        var visitedViews = _ref2.visitedViews;\n\n        if (_this6.affixTags.some(function (tag) {\n          return tag.path === view.path;\n        })) {\n          return;\n        }\n\n        _this6.toLastView(visitedViews, view);\n      });\n    },\n    toLastView: function toLastView(visitedViews, view) {\n      var latestView = visitedViews.slice(-1)[0];\n\n      if (latestView) {\n        this.$router.push(latestView.fullPath);\n      } else {\n        // now the default is to redirect to the home page if there is no tags-view,\n        // you can adjust it according to your needs.\n        if (view.name === 'Dashboard') {\n          // to reload home page\n          this.$router.replace({\n            path: '/redirect' + view.fullPath\n          });\n        } else {\n          this.$router.push('/');\n        }\n      }\n    },\n    openMenu: function openMenu(tag, e) {\n      var menuMinWidth = 105;\n      var offsetLeft = this.$el.getBoundingClientRect().left; // container margin left\n\n      var offsetWidth = this.$el.offsetWidth; // container width\n\n      var maxLeft = offsetWidth - menuMinWidth; // left boundary\n\n      var left = e.clientX - offsetLeft + 15; // 15: margin right\n\n      if (left > maxLeft) {\n        this.left = maxLeft;\n      } else {\n        this.left = left;\n      }\n\n      this.top = e.clientY;\n      this.visible = true;\n      this.selectedTag = tag;\n    },\n    closeMenu: function closeMenu() {\n      this.visible = false;\n    }\n  }\n};\nexports.default = _default;",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"tags-view-container\" class=\"tags-view-container\">\n    <scroll-pane ref=\"scrollPane\" class=\"tags-view-wrapper\">\n      <router-link\n        v-for=\"tag in visitedViews\"\n        ref=\"tag\"\n        :key=\"tag.path\"\n        :class=\"isActive(tag)?'active':''\"\n        :to=\"{ path: tag.path, query: tag.query, fullPath: tag.fullPath }\"\n        tag=\"span\"\n        class=\"tags-view-item\"\n        @click.middle.native=\"!isAffix(tag)?closeSelectedTag(tag):''\"\n        @contextmenu.prevent.native=\"openMenu(tag,$event)\"\n      >\n        {{ tag.title }}\n        <span v-if=\"!isAffix(tag)\" class=\"el-icon-close\" @click.prevent.stop=\"closeSelectedTag(tag)\" />\n      </router-link>\n    </scroll-pane>\n    <ul v-show=\"visible\" :style=\"{left:left+'px',top:top+'px'}\" class=\"contextmenu\">\n      <li @click=\"refreshSelectedTag(selectedTag)\">Refresh</li>\n      <li v-if=\"!isAffix(selectedTag)\" @click=\"closeSelectedTag(selectedTag)\">Close</li>\n      <li @click=\"closeOthersTags\">Close Others</li>\n      <li @click=\"closeAllTags(selectedTag)\">Close All</li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport ScrollPane from './ScrollPane'\nimport path from 'path'\n\nexport default {\n  components: { ScrollPane },\n  data() {\n    return {\n      visible: false,\n      top: 0,\n      left: 0,\n      selectedTag: {},\n      affixTags: []\n    }\n  },\n  computed: {\n    visitedViews() {\n      return this.$store.state.tagsView.visitedViews\n    },\n    routes() {\n      return this.$store.state.permission.routes\n    }\n  },\n  watch: {\n    $route() {\n      this.addTags()\n      this.moveToCurrentTag()\n    },\n    visible(value) {\n      if (value) {\n        document.body.addEventListener('click', this.closeMenu)\n      } else {\n        document.body.removeEventListener('click', this.closeMenu)\n      }\n    }\n  },\n  mounted() {\n    this.initTags()\n    this.addTags()\n  },\n  methods: {\n    isActive(route) {\n      return route.path === this.$route.path\n    },\n    isAffix(tag) {\n      return tag.meta && tag.meta.affix\n    },\n    filterAffixTags(routes, basePath = '/') {\n      let tags = []\n      routes.forEach(route => {\n        if (route.meta && route.meta.affix) {\n          const tagPath = path.resolve(basePath, route.path)\n          tags.push({\n            fullPath: tagPath,\n            path: tagPath,\n            name: route.name,\n            meta: { ...route.meta }\n          })\n        }\n        if (route.children) {\n          const tempTags = this.filterAffixTags(route.children, route.path)\n          if (tempTags.length >= 1) {\n            tags = [...tags, ...tempTags]\n          }\n        }\n      })\n      return tags\n    },\n    initTags() {\n      const affixTags = this.affixTags = this.filterAffixTags(this.routes)\n      for (const tag of affixTags) {\n        // Must have tag name\n        if (tag.name) {\n          this.$store.dispatch('tagsView/addVisitedView', tag)\n        }\n      }\n    },\n    addTags() {\n      const { name } = this.$route\n      if (name) {\n        this.$store.dispatch('tagsView/addView', this.$route)\n      }\n      return false\n    },\n    moveToCurrentTag() {\n      const tags = this.$refs.tag\n      this.$nextTick(() => {\n        for (const tag of tags) {\n          if (tag.to.path === this.$route.path) {\n            this.$refs.scrollPane.moveToTarget(tag)\n            // when query is different then update\n            if (tag.to.fullPath !== this.$route.fullPath) {\n              this.$store.dispatch('tagsView/updateVisitedView', this.$route)\n            }\n            break\n          }\n        }\n      })\n    },\n    refreshSelectedTag(view) {\n      this.$store.dispatch('tagsView/delCachedView', view).then(() => {\n        const { fullPath } = view\n        this.$nextTick(() => {\n          this.$router.replace({\n            path: '/redirect' + fullPath\n          })\n        })\n      })\n    },\n    closeSelectedTag(view) {\n      this.$store.dispatch('tagsView/delView', view).then(({ visitedViews }) => {\n        if (this.isActive(view)) {\n          this.toLastView(visitedViews, view)\n        }\n      })\n    },\n    closeOthersTags() {\n      this.$router.push(this.selectedTag)\n      this.$store.dispatch('tagsView/delOthersViews', this.selectedTag).then(() => {\n        this.moveToCurrentTag()\n      })\n    },\n    closeAllTags(view) {\n      this.$store.dispatch('tagsView/delAllViews').then(({ visitedViews }) => {\n        if (this.affixTags.some(tag => tag.path === view.path)) {\n          return\n        }\n        this.toLastView(visitedViews, view)\n      })\n    },\n    toLastView(visitedViews, view) {\n      const latestView = visitedViews.slice(-1)[0]\n      if (latestView) {\n        this.$router.push(latestView.fullPath)\n      } else {\n        // now the default is to redirect to the home page if there is no tags-view,\n        // you can adjust it according to your needs.\n        if (view.name === 'Dashboard') {\n          // to reload home page\n          this.$router.replace({ path: '/redirect' + view.fullPath })\n        } else {\n          this.$router.push('/')\n        }\n      }\n    },\n    openMenu(tag, e) {\n      const menuMinWidth = 105\n      const offsetLeft = this.$el.getBoundingClientRect().left // container margin left\n      const offsetWidth = this.$el.offsetWidth // container width\n      const maxLeft = offsetWidth - menuMinWidth // left boundary\n      const left = e.clientX - offsetLeft + 15 // 15: margin right\n\n      if (left > maxLeft) {\n        this.left = maxLeft\n      } else {\n        this.left = left\n      }\n\n      this.top = e.clientY\n      this.visible = true\n      this.selectedTag = tag\n    },\n    closeMenu() {\n      this.visible = false\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.tags-view-container {\n  height: 34px;\n  width: 100%;\n  background: #fff;\n  border-bottom: 1px solid #d8dce5;\n  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, .12), 0 0 3px 0 rgba(0, 0, 0, .04);\n  .tags-view-wrapper {\n    .tags-view-item {\n      display: inline-block;\n      position: relative;\n      cursor: pointer;\n      height: 26px;\n      line-height: 26px;\n      border: 1px solid #d8dce5;\n      color: #495060;\n      background: #fff;\n      padding: 0 8px;\n      font-size: 12px;\n      margin-left: 5px;\n      margin-top: 4px;\n      &:first-of-type {\n        margin-left: 15px;\n      }\n      &:last-of-type {\n        margin-right: 15px;\n      }\n      &.active {\n        background-color: #42b983;\n        color: #fff;\n        border-color: #42b983;\n        &::before {\n          content: '';\n          background: #fff;\n          display: inline-block;\n          width: 8px;\n          height: 8px;\n          border-radius: 50%;\n          position: relative;\n          margin-right: 2px;\n        }\n      }\n    }\n  }\n  .contextmenu {\n    margin: 0;\n    background: #fff;\n    z-index: 3000;\n    position: absolute;\n    list-style-type: none;\n    padding: 5px 0;\n    border-radius: 4px;\n    font-size: 12px;\n    font-weight: 400;\n    color: #333;\n    box-shadow: 2px 2px 3px 0 rgba(0, 0, 0, .3);\n    li {\n      margin: 0;\n      padding: 7px 16px;\n      cursor: pointer;\n      &:hover {\n        background: #eee;\n      }\n    }\n  }\n}\n</style>\n\n<style lang=\"scss\">\n//reset element css of el-icon-close\n.tags-view-wrapper {\n  .tags-view-item {\n    .el-icon-close {\n      width: 16px;\n      height: 16px;\n      vertical-align: 2px;\n      border-radius: 50%;\n      text-align: center;\n      transition: all .3s cubic-bezier(.645, .045, .355, 1);\n      transform-origin: 100% 50%;\n      &:before {\n        transform: scale(.6);\n        display: inline-block;\n        vertical-align: -3px;\n      }\n      &:hover {\n        background-color: #b4bccc;\n        color: #fff;\n      }\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/layout/components/TagsView"}]}