{"remainingRequest":"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/babel-loader/lib/index.js!/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/src/components/Tinymce/components/EditorImage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/src/components/Tinymce/components/EditorImage.vue","mtime":1573891651590},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import { getToken } from 'api/qiniu'\nvar _default = {\n  name: 'EditorSlideUpload',\n  props: {\n    color: {\n      type: String,\n      default: '#1890ff'\n    }\n  },\n  data: function data() {\n    return {\n      dialogVisible: false,\n      listObj: {},\n      fileList: []\n    };\n  },\n  methods: {\n    checkAllSuccess: function checkAllSuccess() {\n      var _this = this;\n\n      return Object.keys(this.listObj).every(function (item) {\n        return _this.listObj[item].hasSuccess;\n      });\n    },\n    handleSubmit: function handleSubmit() {\n      var _this2 = this;\n\n      var arr = Object.keys(this.listObj).map(function (v) {\n        return _this2.listObj[v];\n      });\n\n      if (!this.checkAllSuccess()) {\n        this.$message('Please wait for all images to be uploaded successfully. If there is a network problem, please refresh the page and upload again!');\n        return;\n      }\n\n      this.$emit('successCBK', arr);\n      this.listObj = {};\n      this.fileList = [];\n      this.dialogVisible = false;\n    },\n    handleSuccess: function handleSuccess(response, file) {\n      var uid = file.uid;\n      var objKeyArr = Object.keys(this.listObj);\n\n      for (var i = 0, len = objKeyArr.length; i < len; i++) {\n        if (this.listObj[objKeyArr[i]].uid === uid) {\n          this.listObj[objKeyArr[i]].url = response.files.file;\n          this.listObj[objKeyArr[i]].hasSuccess = true;\n          return;\n        }\n      }\n    },\n    handleRemove: function handleRemove(file) {\n      var uid = file.uid;\n      var objKeyArr = Object.keys(this.listObj);\n\n      for (var i = 0, len = objKeyArr.length; i < len; i++) {\n        if (this.listObj[objKeyArr[i]].uid === uid) {\n          delete this.listObj[objKeyArr[i]];\n          return;\n        }\n      }\n    },\n    beforeUpload: function beforeUpload(file) {\n      var _self = this;\n\n      var _URL = window.URL || window.webkitURL;\n\n      var fileName = file.uid;\n      this.listObj[fileName] = {};\n      return new Promise(function (resolve, reject) {\n        var img = new Image();\n        img.src = _URL.createObjectURL(file);\n\n        img.onload = function () {\n          _self.listObj[fileName] = {\n            hasSuccess: false,\n            uid: file.uid,\n            width: this.width,\n            height: this.height\n          };\n        };\n\n        resolve(true);\n      });\n    }\n  }\n};\nexports.default = _default;",{"version":3,"sources":["EditorImage.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"upload-container\">\n    <el-button :style=\"{background:color,borderColor:color}\" icon=\"el-icon-upload\" size=\"mini\" type=\"primary\" @click=\" dialogVisible=true\">\n      upload\n    </el-button>\n    <el-dialog :visible.sync=\"dialogVisible\">\n      <el-upload\n        :multiple=\"true\"\n        :file-list=\"fileList\"\n        :show-file-list=\"true\"\n        :on-remove=\"handleRemove\"\n        :on-success=\"handleSuccess\"\n        :before-upload=\"beforeUpload\"\n        class=\"editor-slide-upload\"\n        action=\"https://httpbin.org/post\"\n        list-type=\"picture-card\"\n      >\n        <el-button size=\"small\" type=\"primary\">\n          Click upload\n        </el-button>\n      </el-upload>\n      <el-button @click=\"dialogVisible = false\">\n        Cancel\n      </el-button>\n      <el-button type=\"primary\" @click=\"handleSubmit\">\n        Confirm\n      </el-button>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n// import { getToken } from 'api/qiniu'\n\nexport default {\n  name: 'EditorSlideUpload',\n  props: {\n    color: {\n      type: String,\n      default: '#1890ff'\n    }\n  },\n  data() {\n    return {\n      dialogVisible: false,\n      listObj: {},\n      fileList: []\n    }\n  },\n  methods: {\n    checkAllSuccess() {\n      return Object.keys(this.listObj).every(item => this.listObj[item].hasSuccess)\n    },\n    handleSubmit() {\n      const arr = Object.keys(this.listObj).map(v => this.listObj[v])\n      if (!this.checkAllSuccess()) {\n        this.$message('Please wait for all images to be uploaded successfully. If there is a network problem, please refresh the page and upload again!')\n        return\n      }\n      this.$emit('successCBK', arr)\n      this.listObj = {}\n      this.fileList = []\n      this.dialogVisible = false\n    },\n    handleSuccess(response, file) {\n      const uid = file.uid\n      const objKeyArr = Object.keys(this.listObj)\n      for (let i = 0, len = objKeyArr.length; i < len; i++) {\n        if (this.listObj[objKeyArr[i]].uid === uid) {\n          this.listObj[objKeyArr[i]].url = response.files.file\n          this.listObj[objKeyArr[i]].hasSuccess = true\n          return\n        }\n      }\n    },\n    handleRemove(file) {\n      const uid = file.uid\n      const objKeyArr = Object.keys(this.listObj)\n      for (let i = 0, len = objKeyArr.length; i < len; i++) {\n        if (this.listObj[objKeyArr[i]].uid === uid) {\n          delete this.listObj[objKeyArr[i]]\n          return\n        }\n      }\n    },\n    beforeUpload(file) {\n      const _self = this\n      const _URL = window.URL || window.webkitURL\n      const fileName = file.uid\n      this.listObj[fileName] = {}\n      return new Promise((resolve, reject) => {\n        const img = new Image()\n        img.src = _URL.createObjectURL(file)\n        img.onload = function() {\n          _self.listObj[fileName] = { hasSuccess: false, uid: file.uid, width: this.width, height: this.height }\n        }\n        resolve(true)\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.editor-slide-upload {\n  margin-bottom: 20px;\n  /deep/ .el-upload--picture-card {\n    width: 100%;\n  }\n}\n</style>\n"],"sourceRoot":"src/components/Tinymce/components"}]}