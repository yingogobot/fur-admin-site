{"remainingRequest":"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/babel-loader/lib/index.js!/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/src/components/ErrorLog/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/src/components/ErrorLog/index.vue","mtime":1573891651586},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/vue-element-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'ErrorLog',\n  data: function data() {\n    return {\n      dialogTableVisible: false\n    };\n  },\n  computed: {\n    errorLogs: function errorLogs() {\n      return this.$store.getters.errorLogs;\n    }\n  },\n  methods: {\n    clearAll: function clearAll() {\n      this.dialogTableVisible = false;\n      this.$store.dispatch('errorLog/clearErrorLog');\n    }\n  }\n};\nexports.default = _default;",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAiDA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,kBAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,QAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,SAAA;AACA;AAHA,GAPA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,WAAA,kBAAA,GAAA,KAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,wBAAA;AACA;AAJA;AAZA,C","sourcesContent":["<template>\n  <div v-if=\"errorLogs.length>0\">\n    <el-badge :is-dot=\"true\" style=\"line-height: 25px;margin-top: -5px;\" @click.native=\"dialogTableVisible=true\">\n      <el-button style=\"padding: 8px 10px;\" size=\"small\" type=\"danger\">\n        <svg-icon icon-class=\"bug\" />\n      </el-button>\n    </el-badge>\n\n    <el-dialog :visible.sync=\"dialogTableVisible\" width=\"80%\" append-to-body>\n      <div slot=\"title\">\n        <span style=\"padding-right: 10px;\">Error Log</span>\n        <el-button size=\"mini\" type=\"primary\" icon=\"el-icon-delete\" @click=\"clearAll\">Clear All</el-button>\n      </div>\n      <el-table :data=\"errorLogs\" border>\n        <el-table-column label=\"Message\">\n          <template slot-scope=\"{row}\">\n            <div>\n              <span class=\"message-title\">Msg:</span>\n              <el-tag type=\"danger\">\n                {{ row.err.message }}\n              </el-tag>\n            </div>\n            <br>\n            <div>\n              <span class=\"message-title\" style=\"padding-right: 10px;\">Info: </span>\n              <el-tag type=\"warning\">\n                {{ row.vm.$vnode.tag }} error in {{ row.info }}\n              </el-tag>\n            </div>\n            <br>\n            <div>\n              <span class=\"message-title\" style=\"padding-right: 16px;\">Url: </span>\n              <el-tag type=\"success\">\n                {{ row.url }}\n              </el-tag>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"Stack\">\n          <template slot-scope=\"scope\">\n            {{ scope.row.err.stack }}\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ErrorLog',\n  data() {\n    return {\n      dialogTableVisible: false\n    }\n  },\n  computed: {\n    errorLogs() {\n      return this.$store.getters.errorLogs\n    }\n  },\n  methods: {\n    clearAll() {\n      this.dialogTableVisible = false\n      this.$store.dispatch('errorLog/clearErrorLog')\n    }\n  }\n}\n</script>\n\n<style scoped>\n.message-title {\n  font-size: 16px;\n  color: #333;\n  font-weight: bold;\n  padding-right: 8px;\n}\n</style>\n"],"sourceRoot":"src/components/ErrorLog"}]}