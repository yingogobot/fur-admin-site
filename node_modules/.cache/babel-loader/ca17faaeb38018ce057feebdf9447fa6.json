{"remainingRequest":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/babel-loader/lib/index.js!/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/src/views/data/product-type.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/src/views/data/product-type.vue","mtime":1583917244509},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/@babel/runtime-corejs2/helpers/objectSpread2\"));\n\nvar _product = _interopRequireDefault(require(\"@/api/product\"));\n\nvar _utils = require(\"@/utils\");\n\nvar _Pagination = _interopRequireDefault(require(\"@/components/Pagination\"));\n\nvar _vuex = require(\"vuex\");\n\nvar _verte = _interopRequireDefault(require(\"verte\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// secondary package based on el-pagination\nvar _default = {\n  name: 'ComplexTable',\n  components: {\n    Pagination: _Pagination.default\n  },\n  filters: {},\n  data: function data() {\n    return {\n      tableKey: 0,\n      productTypes: null,\n      total: 0,\n      listLoading: true,\n      dialogFormVisible: false,\n      rowSpans: null,\n      listQuery: {\n        page: 1,\n        limit: 10\n      },\n      temp: {\n        title: null,\n        tag_color: null\n      }\n    };\n  },\n  created: function created() {\n    this.getAllProductTypes();\n    this.getCount();\n  },\n  computed: (0, _objectSpread2.default)({}, (0, _vuex.mapGetters)(['id'])),\n  methods: {\n    getAllProductTypes: function getAllProductTypes() {\n      var _this = this;\n\n      this.listLoading = true;\n\n      _product.default.getAllProductType(this.listQuery).then(function (response) {\n        _this.productTypes = response;\n        _this.listLoading = false;\n      }).catch(function (err) {\n        _this.$message({\n          message: '读取库存失败，请联系徐神检查',\n          type: 'error'\n        });\n\n        _this.listLoading = false;\n      });\n    },\n    getCount: function getCount() {\n      var _this2 = this;\n\n      _product.default.getAllProductTypeCount().then(function (response) {\n        _this2.total = response.total;\n      });\n    },\n    handleCreate: function handleCreate() {\n      this.dialogFormVisible = true;\n    },\n    addNewSalesChannel: function addNewSalesChannel() {\n      var _this3 = this;\n\n      console.log(this.temp);\n      this.$confirm('确定添加?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        _this3.sendNewProductTypeRequest();\n      }).catch(function (err) {\n        console.log(err);\n      });\n    },\n    sendNewProductTypeRequest: function sendNewProductTypeRequest() {\n      var _this4 = this;\n\n      if (!this.temp.title) {\n        this.$message({\n          message: '必须填写所有信息',\n          type: 'error'\n        });\n      } else {\n        this.listLoading = true;\n\n        _product.default.addProductType(this.temp).then(function (response) {\n          _this4.listLoading = false;\n\n          _this4.$alert('添加成功', '成功', {\n            confirmButtonText: '确定',\n            callback: function callback(action) {\n              _this4.page = 1;\n\n              _this4.getAllProductTypes();\n\n              _this4.getCount();\n\n              _this4.dialogFormVisible = false;\n              _this4.temp = {\n                title: null,\n                tag_color: null\n              };\n            }\n          });\n        }).catch(function (err) {\n          console.log(err);\n\n          _this4.$message({\n            message: '添加失败，请联系徐神检查',\n            type: 'error'\n          });\n\n          _this4.listLoading = false;\n        });\n      }\n    },\n    editSalesChannel: function editSalesChannel() {},\n    deleteSalesChannel: function deleteSalesChannel() {}\n  }\n};\nexports.default = _default;",{"version":3,"sources":["product-type.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div>\n    <h2 class=\"title\">产品类型</h2>\n      <el-button class=\"create-button\" style=\"width: 200px; margin-left: 10px;\" type=\"success\" icon=\"el-icon-edit\" @click=\"handleCreate\">\n        添加新产品类型\n      </el-button>\n    </div>\n    <el-table\n      :key=\"tableKey\"\n      v-loading=\"listLoading\"\n      :data=\"productTypes\"\n      border\n      fit\n      highlight-current-row\n      style=\"width: 100%;\"\n    >\n      <el-table-column label=\"类型ID\" prop=\"id\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.id }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"类型名称\" prop=\"title\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <el-tag class=\"tag\" :color=\"row.tag_color\">{{ row.title }}</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" width=\"300px\" align=\"center\">\n        <el-button type=\"primary\" plain @click=\"editSalesChannel()\">编辑</el-button>\n        <!-- <el-button type=\"danger\" plain @click=\"deleteSalesChannel()\">删除</el-button> -->\n      </el-table-column>\n    </el-table>\n\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.limit\" @pagination=\"getAllProductTypes\" />\n\n    <el-dialog title=\"添加新产品类型\" :visible.sync=\"dialogFormVisible\" width=\"80%\">\n      <el-form ref=\"dataForm\"\n        :model=\"temp\" \n        label-position=\"left\" \n        label-width=\"10px\" \n        style=\"margin-left:20px;\">\n        <div>\n          <h3 style=\"display: inline-block; width: 100px; vertical-align: top; margin-top: 0;\"> 产品类型信息 </h3>\n          <div style=\"display: inline-block;\">\n            <div style=\" margin-bottom: 5px;\">\n              <div class=\"input-title\">产品类型名称</div>\n            </div>\n            <el-form-item label=\"\" prop=\"salesChannel\" style=\"margin-bottom: 10px;\">\n              <el-input placeholder=\"产品类型名称\" v-model=\"temp.title\" style=\"width: 200px;\" class=\"filter-item\" />\n            </el-form-item>\n          </div>\n          <div style=\"display: inline-block;\">\n            <div style=\" margin-bottom: 5px;\">\n              <div class=\"input-title\">产品类型背景颜色</div>\n            </div>\n            <el-form-item label=\"\" prop=\"salesChannel\" style=\"margin-bottom: 10px;\">\n              <!-- <el-input placeholder=\"颜色HEX代码\" v-model=\"temp.tag_color\" style=\"width: 200px;\" class=\"filter-item\" /> -->\n              <verte value=\"#f0f\" v-model=\"temp.tag_color\" model=\"hex\"></verte>\n\n            </el-form-item>\n          </div>\n        </div>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">\n          取消\n        </el-button>\n        <el-button type=\"primary\" @click=\"addNewSalesChannel()\">\n          提交\n        </el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport ProductAPI from '@/api/product'\n\nimport { parseTime } from '@/utils'\nimport Pagination from '@/components/Pagination' // secondary package based on el-pagination\nimport { mapGetters } from 'vuex'\nimport verte from 'verte';\n\nexport default {\n  name: 'ComplexTable',\n  components: { Pagination },\n  filters: {},\n  data() {\n    return {\n      tableKey: 0,\n      productTypes: null,\n      total: 0,\n      listLoading: true,\n      dialogFormVisible: false,\n      rowSpans: null,\n      listQuery: {\n        page: 1,\n        limit: 10\n      },\n      temp: {\n        title: null,\n        tag_color: null,\n      }\n    }\n  },\n  created() {\n    this.getAllProductTypes()\n    this.getCount()\n  },\n  computed: {\n    ...mapGetters([\n      'id'\n    ])\n  },\n  methods: {\n    getAllProductTypes() {\n      this.listLoading = true\n      ProductAPI.getAllProductType(this.listQuery)\n        .then(response => {\n          this.productTypes = response\n          this.listLoading = false\n        })\n        .catch(err => {\n          this.$message({\n            message: '读取库存失败，请联系徐神检查',\n            type: 'error'\n          })\n          this.listLoading = false\n        })\n    },\n    getCount() {\n      ProductAPI.getAllProductTypeCount()\n        .then(response => {\n          this.total = response.total\n        })\n    },\n    handleCreate() {\n      this.dialogFormVisible = true\n    },\n    addNewSalesChannel() {\n      console.log(this.temp)\n      this.$confirm('确定添加?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.sendNewProductTypeRequest()\n      }).catch((err) => {   \n        console.log(err)     \n      });\n    },\n    sendNewProductTypeRequest() {\n      if (!this.temp.title) {\n        this.$message({\n          message: '必须填写所有信息',\n          type: 'error'\n        })\n    } else {\n      this.listLoading = true\n      ProductAPI.addProductType(this.temp)\n        .then(response => {\n          this.listLoading = false\n            this.$alert('添加成功', '成功', {\n              confirmButtonText: '确定',\n              callback: action => {\n                this.page = 1\n                this.getAllProductTypes()\n                this.getCount()\n                this.dialogFormVisible = false;\n                this.temp = {\n                  title:null,\n                  tag_color: null\n                }\n              }\n            });\n        })\n        .catch(err => {\n          console.log(err)     \n          this.$message({\n            message: '添加失败，请联系徐神检查',\n            type: 'error'\n          })\n          this.listLoading = false\n        })\n      }\n    },\n    editSalesChannel() {\n\n    },\n    deleteSalesChannel() {\n\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n  .title {\n    display: inline-block;\n  }\n\n  .create-button {\n    margin-left: 50px !important;\n  }\n\n  .tag {\n    color: white;\n    font-size: 14px;\n    width: 100px;\n  }\n\n  .sub_type_tag {\n    color: white;\n    font-size: 14px;\n    width: 120px;\n  }\n  .input-title {\n    display: inline-block;\n    width: 200px;\n    line-height: 25px;\n    font-size: 14px;\n    margin-left: 10px;\n  }\n</style>\n"],"sourceRoot":"src/views/data"}]}