{"remainingRequest":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/babel-loader/lib/index.js!/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/src/api/inventory.js","dependencies":[{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/src/api/inventory.js","mtime":1576734447638},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _baseApi = _interopRequireDefault(require(\"./baseApi.js\"));\n\nvar _default = {\n  fetchAllInventorys: function fetchAllInventorys(data) {\n    return new Promise(function (resolve, reject) {\n      _baseApi.default.post('inventory/all_inventorys', data).then(function (results) {\n        return resolve(results);\n      }).catch(function (err) {\n        return reject(err);\n      });\n    });\n  },\n  getAllInventoryCount: function getAllInventoryCount(typeId) {\n    return new Promise(function (resolve, reject) {\n      var data = {\n        inventory_type: typeId\n      };\n\n      _baseApi.default.post('inventory/count_inventorys', data).then(function (results) {\n        return resolve(results);\n      }).catch(function (err) {\n        return reject(err);\n      });\n    });\n  },\n  getAllInventoryTpes: function getAllInventoryTpes(typeId) {\n    return new Promise(function (resolve, reject) {\n      var data = {\n        inventory_type: typeId\n      };\n\n      _baseApi.default.post('inventory/inventory_types', data).then(function (results) {\n        return resolve(results);\n      }).catch(function (err) {\n        return reject(err);\n      });\n    });\n  },\n  addNewInventoryRequest: function addNewInventoryRequest(data) {\n    return new Promise(function (resolve, reject) {\n      _baseApi.default.post('inventory/add', data).then(function (results) {\n        return resolve(results);\n      }).catch(function (err) {\n        return reject(err);\n      });\n    });\n  },\n  getStorage: function getStorage() {\n    return new Promise(function (resolve, reject) {\n      _baseApi.default.post('inventory/storage').then(function (results) {\n        return resolve(results);\n      }).catch(function (err) {\n        return reject(err);\n      });\n    });\n  },\n  getProductStorage: function getProductStorage(productId) {\n    return new Promise(function (resolve, reject) {\n      var data = {\n        product_id: productId\n      };\n\n      _baseApi.default.post('inventory/storage', data).then(function (results) {\n        return resolve(results);\n      }).catch(function (err) {\n        return reject(err);\n      });\n    });\n  }\n};\nexports.default = _default;",{"version":3,"sources":["/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/src/api/inventory.js"],"names":["fetchAllInventorys","data","Promise","resolve","reject","$","post","then","results","catch","err","getAllInventoryCount","typeId","inventory_type","getAllInventoryTpes","addNewInventoryRequest","getStorage","getProductStorage","productId","product_id"],"mappings":";;;;;;;;;AAAA;;eAEe;AACbA,EAAAA,kBADa,8BACMC,IADN,EACY;AACvB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,uBAAEC,IAAF,CAAO,0BAAP,EAAmCL,IAAnC,EACGM,IADH,CACQ,UAACC,OAAD;AAAA,eAAaL,OAAO,CAACK,OAAD,CAApB;AAAA,OADR,EAEGC,KAFH,CAES,UAACC,GAAD;AAAA,eAASN,MAAM,CAACM,GAAD,CAAf;AAAA,OAFT;AAGD,KAJM,CAAP;AAKD,GAPY;AAQbC,EAAAA,oBARa,gCAQQC,MARR,EAQgB;AAC3B,WAAO,IAAIV,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,UAAIH,IAAI,GAAG;AAACY,QAAAA,cAAc,EAAED;AAAjB,OAAX;;AACAP,uBAAEC,IAAF,CAAO,4BAAP,EAAqCL,IAArC,EACGM,IADH,CACQ,UAACC,OAAD;AAAA,eAAaL,OAAO,CAACK,OAAD,CAApB;AAAA,OADR,EAEGC,KAFH,CAES,UAACC,GAAD;AAAA,eAASN,MAAM,CAACM,GAAD,CAAf;AAAA,OAFT;AAGD,KALM,CAAP;AAMD,GAfY;AAgBbI,EAAAA,mBAhBa,+BAgBOF,MAhBP,EAgBe;AAC1B,WAAO,IAAIV,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,UAAIH,IAAI,GAAG;AAACY,QAAAA,cAAc,EAAED;AAAjB,OAAX;;AACAP,uBAAEC,IAAF,CAAO,2BAAP,EAAoCL,IAApC,EACGM,IADH,CACQ,UAACC,OAAD;AAAA,eAAaL,OAAO,CAACK,OAAD,CAApB;AAAA,OADR,EAEGC,KAFH,CAES,UAACC,GAAD;AAAA,eAASN,MAAM,CAACM,GAAD,CAAf;AAAA,OAFT;AAGD,KALM,CAAP;AAMD,GAvBY;AAwBbK,EAAAA,sBAxBa,kCAwBUd,IAxBV,EAwBgB;AAC3B,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,uBAAEC,IAAF,CAAO,eAAP,EAAwBL,IAAxB,EACGM,IADH,CACQ,UAACC,OAAD;AAAA,eAAaL,OAAO,CAACK,OAAD,CAApB;AAAA,OADR,EAEGC,KAFH,CAES,UAACC,GAAD;AAAA,eAASN,MAAM,CAACM,GAAD,CAAf;AAAA,OAFT;AAGD,KAJM,CAAP;AAKD,GA9BY;AA+BbM,EAAAA,UA/Ba,wBA+BA;AACX,WAAO,IAAId,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,uBAAEC,IAAF,CAAO,mBAAP,EACGC,IADH,CACQ,UAACC,OAAD;AAAA,eAAaL,OAAO,CAACK,OAAD,CAApB;AAAA,OADR,EAEGC,KAFH,CAES,UAACC,GAAD;AAAA,eAASN,MAAM,CAACM,GAAD,CAAf;AAAA,OAFT;AAGD,KAJM,CAAP;AAKD,GArCY;AAsCbO,EAAAA,iBAtCa,6BAsCKC,SAtCL,EAsCgB;AAC3B,WAAO,IAAIhB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,UAAIH,IAAI,GAAG;AAACkB,QAAAA,UAAU,EAAED;AAAb,OAAX;;AACAb,uBAAEC,IAAF,CAAO,mBAAP,EAA4BL,IAA5B,EACGM,IADH,CACQ,UAACC,OAAD;AAAA,eAAaL,OAAO,CAACK,OAAD,CAApB;AAAA,OADR,EAEGC,KAFH,CAES,UAACC,GAAD;AAAA,eAASN,MAAM,CAACM,GAAD,CAAf;AAAA,OAFT;AAGD,KALM,CAAP;AAMD;AA7CY,C","sourcesContent":["import $ from './baseApi.js'\n\nexport default {\n  fetchAllInventorys(data) {\n    return new Promise((resolve, reject) => {\n      $.post('inventory/all_inventorys', data)\n        .then((results) => resolve(results))\n        .catch((err) => reject(err))\n    })\n  },\n  getAllInventoryCount(typeId) {\n    return new Promise((resolve, reject) => {\n      let data = {inventory_type: typeId}\n      $.post('inventory/count_inventorys', data)\n        .then((results) => resolve(results))\n        .catch((err) => reject(err))\n    })\n  },\n  getAllInventoryTpes(typeId) {\n    return new Promise((resolve, reject) => {\n      let data = {inventory_type: typeId}\n      $.post('inventory/inventory_types', data)\n        .then((results) => resolve(results))\n        .catch((err) => reject(err))\n    })\n  },\n  addNewInventoryRequest(data) {\n    return new Promise((resolve, reject) => {\n      $.post('inventory/add', data)\n        .then((results) => resolve(results))\n        .catch((err) => reject(err))\n    })\n  },\n  getStorage() {\n    return new Promise((resolve, reject) => {\n      $.post('inventory/storage')\n        .then((results) => resolve(results))\n        .catch((err) => reject(err))\n    })\n  },\n  getProductStorage(productId) {\n    return new Promise((resolve, reject) => {\n      let data = {product_id: productId}\n      $.post('inventory/storage', data)\n        .then((results) => resolve(results))\n        .catch((err) => reject(err))\n    })\n  }\n}\n"]}]}