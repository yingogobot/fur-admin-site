{"remainingRequest":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/babel-loader/lib/index.js!/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/src/api/inventory.js","dependencies":[{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/src/api/inventory.js","mtime":1576582164999},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fetchAllInventorys = fetchAllInventorys;\nexports.getAllInventoryCount = getAllInventoryCount;\nexports.getAllInventoryTpes = getAllInventoryTpes;\nexports.addNewInventoryRequest = addNewInventoryRequest;\nexports.getStorage = getStorage;\nexports.getProductStorage = getProductStorage;\n\nvar _request = _interopRequireDefault(require(\"@/utils/request\"));\n\nfunction fetchAllInventorys(data) {\n  return (0, _request.default)({\n    url: '/inventory/all_inventorys?bypass=bypass',\n    method: 'post',\n    data: data\n  });\n}\n\nfunction getAllInventoryCount(typeId) {\n  var data = {\n    inventory_type: typeId\n  };\n  return (0, _request.default)({\n    url: '/inventory/count_inventorys?bypass=bypass',\n    method: 'post',\n    data: data\n  });\n}\n\nfunction getAllInventoryTpes(typeId) {\n  var data = {\n    inventory_type: typeId\n  };\n  return (0, _request.default)({\n    url: '/inventory/inventory_types?bypass=bypass',\n    method: 'post',\n    data: data\n  });\n}\n\nfunction addNewInventoryRequest(data) {\n  return (0, _request.default)({\n    url: '/inventory/add?bypass=bypass',\n    method: 'post',\n    data: data\n  });\n}\n\nfunction getStorage() {\n  return (0, _request.default)({\n    url: '/inventory/storage?bypass=bypass',\n    method: 'post'\n  });\n}\n\nfunction getProductStorage(productId) {\n  var data = {\n    product_id: productId\n  };\n  return (0, _request.default)({\n    url: '/inventory/storage?bypass=bypass',\n    method: 'post',\n    data: data\n  });\n}",{"version":3,"sources":["/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/src/api/inventory.js"],"names":["fetchAllInventorys","data","url","method","getAllInventoryCount","typeId","inventory_type","getAllInventoryTpes","addNewInventoryRequest","getStorage","getProductStorage","productId","product_id"],"mappings":";;;;;;;;;;;;;;AAAA;;AAEO,SAASA,kBAAT,CAA4BC,IAA5B,EAAkC;AACvC,SAAO,sBAAQ;AACbC,IAAAA,GAAG,EAAE,yCADQ;AAEbC,IAAAA,MAAM,EAAE,MAFK;AAGbF,IAAAA,IAAI,EAAJA;AAHa,GAAR,CAAP;AAKD;;AAEM,SAASG,oBAAT,CAA8BC,MAA9B,EAAsC;AAC3C,MAAIJ,IAAI,GAAG;AAACK,IAAAA,cAAc,EAAED;AAAjB,GAAX;AACA,SAAO,sBAAQ;AACbH,IAAAA,GAAG,EAAE,2CADQ;AAEbC,IAAAA,MAAM,EAAE,MAFK;AAGbF,IAAAA,IAAI,EAAJA;AAHa,GAAR,CAAP;AAKD;;AACM,SAASM,mBAAT,CAA6BF,MAA7B,EAAqC;AAC1C,MAAIJ,IAAI,GAAG;AAACK,IAAAA,cAAc,EAAED;AAAjB,GAAX;AACA,SAAO,sBAAQ;AACbH,IAAAA,GAAG,EAAE,0CADQ;AAEbC,IAAAA,MAAM,EAAE,MAFK;AAGbF,IAAAA,IAAI,EAAJA;AAHa,GAAR,CAAP;AAKD;;AAEM,SAASO,sBAAT,CAAgCP,IAAhC,EAAsC;AAC3C,SAAO,sBAAQ;AACbC,IAAAA,GAAG,EAAE,8BADQ;AAEbC,IAAAA,MAAM,EAAE,MAFK;AAGbF,IAAAA,IAAI,EAAJA;AAHa,GAAR,CAAP;AAKD;;AAEM,SAASQ,UAAT,GAAsB;AAC3B,SAAO,sBAAQ;AACbP,IAAAA,GAAG,EAAE,kCADQ;AAEbC,IAAAA,MAAM,EAAE;AAFK,GAAR,CAAP;AAID;;AAEM,SAASO,iBAAT,CAA2BC,SAA3B,EAAsC;AAC3C,MAAIV,IAAI,GAAG;AAACW,IAAAA,UAAU,EAAED;AAAb,GAAX;AACA,SAAO,sBAAQ;AACbT,IAAAA,GAAG,EAAE,kCADQ;AAEbC,IAAAA,MAAM,EAAE,MAFK;AAGbF,IAAAA,IAAI,EAAJA;AAHa,GAAR,CAAP;AAKD","sourcesContent":["import request from '@/utils/request'\n\nexport function fetchAllInventorys(data) {\n  return request({\n    url: '/inventory/all_inventorys?bypass=bypass',\n    method: 'post',\n    data\n  })\n}\n\nexport function getAllInventoryCount(typeId) {\n  let data = {inventory_type: typeId}\n  return request({\n    url: '/inventory/count_inventorys?bypass=bypass',\n    method: 'post',\n    data\n  })\n}\nexport function getAllInventoryTpes(typeId) {\n  let data = {inventory_type: typeId}\n  return request({\n    url: '/inventory/inventory_types?bypass=bypass',\n    method: 'post',\n    data\n  })\n}\n\nexport function addNewInventoryRequest(data) {\n  return request({\n    url: '/inventory/add?bypass=bypass',\n    method: 'post',\n    data\n  })\n}\n\nexport function getStorage() {\n  return request({\n    url: '/inventory/storage?bypass=bypass',\n    method: 'post'\n  })\n}\n\nexport function getProductStorage(productId) {\n  let data = {product_id: productId}\n  return request({\n    url: '/inventory/storage?bypass=bypass',\n    method: 'post',\n    data\n  })\n}"]}]}