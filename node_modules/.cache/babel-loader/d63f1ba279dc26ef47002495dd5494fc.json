{"remainingRequest":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/babel-loader/lib/index.js!/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/src/api/sales.js","dependencies":[{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/src/api/sales.js","mtime":1582709151454},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _baseApi = _interopRequireDefault(require(\"./baseApi.js\"));\n\nvar _default = {\n  getAllSales: function getAllSales(data) {\n    return new Promise(function (resolve, reject) {\n      _baseApi.default.post('sales/all', data).then(function (results) {\n        return resolve(results);\n      }).catch(function (err) {\n        return reject(err);\n      });\n    });\n  },\n  getAllSalesCount: function getAllSalesCount(data) {\n    return new Promise(function (resolve, reject) {\n      _baseApi.default.post('sales/get_count', data).then(function (results) {\n        return resolve(results);\n      }).catch(function (err) {\n        return reject(err);\n      });\n    });\n  },\n  getAllSalesType: function getAllSalesType() {\n    return new Promise(function (resolve, reject) {\n      _baseApi.default.post('sales/sales_types').then(function (results) {\n        return resolve(results);\n      }).catch(function (err) {\n        return reject(err);\n      });\n    });\n  },\n  addNewSalesRequest: function addNewSalesRequest(data) {\n    return new Promise(function (resolve, reject) {\n      _baseApi.default.post('inventory/add', data).then(function (results) {\n        return resolve(results);\n      }).catch(function (err) {\n        return reject(err);\n      });\n    });\n  }\n};\nexports.default = _default;",{"version":3,"sources":["/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/src/api/sales.js"],"names":["getAllSales","data","Promise","resolve","reject","$","post","then","results","catch","err","getAllSalesCount","getAllSalesType","addNewSalesRequest"],"mappings":";;;;;;;;;AAAA;;eAEe;AACbA,EAAAA,WADa,uBACDC,IADC,EACK;AAChB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,uBAAEC,IAAF,CAAO,WAAP,EAAoBL,IAApB,EACGM,IADH,CACQ,UAACC,OAAD;AAAA,eAAaL,OAAO,CAACK,OAAD,CAApB;AAAA,OADR,EAEGC,KAFH,CAES,UAACC,GAAD;AAAA,eAASN,MAAM,CAACM,GAAD,CAAf;AAAA,OAFT;AAGD,KAJM,CAAP;AAKD,GAPY;AAQbC,EAAAA,gBARa,4BAQIV,IARJ,EAQU;AACrB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,uBAAEC,IAAF,CAAO,iBAAP,EAA0BL,IAA1B,EACGM,IADH,CACQ,UAACC,OAAD;AAAA,eAAaL,OAAO,CAACK,OAAD,CAApB;AAAA,OADR,EAEGC,KAFH,CAES,UAACC,GAAD;AAAA,eAASN,MAAM,CAACM,GAAD,CAAf;AAAA,OAFT;AAGD,KAJM,CAAP;AAKD,GAdY;AAebE,EAAAA,eAfa,6BAeK;AAChB,WAAO,IAAIV,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,uBAAEC,IAAF,CAAO,mBAAP,EACGC,IADH,CACQ,UAACC,OAAD;AAAA,eAAaL,OAAO,CAACK,OAAD,CAApB;AAAA,OADR,EAEGC,KAFH,CAES,UAACC,GAAD;AAAA,eAASN,MAAM,CAACM,GAAD,CAAf;AAAA,OAFT;AAGD,KAJM,CAAP;AAKD,GArBY;AAsBbG,EAAAA,kBAtBa,8BAsBMZ,IAtBN,EAsBY;AACvB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,uBAAEC,IAAF,CAAO,eAAP,EAAwBL,IAAxB,EACGM,IADH,CACQ,UAACC,OAAD;AAAA,eAAaL,OAAO,CAACK,OAAD,CAApB;AAAA,OADR,EAEGC,KAFH,CAES,UAACC,GAAD;AAAA,eAASN,MAAM,CAACM,GAAD,CAAf;AAAA,OAFT;AAGD,KAJM,CAAP;AAKD;AA5BY,C","sourcesContent":["import $ from './baseApi.js'\n\nexport default {\n  getAllSales(data) {\n    return new Promise((resolve, reject) => {\n      $.post('sales/all', data)\n        .then((results) => resolve(results))\n        .catch((err) => reject(err))\n    })\n  },\n  getAllSalesCount(data) {\n    return new Promise((resolve, reject) => {\n      $.post('sales/get_count', data)\n        .then((results) => resolve(results))\n        .catch((err) => reject(err))\n    })\n  },\n  getAllSalesType() {\n    return new Promise((resolve, reject) => {\n      $.post('sales/sales_types')\n        .then((results) => resolve(results))\n        .catch((err) => reject(err))\n    })\n  },\n  addNewSalesRequest(data) {\n    return new Promise((resolve, reject) => {\n      $.post('inventory/add', data)\n        .then((results) => resolve(results))\n        .catch((err) => reject(err))\n    })\n  },\n}\n"]}]}