{"remainingRequest":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/babel-loader/lib/index.js!/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/src/views/inventory/storage-check.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/src/views/inventory/storage-check.vue","mtime":1576573209573},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/@babel/runtime-corejs2/helpers/objectSpread2\"));\n\nvar _inventory = require(\"@/api/inventory\");\n\nvar _product = require(\"@/api/product\");\n\nvar _waves = _interopRequireDefault(require(\"@/directive/waves\"));\n\nvar _utils = require(\"@/utils\");\n\nvar _Pagination = _interopRequireDefault(require(\"@/components/Pagination\"));\n\nvar _vuex = require(\"vuex\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// waves directive\n// secondary package based on el-pagination\nvar _default = {\n  name: 'ComplexTable',\n  components: {\n    Pagination: _Pagination.default\n  },\n  directives: {\n    waves: _waves.default\n  },\n  filters: {},\n  data: function data() {\n    return {\n      tableKey: 0,\n      inventories: null,\n      productTypes: [],\n      productSubTypes: [],\n      selectedProducts: [],\n      total: 0,\n      listLoading: true,\n      rowSpans: null,\n      listQuery: {\n        page: 1,\n        limit: 10,\n        product_type: undefined,\n        product_sub_type: undefined,\n        product: undefined\n      }\n    };\n  },\n  created: function created() {\n    this.getAllStorage();\n    this.getProductTypes();\n  },\n  computed: (0, _objectSpread2.default)({}, (0, _vuex.mapGetters)(['id'])),\n  methods: {\n    getAllStorage: function getAllStorage() {\n      var _this = this;\n\n      this.listLoading = true;\n      (0, _inventory.getStorage)().then(function (response) {\n        _this.inventories = response;\n        _this.listLoading = false;\n\n        _this.calculateRowSpan();\n      }).catch(function (err) {\n        _this.$message({\n          message: '读取库存失败，请联系徐神检查',\n          type: 'error'\n        });\n\n        _this.listLoading = false;\n      });\n    },\n    getProductTypes: function getProductTypes() {\n      var _this2 = this;\n\n      (0, _product.getAllProductType)().then(function (response) {\n        _this2.productTypes = response;\n      });\n    },\n    getSubType: function getSubType(productType, item) {\n      var _this3 = this;\n\n      this.listQuery.product = undefined;\n      this.listQuery.product_sub_type = undefined;\n      this.productSubTypes = [];\n      this.selectedProducts = [];\n\n      if (productType) {\n        (0, _product.getProductSubType)({\n          product_type_id: productType\n        }).then(function (response) {\n          _this3.productSubTypes = response;\n        });\n      }\n\n      if (item) {\n        item.product_sub_type = undefined;\n        item.product_id = undefined;\n        item.cost = undefined;\n        item.size = undefined;\n        item.quantity = undefined;\n      }\n    },\n    getSelectedProducts: function getSelectedProducts(subType) {\n      var _this4 = this;\n\n      this.listQuery.product = undefined;\n      this.selectedProducts = [];\n\n      if (subType) {\n        (0, _product.getProductBySubType)({\n          product_sub_type: subType\n        }).then(function (response) {\n          _this4.selectedProducts = response;\n        });\n      }\n    },\n    handleFilter: function handleFilter() {\n      this.listQuery.page = 1;\n      this.getAllStorage();\n    },\n    calculateRowSpan: function calculateRowSpan() {\n      var g = [];\n      var count = 0;\n      this.inventories.forEach(function (i) {\n        var found = false;\n        g.forEach(function (t) {\n          if (t.id === i.product_sub_type_id) {\n            found = true;\n            t.end++;\n            t.rowSpan++;\n            count = t.start + t.rowSpan;\n          }\n        });\n\n        if (!found) {\n          var newT = {\n            id: i.product_sub_type_id,\n            start: count,\n            end: count + 1,\n            rowSpan: 1\n          };\n          count++;\n          g.push(newT);\n        }\n      });\n      console.log(g);\n      this.rowSpans = g;\n    },\n    objectSpanMethod: function objectSpanMethod(_ref) {\n      var row = _ref.row,\n          column = _ref.column,\n          rowIndex = _ref.rowIndex,\n          columnIndex = _ref.columnIndex;\n\n      if (columnIndex === 1 || columnIndex === 2) {\n        var data = {\n          rowspan: 0,\n          colspan: 0\n        };\n        this.rowSpans.forEach(function (i) {\n          if (rowIndex >= i.start && rowIndex < i.end && (rowIndex - i.start) % i.rowSpan === 0) {\n            data = {\n              rowspan: i.rowSpan,\n              colspan: 1\n            };\n            return;\n          }\n        });\n        return data;\n      }\n    }\n  }\n};\nexports.default = _default;",{"version":3,"sources":["storage-check.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <h2>筛选结果</h2>\n      <el-select v-model=\"listQuery.product_type\" \n        placeholder=\"产品类型\" clearable \n        style=\"width: 150px; margin-left: 15px;\" \n        class=\"filter-item\" \n        @change=\"getSubType(listQuery.product_type)\">\n        <el-option v-for=\"item in productTypes\" :key=\"item.id\" :label=\"item.title\" :value=\"item.id\" />\n      </el-select>\n      <el-select v-model=\"listQuery.product_sub_type\" placeholder=\"产品分类\" clearable style=\"width: 150px; margin-left: 15px;\" class=\"filter-item\" @change=\"getSelectedProducts(listQuery.product_sub_type)\">\n        <el-option v-for=\"item in productSubTypes\" :key=\"item.id\" :label=\"item.title\" :value=\"item.id\" />\n      </el-select>\n      <el-select v-model=\"listQuery.product\" placeholder=\"产品\" clearable style=\"width: 150px; margin-left: 15px;\" class=\"filter-item\">\n        <el-option v-for=\"item in selectedProducts\" :key=\"item.id\" :label=\"item.title\" :value=\"item.id\" />\n      </el-select>\n      <el-button v-waves class=\"filter-item\" type=\"primary\" icon=\"el-icon-search\" @click=\"handleFilter\" style=\"width: 100px; margin-left: 15px;\">\n        搜索\n      </el-button>\n      <!-- <el-button class=\"filter-item\" style=\"width: 200px; margin-left: 10px;\" type=\"success\" icon=\"el-icon-edit\" @click=\"handleCreate\">\n        添加新入库\n      </el-button> -->\n    </div>\n\n    <h2>入库详情</h2>\n    <el-table\n      :key=\"tableKey\"\n      v-loading=\"listLoading\"\n      :data=\"inventories\"\n      :span-method=\"objectSpanMethod\"\n      border\n      fit\n      highlight-current-row\n      style=\"width: 100%;\"\n    >\n      <el-table-column label=\"产品ID\" prop=\"id\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.product_id }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"产品类型\" width=\"150px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <el-tag class=\"tag\" :color=\"row.tag_color\">{{ row.product_type }}</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"产品细类\" width=\"150px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <el-tag class=\"sub_type_tag\" :color=\"row.sub_type_tag_color\">{{ row.product_sub_type }}</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"产品名称\" width=\"200px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span class=\"link-type\" @click=\"handleUpdate(row)\">{{ row.title }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"产品型号\" width=\"200px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.size }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"剩余数量\" min-width=\"300px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span class=\"quantity\" :class=\"{'low-quantity': row.quantity <= 300}\">{{ row.quantity }}</span>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.limit\" @pagination=\"getAllStorage\" />\n  </div>\n</template>\n\n<script>\nimport { getStorage } from '@/api/inventory'\nimport { getAllProductType, getProductSubType, getProductBySubType } from '@/api/product'\n\nimport waves from '@/directive/waves' // waves directive\nimport { parseTime } from '@/utils'\nimport Pagination from '@/components/Pagination' // secondary package based on el-pagination\nimport { mapGetters } from 'vuex'\n\nexport default {\n  name: 'ComplexTable',\n  components: { Pagination },\n  directives: { waves },\n  filters: {},\n  data() {\n    return {\n      tableKey: 0,\n      inventories: null,\n      productTypes: [],\n      productSubTypes: [],\n      selectedProducts: [],\n      total: 0,\n      listLoading: true,\n      rowSpans: null,\n      listQuery: {\n        page: 1,\n        limit: 10,\n        product_type: undefined,\n        product_sub_type: undefined,\n        product: undefined,\n      },\n    }\n  },\n  created() {\n    this.getAllStorage()\n    this.getProductTypes()\n  },\n  computed: {\n    ...mapGetters([\n      'id'\n    ])\n  },\n  methods: {\n    getAllStorage() {\n      this.listLoading = true\n      getStorage()\n        .then(response => {\n          this.inventories = response\n          this.listLoading = false\n          this.calculateRowSpan()\n        })\n        .catch(err => {\n          this.$message({\n            message: '读取库存失败，请联系徐神检查',\n            type: 'error'\n          })\n          this.listLoading = false\n        })\n    },\n    getProductTypes() {\n      getAllProductType()\n        .then(response => {\n          this.productTypes = response\n        })\n    },\n    getSubType(productType, item) {\n      this.listQuery.product = undefined\n      this.listQuery.product_sub_type = undefined\n      this.productSubTypes = []\n      this.selectedProducts = []\n      if (productType) {\n        getProductSubType({product_type_id: productType})\n          .then(response => {\n            this.productSubTypes = response\n          })\n      }\n\n      if (item) {\n        item.product_sub_type = undefined\n        item.product_id = undefined\n        item.cost = undefined\n        item.size = undefined\n        item.quantity = undefined\n      }\n    },\n    getSelectedProducts(subType) {\n\n      this.listQuery.product = undefined\n      this.selectedProducts = []\n      if (subType) {\n        getProductBySubType({product_sub_type: subType})\n            .then(response => {\n              this.selectedProducts = response\n            })\n      }\n    },\n    handleFilter() {\n      this.listQuery.page = 1\n      this.getAllStorage()\n    },\n    calculateRowSpan() {\n      let g = []\n      let count = 0\n      this.inventories.forEach(i => {\n        let found = false\n        g.forEach(t => {\n          if (t.id === i.product_sub_type_id) {\n            found = true\n            t.end++\n            t.rowSpan++\n            count = t.start + t.rowSpan\n          }\n        })\n\n        if (!found) {\n          let newT = {\n            id: i.product_sub_type_id,\n            start: count,\n            end: count+1,\n            rowSpan: 1\n          }\n          count++\n          g.push(newT)\n        }\n      });\n      console.log(g)\n      this.rowSpans = g;\n    },\n    objectSpanMethod({ row, column, rowIndex, columnIndex }) {\n      if (columnIndex === 1 || columnIndex === 2) {\n        let data = {\n          rowspan: 0,\n          colspan: 0\n        };\n        this.rowSpans.forEach(i => {\n          if (rowIndex >= i.start && rowIndex < i.end && (rowIndex - i.start) % i.rowSpan === 0) {\n            data = {\n              rowspan: i.rowSpan,\n              colspan: 1\n            };\n            return;\n          }\n        })\n\n        return data;\n      }\n        \n    },\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n  .tag {\n    color: white;\n    font-size: 14px;\n    width: 100px;\n  }\n\n  .sub_type_tag {\n    color: white;\n    font-size: 14px;\n    width: 120px;\n  }\n  .input-title {\n    display: inline-block;\n    width: 150px;\n    line-height: 25px;\n    font-size: 14px;\n    margin-left: 10px;\n  }\n  .quantity {\n    color: #2ecc71;\n    font-size: 18px;\n  }\n  .low-quantity {\n    color: red !important;\n  }\n</style>\n"],"sourceRoot":"src/views/inventory"}]}