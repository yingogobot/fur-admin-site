{"remainingRequest":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/src/views/inventory/storage-check.vue?vue&type=template&id=fc98cdce&scoped=true&","dependencies":[{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/src/views/inventory/storage-check.vue","mtime":1576573214586},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"app-container\" },\n    [\n      _c(\n        \"div\",\n        { staticClass: \"filter-container\" },\n        [\n          _c(\"h2\", [_vm._v(\"筛选结果\")]),\n          _vm._v(\" \"),\n          _c(\n            \"el-select\",\n            {\n              staticClass: \"filter-item\",\n              staticStyle: { width: \"150px\", \"margin-left\": \"15px\" },\n              attrs: { placeholder: \"产品类型\", clearable: \"\" },\n              on: {\n                change: function($event) {\n                  return _vm.getSubType(_vm.listQuery.product_type)\n                }\n              },\n              model: {\n                value: _vm.listQuery.product_type,\n                callback: function($$v) {\n                  _vm.$set(_vm.listQuery, \"product_type\", $$v)\n                },\n                expression: \"listQuery.product_type\"\n              }\n            },\n            _vm._l(_vm.productTypes, function(item) {\n              return _c(\"el-option\", {\n                key: item.id,\n                attrs: { label: item.title, value: item.id }\n              })\n            }),\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-select\",\n            {\n              staticClass: \"filter-item\",\n              staticStyle: { width: \"150px\", \"margin-left\": \"15px\" },\n              attrs: { placeholder: \"产品分类\", clearable: \"\" },\n              on: {\n                change: function($event) {\n                  return _vm.getSelectedProducts(_vm.listQuery.product_sub_type)\n                }\n              },\n              model: {\n                value: _vm.listQuery.product_sub_type,\n                callback: function($$v) {\n                  _vm.$set(_vm.listQuery, \"product_sub_type\", $$v)\n                },\n                expression: \"listQuery.product_sub_type\"\n              }\n            },\n            _vm._l(_vm.productSubTypes, function(item) {\n              return _c(\"el-option\", {\n                key: item.id,\n                attrs: { label: item.title, value: item.id }\n              })\n            }),\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-select\",\n            {\n              staticClass: \"filter-item\",\n              staticStyle: { width: \"150px\", \"margin-left\": \"15px\" },\n              attrs: { placeholder: \"产品\", clearable: \"\" },\n              model: {\n                value: _vm.listQuery.product,\n                callback: function($$v) {\n                  _vm.$set(_vm.listQuery, \"product\", $$v)\n                },\n                expression: \"listQuery.product\"\n              }\n            },\n            _vm._l(_vm.selectedProducts, function(item) {\n              return _c(\"el-option\", {\n                key: item.id,\n                attrs: { label: item.title, value: item.id }\n              })\n            }),\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-button\",\n            {\n              directives: [{ name: \"waves\", rawName: \"v-waves\" }],\n              staticClass: \"filter-item\",\n              staticStyle: { width: \"100px\", \"margin-left\": \"15px\" },\n              attrs: { type: \"primary\", icon: \"el-icon-search\" },\n              on: { click: _vm.handleFilter }\n            },\n            [_vm._v(\"\\n      搜索\\n    \")]\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"h2\", [_vm._v(\"入库详情\")]),\n      _vm._v(\" \"),\n      _c(\n        \"el-table\",\n        {\n          directives: [\n            {\n              name: \"loading\",\n              rawName: \"v-loading\",\n              value: _vm.listLoading,\n              expression: \"listLoading\"\n            }\n          ],\n          key: _vm.tableKey,\n          staticStyle: { width: \"100%\" },\n          attrs: {\n            data: _vm.inventories,\n            \"span-method\": _vm.objectSpanMethod,\n            border: \"\",\n            fit: \"\",\n            \"highlight-current-row\": \"\"\n          }\n        },\n        [\n          _c(\"el-table-column\", {\n            attrs: {\n              label: \"产品ID\",\n              prop: \"id\",\n              width: \"100px\",\n              align: \"center\"\n            },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(ref) {\n                  var row = ref.row\n                  return [_c(\"span\", [_vm._v(_vm._s(row.product_id))])]\n                }\n              }\n            ])\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: { label: \"产品类型\", width: \"150px\", align: \"center\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(ref) {\n                  var row = ref.row\n                  return [\n                    _c(\n                      \"el-tag\",\n                      { staticClass: \"tag\", attrs: { color: row.tag_color } },\n                      [_vm._v(_vm._s(row.product_type))]\n                    )\n                  ]\n                }\n              }\n            ])\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: { label: \"产品细类\", width: \"150px\", align: \"center\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(ref) {\n                  var row = ref.row\n                  return [\n                    _c(\n                      \"el-tag\",\n                      {\n                        staticClass: \"sub_type_tag\",\n                        attrs: { color: row.sub_type_tag_color }\n                      },\n                      [_vm._v(_vm._s(row.product_sub_type))]\n                    )\n                  ]\n                }\n              }\n            ])\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: { label: \"产品名称\", width: \"200px\", align: \"center\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(ref) {\n                  var row = ref.row\n                  return [\n                    _c(\n                      \"span\",\n                      {\n                        staticClass: \"link-type\",\n                        on: {\n                          click: function($event) {\n                            return _vm.handleUpdate(row)\n                          }\n                        }\n                      },\n                      [_vm._v(_vm._s(row.title))]\n                    )\n                  ]\n                }\n              }\n            ])\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: { label: \"产品型号\", width: \"200px\", align: \"center\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(ref) {\n                  var row = ref.row\n                  return [_c(\"span\", [_vm._v(_vm._s(row.size))])]\n                }\n              }\n            ])\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: { label: \"剩余数量\", \"min-width\": \"300px\", align: \"center\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(ref) {\n                  var row = ref.row\n                  return [\n                    _c(\n                      \"span\",\n                      {\n                        staticClass: \"quantity\",\n                        class: { \"low-quantity\": row.quantity <= 300 }\n                      },\n                      [_vm._v(_vm._s(row.quantity))]\n                    )\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"pagination\", {\n        directives: [\n          {\n            name: \"show\",\n            rawName: \"v-show\",\n            value: _vm.total > 0,\n            expression: \"total>0\"\n          }\n        ],\n        attrs: {\n          total: _vm.total,\n          page: _vm.listQuery.page,\n          limit: _vm.listQuery.limit\n        },\n        on: {\n          \"update:page\": function($event) {\n            return _vm.$set(_vm.listQuery, \"page\", $event)\n          },\n          \"update:limit\": function($event) {\n            return _vm.$set(_vm.listQuery, \"limit\", $event)\n          },\n          pagination: _vm.getAllStorage\n        }\n      })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}