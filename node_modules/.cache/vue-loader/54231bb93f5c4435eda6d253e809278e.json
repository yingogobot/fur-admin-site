{"remainingRequest":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/src/views/sales/sales-order.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/src/views/sales/sales-order.vue","mtime":1592300159794},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport SalesAPI from '@/api/sales.js'\nimport ProductAPI from '@/api/product'\nimport ResalerAPI from '@/api/resaler'\nimport EventAPI from '@/api/event'\nimport SalesChannelAPI from '@/api/sales-channel'\nimport MemberAPI from '@/api/member'\n\nimport waves from '@/directive/waves' // waves directive\nimport { roundToTwo } from '@/utils'\nimport Pagination from '@/components/Pagination' // secondary package based on el-pagination\nimport { mapGetters } from 'vuex'\nimport moment from 'moment'\n\nexport default {\n  name: 'ComplexTable',\n  components: { Pagination },\n  directives: { waves },\n  filters: {},\n  data() {\n    return {\n      tableKey: 0,\n      sales: null,\n      total: 0,\n      listLoading: true,\n      editingProduct: null,\n      salesTypes:[],\n      productTypes: [],\n      productSubTypes: [],\n      selectedProducts: [],\n      products: [],\n      resalers: [],\n      salesChannel: [],\n      events: [],\n      paymentTypes: [\n        {id: 0, title: '否'},\n        {id: 1, title: '是'}\n      ],\n      specialTypes: [\n        {id: 0, title: '否'},\n        {id: 1, title: '是'}\n      ],\n      listQuery: {\n        sales_id: undefined,\n        sales_type: undefined,\n        sales_channel_id: undefined,\n        page: 1,\n        limit: 10,\n        product_type: undefined,\n        product_sub_type: undefined,\n        product: undefined,\n        resaler_id: undefined,\n        event_id: undefined,\n        fully_paid: undefined,\n        special_type: undefined,\n        note: undefined,\n      },\n      temp: {\n        id: undefined, //this should only exist when editing\n        sales_type: undefined,\n        products: [{\n            product_type: undefined,\n            product_sub_type: undefined,\n            product_id: '',\n            quantity: 0,\n            cost: undefined,\n            price: undefined,\n            discount: 0,\n            discount_rate: 1,\n            note: undefined,\n            key: 1,\n            total_price: 0,\n            note: undefined,\n          }\n        ],\n        selectedProducts:[],\n        deletedProducts:[],\n        order_total_price: 0,\n        order_total_profit: 0,\n        coupon: 0,\n        discount: 1,\n        manual_discount: 0,\n        shipping_cost: 5,\n        other_cost: 0,\n        member: undefined,\n        sales_channel: undefined,\n        resaler: undefined,\n        event: undefined,\n        note: undefined,\n        fully_paid: true,\n        special_type: false,\n        date: undefined\n      },\n      memberCellphone: '',\n      isSearchingMember: false,\n      members:[],\n      dialogFormVisible: false,\n      formType: 0,\n      rowSpans: null,\n      pickerOptions: {\n        disabledDate(time) {\n          return time.getTime() > Date.now();\n        },\n        shortcuts: [{\n          text: '今天',\n          onClick(picker) {\n            picker.$emit('pick', new Date());\n          }\n        }, {\n          text: '昨天',\n          onClick(picker) {\n            const date = new Date();\n            date.setTime(date.getTime() - 3600 * 1000 * 24);\n            picker.$emit('pick', date);\n          }\n        }, {\n          text: '一周前',\n          onClick(picker) {\n            const date = new Date();\n            date.setTime(date.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', date);\n          }\n        }]\n      },\n    }\n  },\n  created() {\n    this.temp.date = new Date()\n  },\n  computed: {\n    ...mapGetters([\n      'id'\n    ])\n  },\n  beforeRouteEnter (to, from, next) {\n    next(vm => { \n      vm.getAllSales()\n      vm.getSalesCount()\n      vm.getProductTypes()\n      vm.getSalesTypes()\n      vm.getResalers()\n      vm.getSalesChannels()\n      vm.getEvents()\n      next();\n    }) \n  },\n  methods: {\n    calculateRowSpan() {\n      let g = []\n      let count = 0\n      this.sales.forEach(i => {\n        let found = false\n        g.forEach(t => {\n          if (t.id === i.id) {\n            found = true\n            t.end++\n            t.rowSpan++\n            count = t.start + t.rowSpan\n          }\n        })\n\n        if (!found) {\n          let newT = {\n            id: i.id,\n            start: count,\n            end: count+1,\n            rowSpan: 1\n          }\n          count++\n          g.push(newT)\n        }\n      });\n      console.log(g)\n      this.rowSpans = g;\n    },\n    getAllSales() {\n      this.listLoading = true\n      SalesAPI.getAllSales(this.listQuery)\n        .then(response => {\n          this.sales = response.data\n          this.listLoading = false\n          console.log(this.sales)\n          this.calculateRowSpan()\n        })\n        .catch(err => {\n          console.log(err)\n          this.$message({\n            message: 'getAllSales 读取库存失败，请联系徐神检查',\n            type: 'error'\n          })\n          this.listLoading = false\n        })\n    },\n    getSalesTypes() {\n      SalesAPI.getAllSalesType()\n        .then(response => {\n          this.salesTypes = response\n        })\n    },\n    getSalesCount() {\n      SalesAPI.getAllSalesCount(this.listQuery)\n        .then(response => {\n          this.total = response.total\n        })\n    },\n    getProductTypes() {\n      ProductAPI.getAllProductType()\n        .then(response => {\n          this.productTypes = response\n        })\n    },\n    getSubType(item) {\n      this.selectedProducts =[]\n      this.listQuery.product = undefined\n      this.listQuery.product_sub_type = undefined\n      this.productSubTypes = item.product_type.sub_type\n\n      if (item) {\n        item.product_sub_type = undefined\n        item.product_id = undefined\n        item.cost = undefined\n        item.size = undefined\n        item.quantity = 0\n        item.total_price = 0\n        item.discount = 0\n        item.discount_ratio = 1\n      }\n    },\n    getSelectedProducts(subType) {\n      this.selectedProducts =[]\n      this.listQuery.product = undefined\n\n      if (subType) {\n        ProductAPI.getProductBySubType({product_sub_type: subType})\n            .then(response => {\n              this.selectedProducts = response\n            })\n      }\n    },\n    getProductBySubType(subType, item) {\n      this.products = subType.products\n      if (item) {\n        item.product_id = undefined\n        item.cost = undefined\n        item.size = undefined\n        item.quantity = 0\n        item.total_price = 0\n        item.discount = 0\n        item.discount_ratio = 1\n      }\n    },\n    getResalers() {\n      ResalerAPI.getAllResalers()\n        .then(response => {\n          this.resalers = response\n        })\n    },\n    getEvents() {\n      EventAPI.getAllEvents()\n        .then(response => {\n          this.events = response\n        })\n    },\n    getSalesChannels() {\n      SalesChannelAPI.getAllSalesChannels()\n        .then(response => {\n          this.salesChannel = response\n        })\n    },\n    readProductInfo(item) {\n      this.products.forEach(p => {\n        if (p.id === item.product.id) {\n          item.product_id = p.id;\n          item.size = p.size;\n          item.cost = p.cost;\n          item.price = p.price;\n        }\n      })\n    },\n    calculateTotalPrice(item) {\n      item.total_price = roundToTwo((item.price - parseFloat(item.discount)) * parseFloat(item.discount_rate) * item.quantity)\n      item.total_cost = roundToTwo(item.cost * item.quantity)\n      item.total_profit = roundToTwo(item.total_price - item.total_cost)\n      this.calculateOrderPrice()\n    },\n    calculateOrderPrice() {\n      let total = 0\n      let total_product_cost = 0\n      // if (this.temp.products && this.temp.products.length > 0) {\n        this.temp.products.forEach(p => {\n          total = total + p.total_price;\n          total_product_cost = total_product_cost + p.total_cost\n        })\n      // }\n      // if (this.temp.selectedProducts && this.temp.selectedProducts.length > 0) {\n        this.temp.selectedProducts.forEach(p => {\n          total = total + p.total_price;\n          total_product_cost = total_product_cost + p.total_cost\n        })\n      // }\n      this.temp.order_total_price = roundToTwo( parseFloat(total) * parseFloat(this.temp.discount) + parseFloat(this.temp.shipping_cost) - parseFloat(this.temp.coupon) - parseFloat(this.temp.manual_discount));\n      this.temp.order_total_profit = roundToTwo(parseFloat(this.temp.order_total_price) - parseFloat(total_product_cost) - parseFloat(this.temp.shipping_cost) - parseFloat(this.temp.other_cost));\n\n    },\n    objectSpanMethod({ row, column, rowIndex, columnIndex }) {\n      if (columnIndex < 5 || (columnIndex >= 14 && columnIndex <= 23)) {\n        let data = {\n          rowspan: 0,\n          colspan: 0\n        };\n        this.rowSpans.forEach(i => {\n          if (rowIndex >= i.start && rowIndex < i.end && (rowIndex - i.start) % i.rowSpan === 0) {\n            data = {\n              rowspan: i.rowSpan,\n              colspan: 1\n            };\n            return;\n          }\n        })\n\n        return data;\n      }\n    },\n    handleFilter() {\n      this.listQuery.page = 1\n      this.getAllSales()\n      this.getSalesCount()\n    },\n    addMoreProduct() {\n      this.temp.products.push({\n        product_type: undefined,\n        product_sub_type: undefined,\n        product_id: '',\n        quantity: undefined,\n        cost: undefined,\n        price: undefined,\n        discount: 0,\n        discount_rate: 1.0,\n        note: undefined,\n        key: this.temp.products.length + 1,\n        total_price: 0\n      });\n    },\n    removeProduct(itemIndex) {\n      this.$delete(this.temp.products, itemIndex)\n      this.calculateOrderPrice()\n    },\n    addAllProductBySubType(subType) {\n      let id = 0\n      let discount = 1\n      if (subType === 1) { //小包冻干taobao\n        id = process.env.PRODUCT_SUB_TYPE_ID.MINI_FD\n        discount = 0.9\n      } else if (subType === 2) { //大包冻干\n        id = process.env.PRODUCT_SUB_TYPE_ID.LARGE_FD\n      } else if (subType === 3) { //肉干\n        id = process.env.PRODUCT_SUB_TYPE_ID.TREAT\n      } else if (subType === 4) { //犬用鲜粮\n        id = process.env.PRODUCT_SUB_TYPE_ID.DOG_FF\n      } else if (subType === 5) { //猫用鲜粮\n        id = process.env.PRODUCT_SUB_TYPE_ID.CAT_FF\n      } else if (subType === 6) { //小包冻干Kokowan\n        id = process.env.PRODUCT_SUB_TYPE_ID.MINI_FD\n        discount = 0.4\n      }\n      ProductAPI.getAllProductsBySubType(id)\n        .then(response => {\n          response.sub_type[0].products.forEach(p => {\n            if (subType !== 6 || (subType === 6 && p.id != 19)) { //小包冻干Kokowan\n              let pd = {\n                product_type: response,\n                product_sub_type: response.sub_type[0],\n                product_id: p.id,\n                product: p,\n                quantity: 1,\n                cost: p.cost,\n                price: p.price,\n                discount: 0,\n                discount_rate: discount,\n                note: undefined,\n                key: this.temp.products.length + 1,\n                total_price: 0\n              }\n              this.calculateTotalPrice(pd)\n              this.temp.products.push(pd);\n            }\n          })\n          this.calculateOrderPrice()\n        })\n        .catch(err => {\n          this.$message({\n            message: '作弊工具出问题了，请联系徐神检查',\n            type: 'error'\n          })\n        })\n    },\n    handleCreate() {\n      this.dialogFormVisible = true\n      this.formType = 1\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    clearFullyPaid() {\n      this.listQuery.fully_paid = undefined\n    },\n    clearSpecialType() {\n      this.listQuery.special_type = undefined\n    },\n    editSale(item) {\n      console.log(item)\n      let data = {\n        id: item.id,\n        sales_type: item.sales_type_id,\n        order_total_price: item.order_total_price,\n        order_total_profit: item.order_total_profit,\n        coupon: item.coupon,\n        discount: item.discount,\n        manual_discount: item.manual_discount,\n        shipping_cost: item.shipping_cost,\n        other_cost: item.other_cost,\n        member_id: item.member_id,\n        sales_channel: {\n          id: item.sales_channel_id,\n          title: item.sales_channel_title\n        },\n        resaler: {\n          id: item.resaler_id,\n          name: item.resaler_name\n        },\n        event: {\n          id: item.event_id,\n          title: item.event_title\n        },\n        note: item.note,\n        fully_paid: item.fully_paid === 1 ? true : false,\n        special_type: item.special_type  === 1 ? true : false,\n        date: item.date,\n        member: {\n          name: item.member_name,\n          cellphone: item.member_cellphone,\n          searchValue: item.member_cellphone + ' | ' + item.member_name\n        },\n        products: [],\n        selectedProducts: [],\n        deletedProducts:[]\n      }\n      this.sales.forEach(i => {\n        if (i.id === item.id) {\n          data.selectedProducts.push({\n            sales_product_id: i.sales_product_id,\n            title: i.product_title,\n            product_type: {\n              id: i.product_type_id,\n              title: i.product_type\n            },\n            product_sub_type: {\n              id: i.product_sub_type_id,\n              title: i.product_sub_type\n            },\n            product_id: i.product_id,\n            quantity: i.quantity,\n            cost: i.per_item_cost_atm,\n            price: i.per_item_price_atm,\n            discount: i.per_product_discount,\n            discount_rate: i.per_product_discount_ratio,\n            product_note: i.product_note,\n            key: i.product_id,\n            total_price: i.total_price,\n            total_cost: i.total_cost,\n            total_profit: i.total_profit,\n          })\n        }\n      })\n      this.temp = data\n      this.dialogFormVisible = true\n      this.formType = 2\n      this.calculateOrderPrice()\n    },\n    deleteSelectedProduct(itemIndex) {\n      this.temp.deletedProducts.push(this.temp.selectedProducts[itemIndex])\n      this.$delete(this.temp.selectedProducts, itemIndex)\n      this.calculateOrderPrice()\n    },\n    searchMember(query) {\n      this.isSearchingMember = true\n      if (query.length > 3) {\n        MemberAPI.searchMemberByCellphone({cellphone: query})\n          .then(response => {\n            this.isSearchingMember = false\n            this.members = response\n            this.members.forEach(m => {\n              m.searchValue = m.cellphone + ' | ' + m.name\n            })\n          })\n          .catch(err => {\n            this.$message({\n              message: '搜索失败，请联系徐神检查',\n              type: 'error'\n            })\n            this.isSearchingMember = false\n          })\n      }\n    },\n    selectMember(item) {\n      this.temp.member_name = item.name\n      this.temp.member_cellphone = item.cellphone\n    },\n    addSalesOrder() {\n      this.$confirm('确定添加?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.sendAddSalesRequest()\n      }).catch(() => {        \n      });\n    },\n    sendAddSalesRequest() {\n      let that = this\n      if (!this.temp.sales_type) {\n        this.$message({\n          message: '入库类型必须填写',\n          type: 'error'\n        })\n      } else if (this.temp.products.length === 0) {\n        this.$message({\n          message: '至少要有一个或以上的产品入库',\n          type: 'error'\n        })\n      } else {\n        let data = {\n          sales_data: {\n            type: this.temp.sales_type,\n            coupon: this.temp.coupon,\n            discount: this.temp.discount,\n            manual_discount: this.temp.manual_discount,\n            shipping_cost: this.temp.shipping_cost,\n            other_cost: this.temp.other_cost,\n            order_total_price: this.temp.order_total_price ? this.temp.order_total_price : 0,\n            order_total_profit: this.temp.order_total_profit ? this.temp.order_total_profit : 0,\n            sales_channel_id: this.temp.sales_channel ? this.temp.sales_channel.id : null,\n            member_id: this.temp.member ? this.temp.member.id : null,\n            resaler_id: this.temp.resaler ? this.temp.resaler.id : null,\n            event_id: this.temp.event ? this.temp.event.id : null,\n            fully_paid: this.temp.fully_paid ? 1 : 0,\n            special_type: this.temp.special_type ? 1 : 0,\n            added_by: this.id,\n            date: moment(this.temp.date).format('YYYY-MM-DD'),\n            note: this.temp.note\n          },\n          product_data: [],\n        }\n        this.temp.products.forEach(p => {\n          let d = {\n            product_id: p.product_id,\n            quantity: p.quantity,\n            per_item_cost_atm: p.cost,\n            per_item_price_atm: p.price,\n            per_product_discount: p.discount,\n            per_product_discount_ratio: p.discount_rate,\n            total_price: p.total_price,\n            total_cost: p.total_cost,\n            total_profit: p.total_profit,\n            note: p.note,\n          }\n          data.product_data.push(d)\n        })\n\n        this.listLoading = true\n        SalesAPI.addNewSalesRequest(data)\n          .then(response => {\n            that.listLoading = false\n            this.$alert('库存添加成功', '成功', {\n              confirmButtonText: '确定',\n              callback: action => {\n                this.page = 1\n                this.getAllSales()\n                this.dialogFormVisible = false\n                this.setDataBackToDefault()\n              }\n            });\n          })\n          .catch(err => {\n            that.$message({\n              message: '添加库存失败，请联系徐神检查',\n              type: 'error'\n            })\n            that.listLoading = false\n          })\n      }\n    },\n    updateSalesOrder() {\n      this.$confirm('确定所有的修改?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.sendUpdateSalesRequest()\n      }).catch(() => {        \n      });\n    },\n    sendUpdateSalesRequest() {\n      let that = this\n      let data = {\n        sales_data: {\n          id: this.temp.id,\n          type: this.temp.sales_type,\n          coupon: this.temp.coupon,\n          discount: this.temp.discount,\n          manual_discount: this.temp.manual_discount,\n          shipping_cost: this.temp.shipping_cost,\n          other_cost: this.temp.other_cost,\n          order_total_price: this.temp.order_total_price ? this.temp.order_total_price : 0,\n          order_total_profit: this.temp.order_total_profit ? this.temp.order_total_profit : 0,\n          sales_channel_id: this.temp.sales_channel.id,\n          member_id: this.temp.member.id,\n          resaler_id: this.temp.resaler.id,\n          event_id: this.temp.event.id,\n          fully_paid: this.temp.fully_paid ? 1 : 0,\n          special_type: this.temp.special_type ? 1 : 0,\n          added_by: this.id,\n          date: moment(this.temp.date).format('YYYY-MM-DD'),\n          note: this.temp.note\n        },\n        add_products: [],\n        delete_products: []\n      }\n      that.temp.products.forEach(p => {\n        if (p.product_id) {\n          let d = {\n            product_id: p.product_id,\n            quantity: p.quantity,\n            per_item_cost_atm: p.cost,\n            per_item_price_atm: p.price,\n            per_product_discount: p.discount,\n            per_product_discount_ratio: p.discount_rate,\n            total_price: p.total_price,\n            total_cost: p.total_cost,\n            total_profit: p.total_profit,\n            note: p.note,\n          }\n          data.add_products.push(d)\n        }\n      })\n\n      that.temp.deletedProducts.forEach(p => {\n        data.delete_products.push(p.sales_product_id)\n      })\n      console.log(data)\n      that.listLoading = true\n      SalesAPI.updateSales(data)\n        .then(response => {\n          that.listLoading = false\n          that.$alert('销售订单修改成功', '成功', {\n            confirmButtonText: '确定',\n            callback: action => {\n              that.page = 1\n              that.getAllSales()\n              that.dialogFormVisible = false\n              this.setDataBackToDefault()\n            }\n          });\n        })\n        .catch(err => {\n          that.$message({\n            message: '销售订单修改失败，请联系徐神检查',\n            type: 'error'\n          })\n          that.listLoading = false\n        })\n    },\n    setDataBackToDefault() {\n      this.temp = {\n        id: undefined,\n        sales_type: undefined,\n        products: [{\n            product_type: '',\n            product_sub_type: '',\n            product_id: '',\n            quantity: 0,\n            cost: undefined,\n            price: undefined,\n            discount: 0,\n            discount_rate: 1,\n            note: undefined,\n            key: 1,\n            total_price: 0\n          }\n        ],\n        selectedProducts:[],\n        deletedProducts: [],\n        order_total_price: 0,\n        order_total_profit: 0,\n        coupon: 0,\n        discount: 1,\n        manual_discount: 0,\n        shipping_cost: 5,\n        other_cost: 0,\n        sales_channel: undefined,\n        resaler_id: undefined,\n        event_id: undefined,\n        note: undefined,\n        fully_paid: true,\n        special_type: false,\n        date: new Date()\n      }\n    }\n  }\n}\n",{"version":3,"sources":["sales-order.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6afile":"sales-order.vue","sourceRoot":"src/views/sales","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <h2>筛选结果</h2>\n      <el-input v-model=\"listQuery.sales_id\" placeholder=\"出库批次\" style=\"width: 150px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-select v-model=\"listQuery.sales_type\" placeholder=\"出库类型\" clearable style=\"width: 150px; margin-left: 15px;\" class=\"filter-item\">\n        <el-option v-for=\"item in salesTypes\" :key=\"item.id\" :label=\"item.title\" :value=\"item.id\" />\n      </el-select>\n      <el-select v-if=\"listQuery.sales_type === 1\" v-model=\"listQuery.sales_channel_id\" placeholder=\"销售渠道\" clearable style=\"width: 150px; margin-left: 15px;\" class=\"filter-item\">\n        <el-option v-for=\"item in salesChannel\" :key=\"item.id\" :label=\"item.title\" :value=\"item.id\" />\n      </el-select>\n      <el-select v-if=\"listQuery.sales_type === 2\" v-model=\"listQuery.event_id\" placeholder=\"活动类型\" clearable style=\"width: 150px; margin-left: 15px;\" class=\"filter-item\">\n        <el-option v-for=\"item in events\" :key=\"item.id\" :label=\"item.title\" :value=\"item.id\" />\n      </el-select>\n      <el-select v-if=\"listQuery.sales_type === 3\" v-model=\"listQuery.resaler_id\" placeholder=\"分销渠道\" clearable style=\"width: 150px; margin-left: 15px;\" class=\"filter-item\">\n        <el-option v-for=\"item in resalers\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\" />\n      </el-select>\n      <el-select v-model=\"listQuery.product_type\" placeholder=\"产品类型\" clearable style=\"width: 150px; margin-left: 15px;\" class=\"filter-item\" @change=\"getSubType(listQuery.product_type)\">\n        <el-option v-for=\"item in productTypes\" :key=\"item.id\" :label=\"item.title\" :value=\"item.id\" />\n      </el-select>\n      <el-select v-model=\"listQuery.product_sub_type\" placeholder=\"产品分类\" clearable style=\"width: 150px; margin-left: 15px;\" class=\"filter-item\"  @change=\"getSelectedProducts(listQuery.product_sub_type)\">\n        <el-option v-for=\"item in productSubTypes\" :key=\"item.id\" :label=\"item.title\" :value=\"item.id\" />\n      </el-select>\n      <el-select v-model=\"listQuery.product\" placeholder=\"产品\" clearable style=\"width: 150px; margin-left: 15px;\" class=\"filter-item\">\n        <el-option v-for=\"item in selectedProducts\" :key=\"item.id\" :label=\"item.title\" :value=\"item.id\" />\n      </el-select>\n      <el-select v-model=\"listQuery.fully_paid\" placeholder=\"付款状态\" clearable style=\"width: 150px; margin-left: 15px;\" class=\"filter-item\" @clear=\"clearFullyPaid()\" >\n        <el-option v-for=\"item in paymentTypes\" :key=\"item.id\" :label=\"item.title\" :value=\"item.id\" />\n      </el-select>\n      <el-select v-model=\"listQuery.special_type\" placeholder=\"特殊状态\" clearable style=\"width: 150px; margin-left: 15px;\" class=\"filter-item\" @clear=\"clearSpecialType()\">\n        <el-option v-for=\"item in specialTypes\" :key=\"item.id\" :label=\"item.title\" :value=\"item.id\" />\n      </el-select>\n      <el-input v-model=\"listQuery.note\" placeholder=\"备注\" style=\"width: 150px; margin-left: 15px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-button v-waves class=\"filter-item\" type=\"primary\" icon=\"el-icon-search\" @click=\"handleFilter\" style=\"width: 100px; margin-left: 15px;\">\n        搜索\n      </el-button>\n      <el-button class=\"filter-item\" style=\"width: 200px; margin-left: 10px;\" type=\"success\" icon=\"el-icon-edit\" @click=\"handleCreate\">\n        添加新销售\n      </el-button>\n    </div>\n\n    <h2>销售详情</h2>\n    <el-table\n      :key=\"tableKey\"\n      v-loading=\"listLoading\"\n      :data=\"sales\"\n      :span-method=\"objectSpanMethod\"\n      border\n      fit\n      style=\"width: 100%;\"\n    >\n      <el-table-column label=\"订单ID\" prop=\"id\" width=\"80px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.id }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"销售类型\" prop=\"sales_type\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.sales_type }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"销售时间\" prop=\"sales_type\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{moment(row.date).format('YYYY-MM-DD')}}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"销售渠道\" prop=\"sales_type\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <div v-if=\"row.sales_type_id === 1\">\n            <span>直销</span>\n          </div>\n          <div v-if=\"row.sales_type_id === 2\">\n            <span>活动销售</span>\n          </div>\n          <div v-if=\"row.sales_type_id === 3\">\n            <span>分销取货</span>\n          </div>\n          <div v-if=\"row.sales_type_id === 5\">\n            <span>其他销售</span>\n          </div>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"客户信息\" prop=\"sales_type\" width=\"180px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <div v-if=\"row.sales_type_id === 1\">\n            <span>{{ row.member_name + ' | ' + row.member_cellphone }}</span>\n          </div>\n          <div v-if=\"row.sales_type_id === 2\">\n            <span>{{ row.event_title }}</span>\n          </div>\n          <div v-if=\"row.sales_type_id === 3\">\n            <span>{{ row.resaler_name }}</span>\n          </div>\n          <div v-if=\"row.sales_type_id === 4\">\n            <span>其他销售</span>\n          </div>\n        </template>\n      </el-table-column>\n     \n      <el-table-column label=\"产品类型\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <el-tag class=\"tag\" :color=\"row.tag_color\">{{ row.product_type }}</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"产品细类\" width=\"140px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <el-tag class=\"sub_type_tag\" :color=\"row.sub_type_tag_color\">{{ row.product_sub_type }}</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"产品名称\" width=\"150px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span class=\"link-type\" @click=\"handleUpdate(row)\">{{ row.product_title }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"产品型号\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.size }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"数量\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.quantity }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"销售价格\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>￥{{ row.per_item_price_atm }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"单品优惠\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>￥{{ row.per_product_discount }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"单品折扣率\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.per_product_discount_ratio * 100 }}%</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"单品总价\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>￥{{ row.total_price}}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"运费成本\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>￥{{ row.shipping_cost }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"其他成本\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>￥{{ row.other_cost }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"订单优惠\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>￥{{ row.coupon }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"订单折扣率\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.discount * 100 }}%</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"订单总价\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>￥{{ row.order_total_price }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"全额付款\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.fully_paid === 1 ? '是' : '否' }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"特殊状态\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.special_type === 1 ? '是' : '否' }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"录入人\" width=\"150px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.added_by_name }}</span>\n        </template>\n      </el-table-column>\n       <el-table-column label=\"备注\" width=\"150px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.note }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"编辑订单\" width=\"150px\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <el-button type=\"warning\" plain @click=\"editSale(scope.row)\">编辑</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.limit\" @pagination=\"getAllSales\" />\n\n    <el-dialog title=\"添加新销售\" :visible.sync=\"dialogFormVisible\" width=\"80%\">\n      <el-form ref=\"dataForm\"\n        :model=\"temp\" \n        label-position=\"left\" \n        label-width=\"10px\" \n        style=\"margin-left:20px;\">\n        <div>\n          <h3 style=\"display: inline-block; width: 100px;\"> 销售类型 </h3>\n          <el-form-item prop=\"type\" style=\"display: inline-block;\">\n            <el-select v-model=\"temp.sales_type\" placeholder=\"选择销售类型\">\n              <el-option v-for=\"item in salesTypes\" :key=\"item.id\" :label=\"item.title\" :value=\"item.id\" />\n            </el-select>\n          </el-form-item>\n        </div>\n        <div v-if=\"temp.sales_type === 1\">\n          <h3 style=\"display: inline-block; width: 100px;\"> 直销渠道 </h3>\n          <el-form-item prop=\"type\" style=\"display: inline-block;\">\n            <el-select v-model=\"temp.sales_channel\" value-key=\"id\" placeholder=\"选择入库类型\" >\n              <el-option v-for=\"item in salesChannel\" :key=\"item.id\" :label=\"item.title\" :value=\"item\" />\n            </el-select>\n          </el-form-item>\n          <h3 style=\"padding-left: 30px; display: inline-block; width: 100px;\"> 购买客户 </h3>\n          <el-form-item prop=\"type\" style=\"display: inline-block;\">\n            <el-select v-model=\"temp.member\" value-key=\"cellphone\" filterable remote placeholder=\"请输入手机号码\"\n              :remote-method=\"searchMember\" :loading=\"isSearchingMember\">\n              <el-option v-for=\"item in members\" :key=\"item.id\" :label=\"item.searchValue\" :value=\"item\" />\n            </el-select>\n          </el-form-item>\n          <span style=\"display: inline-block; margin-left: 20px;\" v-if=\"this.formType === 2 && temp.member\"> {{ temp.member.name + ' | ' + temp.member.cellphone }}</span>\n        </div>\n        <div v-if=\"temp.sales_type === 2\">\n          <h3 style=\"display: inline-block; width: 100px;\"> 活动名称 </h3>\n          <el-form-item prop=\"type\" style=\"display: inline-block;\">\n            <el-select v-model=\"temp.event\" value-key=\"id\" placeholder=\"选择入库类型\">\n              <el-option v-for=\"item in events\" :key=\"item.id\" :label=\"item.title\" :value=\"item\" />\n            </el-select>\n          </el-form-item>\n        </div>\n        <div v-if=\"temp.sales_type === 3\">\n          <h3 style=\"display: inline-block; width: 100px;\"> 分销渠道 </h3>\n          <el-form-item prop=\"type\" style=\"display: inline-block;\">\n            <el-select v-model=\"temp.resaler\" value-key=\"id\" placeholder=\"选择入库类型\">\n              <el-option v-for=\"item in resalers\" :key=\"item.id\" :label=\"item.name\" :value=\"item\" />\n            </el-select>\n          </el-form-item>\n        </div>\n        <div v-if=\"this.formType === 2 && temp.selectedProducts.length > 0\" style=\"margin-top:30px; margin-bottom: 30px;\">\n          <h3 style=\"display: inline-block; width: 100px; vertical-align: top; margin-top: 0;\"> 已添加产品 </h3>\n          <div style=\"display: inline-block; margin-bottom: 5px;\">\n            <div>\n              <div class=\"input-title input-title-extra-long\">产品类型</div>\n              <div class=\"input-title input-title-extra-long\">产品分类</div>\n              <div class=\"input-title input-title-extra-long\">产品名称</div>\n              <div class=\"input-title input-title-short\">零售价</div>\n              <div class=\"input-title input-title-short\">数量</div>\n              <div class=\"input-title input-title-short\">产品优惠</div>\n              <div class=\"input-title input-title-short\">产品折扣</div>\n              <div class=\"input-title input-title-extra-long\">总价</div>\n              <div class=\"input-title input-title-extra-long\">备注</div>\n            </div>\n            <div v-for=\"(p, index) in temp.selectedProducts\" :key=\"p.id\" prop=\"product\" style=\"margin-top:20px; margin-bottom: 5px;\">\n              <div class=\"input-title input-title-extra-long\">{{p.product_type.title}}</div>\n              <div class=\"input-title input-title-extra-long\">{{p.product_sub_type.title}}</div>\n              <div class=\"input-title input-title-extra-long\">{{p.title}}</div>\n              <div class=\"input-title input-title-short\">{{p.price}}</div>\n              <div class=\"input-title input-title-short\">{{p.quantity}}</div>\n              <div class=\"input-title input-title-short\">{{p.discount}}</div>\n              <div class=\"input-title input-title-short\">{{p.discount_rate}}</div>\n              <div class=\"input-title input-title-extra-long\">{{p.total_price}}</div>\n              <div class=\"input-title input-title-extra-long\">{{p.product_note}}</div>\n              <el-button type=\"danger\" @click=\"deleteSelectedProduct(index)\">\n                删除\n              </el-button>\n              <hr />\n            </div>\n          </div>\n        </div>\n        <div>\n          <h3 v-if=\"this.formType === 1\" style=\"display: inline-block; width: 100px; vertical-align: top; margin-top: 0;\"> 销售产品 </h3>\n          <h3  v-if=\"this.formType === 2\" style=\"display: inline-block; width: 100px; vertical-align: top; margin-top: 0;\"> 添加销售产品 </h3>\n\n          <div style=\"margin-bottom: 20px\"> \n            作弊工具：\n            <el-button type=\"info\" @click=\"addAllProductBySubType(1)\">\n              添加淘宝小冻干套装\n            </el-button>\n            <el-button type=\"info\" @click=\"addAllProductBySubType(6)\">\n              添加koko小冻干套装\n            </el-button>\n            <el-button type=\"info\" @click=\"addAllProductBySubType(2)\">\n              添加大冻干套装\n            </el-button>\n            <el-button type=\"info\" @click=\"addAllProductBySubType(3)\">\n              添加肉干套装\n            </el-button>\n            <el-button type=\"info\" @click=\"addAllProductBySubType(4)\">\n              添加狗鲜粮套装\n            </el-button>\n            <el-button type=\"info\" @click=\"addAllProductBySubType(5)\">\n              添加猫鲜粮套装\n            </el-button>\n          </div>\n          <div style=\"display: inline-block;\">\n            <div style=\" margin-bottom: 5px;\">\n              <div class=\"input-title input-title-extra-long\">产品类型</div>\n              <div class=\"input-title input-title-extra-long\">产品分类</div>\n              <div class=\"input-title input-title-extra-long\">产品名称</div>\n              <div class=\"input-title input-title-short\">零售价</div>\n              <div class=\"input-title input-title-short\">数量</div>\n              <div class=\"input-title input-title-short\">产品优惠</div>\n              <div class=\"input-title input-title-short\">产品折扣</div>\n              <div class=\"input-title input-title-extra-long\">总价</div>\n              <div class=\"input-title input-title-extra-long\">备注</div>\n            </div>\n            <el-form-item v-for=\"(p, index) in temp.products\" \n              label=\"\" :key=\"p.id\" prop=\"product\" style=\"margin-bottom: 10px;\">\n              <el-select v-model=\"p.product_type\" value-key=\"id\" placeholder=\"产品类型\" \n                clearable style=\"width: 150px;\" class=\"filter-item\" \n                @change=\"getSubType(p)\"\n                @clear=\"getSubType(p)\">\n                <el-option v-for=\"item in productTypes\" :key=\"item.id\" :label=\"item.title\" :value=\"item\" />\n              </el-select>\n              <el-select v-if=\"temp.products[index].product_type\" v-model=\"p.product_sub_type\" value-key=\"id\" class=\"filter-item inventory-in-input-extra\" \n                placeholder=\"产品分类\" clearable \n                @change=\"getProductBySubType(p.product_sub_type, p)\" \n                @clear=\"getProductBySubType(p.product_sub_type, p)\">\n                <el-option  v-for=\"item in temp.products[index].product_type.sub_type\" :key=\"item.id\" :label=\"item.title\" :value=\"item\" />\n              </el-select>\n              <el-select v-if=\"temp.products[index].product_sub_type\" v-model=\"p.product\" value-key=\"id\" class=\"filter-item inventory-in-input-extra\" \n                placeholder=\"产品名称\" clearable \n                @change=\"readProductInfo(p)\"\n                @clear=\"readProductInfo(p)\">\n                <el-option v-for=\"item in temp.products[index].product_sub_type.products\" :key=\"item.id\" :label=\"item.title\" :value=\"item\" />\n              </el-select>\n              <el-input placeholder=\"零售价\" v-model=\"p.price\" :disabled=\"true\" class=\"filter-item inventory-in-input-short\" />\n              <el-input v-model=\"p.quantity\" placeholder=\"数量\" class=\"filter-item inventory-in-input-short\" clearable @change=\"calculateTotalPrice(p)\" />\n              <el-input v-model=\"p.discount\" placeholder=\"产品优惠\" class=\"filter-item inventory-in-input-short\" clearable @change=\"calculateTotalPrice(p)\"  />\n              <el-input v-model=\"p.discount_rate\" placeholder=\"折扣率\" class=\"filter-item inventory-in-input-short\" clearable @change=\"calculateTotalPrice(p)\"  />\n              <el-input v-model=\"p.total_price\" placeholder=\"总价\" class=\"filter-item inventory-in-input-extra\" clearable :disabled=\"true\"/>\n              <el-input v-model=\"p.note\" placeholder=\"备注\" class=\"filter-item inventory-in-input-extra\" clearable/>\n              <el-button style=\"margin-left: 10px;\" type=\"danger\" icon=\"el-icon-delete\" @click=\"removeProduct(index)\" />\n            </el-form-item>\n\n            <el-form-item>\n              <el-button style=\"width: 150px;\" type=\"primary\" plain @click=\"addMoreProduct\">添加产品</el-button>\n              <div> 产品折扣为0-1，例如：9折，则填写0.9</div>\n              <div> 总价 =（零售价 * 产品折扣 - 产品优惠）* 数量</div>\n            </el-form-item>\n          </div>\n          <div style=\" margin-bottom: 20px; \">\n            <h3 class=\"section-title\"> 优惠信息 </h3>\n            <div style=\"display: inline-block; width: 150px;\">\n              <h3 class=\"middle-title\"> 订单优惠券 </h3>\n              <el-input v-model=\"temp.coupon\" placeholder=\"订单优惠券\" class=\"filter-item\" clearable @change=\"calculateOrderPrice()\" />\n            </div>\n            <div style=\"margin-left: 10px; display: inline-block; width: 150px;\">\n              <h3 class=\"middle-title\"> 订单折扣 </h3>\n              <el-input v-model=\"temp.discount\" placeholder=\"订单折扣\" class=\"filter-item\" clearable @change=\"calculateOrderPrice()\" />\n            </div>\n            <div style=\"margin-left: 10px; display: inline-block; width: 150px;\">\n              <h3 class=\"middle-title\"> 人工改价 </h3>\n              <el-input v-model=\"temp.manual_discount\" placeholder=\"人工改价\" class=\"filter-item\" clearable @change=\"calculateOrderPrice()\" />\n            </div>\n          </div>\n          <div style=\" margin-bottom: 20px; \">\n            <h3 class=\"section-title\"> 其他成本 </h3>\n            <div style=\"display: inline-block; width: 150px;\">\n              <h3 class=\"middle-title\"> 运费 </h3>\n              <el-input v-model=\"temp.shipping_cost\" placeholder=\"运费\" class=\"filter-item\" clearable @change=\"calculateOrderPrice()\" />\n            </div>\n            <div style=\"margin-left: 10px; display: inline-block; width: 150px;\">\n              <h3 class=\"middle-title\"> 额外成本 </h3>\n              <el-input v-model=\"temp.other_cost\" placeholder=\"额外成本\" class=\"filter-item\" clearable @change=\"calculateOrderPrice()\" />\n            </div>\n          </div>\n          <div style=\" margin-bottom: 20px; \">\n            <h3 class=\"section-title\"> 汇总信息 </h3>\n            <div style=\"display: inline-block; width: 150px;\">\n              <h3 class=\"middle-title\"> 订单总价 </h3>\n              <el-input v-model=\"temp.order_total_price\" placeholder=\"订单总价\" class=\"filter-item\" clearable :disabled=\"true\" />\n            </div>\n            <div style=\"margin-left: 10px; display: inline-block; width: 150px;\">\n              <h3 class=\"middle-title\"> 订单总利润 </h3>\n              <el-input v-model=\"temp.order_total_profit\" placeholder=\"订单总利润\" class=\"filter-item\" clearable :disabled=\"true\" />\n            </div>\n            <div style=\"margin-left: 10px; display: inline-block; width: 150px;\">\n              <h3 class=\"block-title\"> 是否全额付款 </h3>\n              <el-checkbox v-model=\"temp.fully_paid\">全额付款</el-checkbox>\n            </div>\n            <div style=\"margin-left: 10px; display: inline-block; width: 150px;\">\n              <h3 class=\"block-title\"> 特殊状态 </h3>\n              <el-checkbox v-model=\"temp.special_type\">特殊状态</el-checkbox>\n            </div>\n          </div>\n          <div style=\" margin-bottom: 20px; \">\n            <h3 class=\"section-title\"> 订单日期 </h3>\n            <el-date-picker\n              v-model=\"temp.date\"\n              align=\"right\"\n              type=\"date\"\n              placeholder=\"选择日期\"\n              :picker-options=\"pickerOptions\">\n            </el-date-picker>\n          </div>\n          <div>\n            <h3 class=\"section-title\"> 出库备注 </h3>\n            <el-input\n              type=\"textarea\"\n              :autosize=\"{ minRows: 2, maxRows: 4}\"\n              placeholder=\"备注\"\n              v-model=\"temp.note\"\n              style=\"width: 70%\" />\n          </div>\n        </div>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">\n          取消\n        </el-button>\n        <el-button v-if=\"this.formType === 1\" type=\"primary\" @click=\"addSalesOrder()\">\n          提交新的销售订单\n        </el-button>\n        <el-button v-if=\"this.formType === 2\" type=\"primary\" @click=\"updateSalesOrder()\">\n          修改当前销售订单\n        </el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport SalesAPI from '@/api/sales.js'\nimport ProductAPI from '@/api/product'\nimport ResalerAPI from '@/api/resaler'\nimport EventAPI from '@/api/event'\nimport SalesChannelAPI from '@/api/sales-channel'\nimport MemberAPI from '@/api/member'\n\nimport waves from '@/directive/waves' // waves directive\nimport { roundToTwo } from '@/utils'\nimport Pagination from '@/components/Pagination' // secondary package based on el-pagination\nimport { mapGetters } from 'vuex'\nimport moment from 'moment'\n\nexport default {\n  name: 'ComplexTable',\n  components: { Pagination },\n  directives: { waves },\n  filters: {},\n  data() {\n    return {\n      tableKey: 0,\n      sales: null,\n      total: 0,\n      listLoading: true,\n      editingProduct: null,\n      salesTypes:[],\n      productTypes: [],\n      productSubTypes: [],\n      selectedProducts: [],\n      products: [],\n      resalers: [],\n      salesChannel: [],\n      events: [],\n      paymentTypes: [\n        {id: 0, title: '否'},\n        {id: 1, title: '是'}\n      ],\n      specialTypes: [\n        {id: 0, title: '否'},\n        {id: 1, title: '是'}\n      ],\n      listQuery: {\n        sales_id: undefined,\n        sales_type: undefined,\n        sales_channel_id: undefined,\n        page: 1,\n        limit: 10,\n        product_type: undefined,\n        product_sub_type: undefined,\n        product: undefined,\n        resaler_id: undefined,\n        event_id: undefined,\n        fully_paid: undefined,\n        special_type: undefined,\n        note: undefined,\n      },\n      temp: {\n        id: undefined, //this should only exist when editing\n        sales_type: undefined,\n        products: [{\n            product_type: undefined,\n            product_sub_type: undefined,\n            product_id: '',\n            quantity: 0,\n            cost: undefined,\n            price: undefined,\n            discount: 0,\n            discount_rate: 1,\n            note: undefined,\n            key: 1,\n            total_price: 0,\n            note: undefined,\n          }\n        ],\n        selectedProducts:[],\n        deletedProducts:[],\n        order_total_price: 0,\n        order_total_profit: 0,\n        coupon: 0,\n        discount: 1,\n        manual_discount: 0,\n        shipping_cost: 5,\n        other_cost: 0,\n        member: undefined,\n        sales_channel: undefined,\n        resaler: undefined,\n        event: undefined,\n        note: undefined,\n        fully_paid: true,\n        special_type: false,\n        date: undefined\n      },\n      memberCellphone: '',\n      isSearchingMember: false,\n      members:[],\n      dialogFormVisible: false,\n      formType: 0,\n      rowSpans: null,\n      pickerOptions: {\n        disabledDate(time) {\n          return time.getTime() > Date.now();\n        },\n        shortcuts: [{\n          text: '今天',\n          onClick(picker) {\n            picker.$emit('pick', new Date());\n          }\n        }, {\n          text: '昨天',\n          onClick(picker) {\n            const date = new Date();\n            date.setTime(date.getTime() - 3600 * 1000 * 24);\n            picker.$emit('pick', date);\n          }\n        }, {\n          text: '一周前',\n          onClick(picker) {\n            const date = new Date();\n            date.setTime(date.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', date);\n          }\n        }]\n      },\n    }\n  },\n  created() {\n    this.temp.date = new Date()\n  },\n  computed: {\n    ...mapGetters([\n      'id'\n    ])\n  },\n  beforeRouteEnter (to, from, next) {\n    next(vm => { \n      vm.getAllSales()\n      vm.getSalesCount()\n      vm.getProductTypes()\n      vm.getSalesTypes()\n      vm.getResalers()\n      vm.getSalesChannels()\n      vm.getEvents()\n      next();\n    }) \n  },\n  methods: {\n    calculateRowSpan() {\n      let g = []\n      let count = 0\n      this.sales.forEach(i => {\n        let found = false\n        g.forEach(t => {\n          if (t.id === i.id) {\n            found = true\n            t.end++\n            t.rowSpan++\n            count = t.start + t.rowSpan\n          }\n        })\n\n        if (!found) {\n          let newT = {\n            id: i.id,\n            start: count,\n            end: count+1,\n            rowSpan: 1\n          }\n          count++\n          g.push(newT)\n        }\n      });\n      console.log(g)\n      this.rowSpans = g;\n    },\n    getAllSales() {\n      this.listLoading = true\n      SalesAPI.getAllSales(this.listQuery)\n        .then(response => {\n          this.sales = response.data\n          this.listLoading = false\n          console.log(this.sales)\n          this.calculateRowSpan()\n        })\n        .catch(err => {\n          console.log(err)\n          this.$message({\n            message: 'getAllSales 读取库存失败，请联系徐神检查',\n            type: 'error'\n          })\n          this.listLoading = false\n        })\n    },\n    getSalesTypes() {\n      SalesAPI.getAllSalesType()\n        .then(response => {\n          this.salesTypes = response\n        })\n    },\n    getSalesCount() {\n      SalesAPI.getAllSalesCount(this.listQuery)\n        .then(response => {\n          this.total = response.total\n        })\n    },\n    getProductTypes() {\n      ProductAPI.getAllProductType()\n        .then(response => {\n          this.productTypes = response\n        })\n    },\n    getSubType(item) {\n      this.selectedProducts =[]\n      this.listQuery.product = undefined\n      this.listQuery.product_sub_type = undefined\n      this.productSubTypes = item.product_type.sub_type\n\n      if (item) {\n        item.product_sub_type = undefined\n        item.product_id = undefined\n        item.cost = undefined\n        item.size = undefined\n        item.quantity = 0\n        item.total_price = 0\n        item.discount = 0\n        item.discount_ratio = 1\n      }\n    },\n    getSelectedProducts(subType) {\n      this.selectedProducts =[]\n      this.listQuery.product = undefined\n\n      if (subType) {\n        ProductAPI.getProductBySubType({product_sub_type: subType})\n            .then(response => {\n              this.selectedProducts = response\n            })\n      }\n    },\n    getProductBySubType(subType, item) {\n      this.products = subType.products\n      if (item) {\n        item.product_id = undefined\n        item.cost = undefined\n        item.size = undefined\n        item.quantity = 0\n        item.total_price = 0\n        item.discount = 0\n        item.discount_ratio = 1\n      }\n    },\n    getResalers() {\n      ResalerAPI.getAllResalers()\n        .then(response => {\n          this.resalers = response\n        })\n    },\n    getEvents() {\n      EventAPI.getAllEvents()\n        .then(response => {\n          this.events = response\n        })\n    },\n    getSalesChannels() {\n      SalesChannelAPI.getAllSalesChannels()\n        .then(response => {\n          this.salesChannel = response\n        })\n    },\n    readProductInfo(item) {\n      this.products.forEach(p => {\n        if (p.id === item.product.id) {\n          item.product_id = p.id;\n          item.size = p.size;\n          item.cost = p.cost;\n          item.price = p.price;\n        }\n      })\n    },\n    calculateTotalPrice(item) {\n      item.total_price = roundToTwo((item.price - parseFloat(item.discount)) * parseFloat(item.discount_rate) * item.quantity)\n      item.total_cost = roundToTwo(item.cost * item.quantity)\n      item.total_profit = roundToTwo(item.total_price - item.total_cost)\n      this.calculateOrderPrice()\n    },\n    calculateOrderPrice() {\n      let total = 0\n      let total_product_cost = 0\n      // if (this.temp.products && this.temp.products.length > 0) {\n        this.temp.products.forEach(p => {\n          total = total + p.total_price;\n          total_product_cost = total_product_cost + p.total_cost\n        })\n      // }\n      // if (this.temp.selectedProducts && this.temp.selectedProducts.length > 0) {\n        this.temp.selectedProducts.forEach(p => {\n          total = total + p.total_price;\n          total_product_cost = total_product_cost + p.total_cost\n        })\n      // }\n      this.temp.order_total_price = roundToTwo( parseFloat(total) * parseFloat(this.temp.discount) + parseFloat(this.temp.shipping_cost) - parseFloat(this.temp.coupon) - parseFloat(this.temp.manual_discount));\n      this.temp.order_total_profit = roundToTwo(parseFloat(this.temp.order_total_price) - parseFloat(total_product_cost) - parseFloat(this.temp.shipping_cost) - parseFloat(this.temp.other_cost));\n\n    },\n    objectSpanMethod({ row, column, rowIndex, columnIndex }) {\n      if (columnIndex < 5 || (columnIndex >= 14 && columnIndex <= 23)) {\n        let data = {\n          rowspan: 0,\n          colspan: 0\n        };\n        this.rowSpans.forEach(i => {\n          if (rowIndex >= i.start && rowIndex < i.end && (rowIndex - i.start) % i.rowSpan === 0) {\n            data = {\n              rowspan: i.rowSpan,\n              colspan: 1\n            };\n            return;\n          }\n        })\n\n        return data;\n      }\n    },\n    handleFilter() {\n      this.listQuery.page = 1\n      this.getAllSales()\n      this.getSalesCount()\n    },\n    addMoreProduct() {\n      this.temp.products.push({\n        product_type: undefined,\n        product_sub_type: undefined,\n        product_id: '',\n        quantity: undefined,\n        cost: undefined,\n        price: undefined,\n        discount: 0,\n        discount_rate: 1.0,\n        note: undefined,\n        key: this.temp.products.length + 1,\n        total_price: 0\n      });\n    },\n    removeProduct(itemIndex) {\n      this.$delete(this.temp.products, itemIndex)\n      this.calculateOrderPrice()\n    },\n    addAllProductBySubType(subType) {\n      let id = 0\n      let discount = 1\n      if (subType === 1) { //小包冻干taobao\n        id = process.env.PRODUCT_SUB_TYPE_ID.MINI_FD\n        discount = 0.9\n      } else if (subType === 2) { //大包冻干\n        id = process.env.PRODUCT_SUB_TYPE_ID.LARGE_FD\n      } else if (subType === 3) { //肉干\n        id = process.env.PRODUCT_SUB_TYPE_ID.TREAT\n      } else if (subType === 4) { //犬用鲜粮\n        id = process.env.PRODUCT_SUB_TYPE_ID.DOG_FF\n      } else if (subType === 5) { //猫用鲜粮\n        id = process.env.PRODUCT_SUB_TYPE_ID.CAT_FF\n      } else if (subType === 6) { //小包冻干Kokowan\n        id = process.env.PRODUCT_SUB_TYPE_ID.MINI_FD\n        discount = 0.4\n      }\n      ProductAPI.getAllProductsBySubType(id)\n        .then(response => {\n          response.sub_type[0].products.forEach(p => {\n            if (subType !== 6 || (subType === 6 && p.id != 19)) { //小包冻干Kokowan\n              let pd = {\n                product_type: response,\n                product_sub_type: response.sub_type[0],\n                product_id: p.id,\n                product: p,\n                quantity: 1,\n                cost: p.cost,\n                price: p.price,\n                discount: 0,\n                discount_rate: discount,\n                note: undefined,\n                key: this.temp.products.length + 1,\n                total_price: 0\n              }\n              this.calculateTotalPrice(pd)\n              this.temp.products.push(pd);\n            }\n          })\n          this.calculateOrderPrice()\n        })\n        .catch(err => {\n          this.$message({\n            message: '作弊工具出问题了，请联系徐神检查',\n            type: 'error'\n          })\n        })\n    },\n    handleCreate() {\n      this.dialogFormVisible = true\n      this.formType = 1\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    clearFullyPaid() {\n      this.listQuery.fully_paid = undefined\n    },\n    clearSpecialType() {\n      this.listQuery.special_type = undefined\n    },\n    editSale(item) {\n      console.log(item)\n      let data = {\n        id: item.id,\n        sales_type: item.sales_type_id,\n        order_total_price: item.order_total_price,\n        order_total_profit: item.order_total_profit,\n        coupon: item.coupon,\n        discount: item.discount,\n        manual_discount: item.manual_discount,\n        shipping_cost: item.shipping_cost,\n        other_cost: item.other_cost,\n        member_id: item.member_id,\n        sales_channel: {\n          id: item.sales_channel_id,\n          title: item.sales_channel_title\n        },\n        resaler: {\n          id: item.resaler_id,\n          name: item.resaler_name\n        },\n        event: {\n          id: item.event_id,\n          title: item.event_title\n        },\n        note: item.note,\n        fully_paid: item.fully_paid === 1 ? true : false,\n        special_type: item.special_type  === 1 ? true : false,\n        date: item.date,\n        member: {\n          name: item.member_name,\n          cellphone: item.member_cellphone,\n          searchValue: item.member_cellphone + ' | ' + item.member_name\n        },\n        products: [],\n        selectedProducts: [],\n        deletedProducts:[]\n      }\n      this.sales.forEach(i => {\n        if (i.id === item.id) {\n          data.selectedProducts.push({\n            sales_product_id: i.sales_product_id,\n            title: i.product_title,\n            product_type: {\n              id: i.product_type_id,\n              title: i.product_type\n            },\n            product_sub_type: {\n              id: i.product_sub_type_id,\n              title: i.product_sub_type\n            },\n            product_id: i.product_id,\n            quantity: i.quantity,\n            cost: i.per_item_cost_atm,\n            price: i.per_item_price_atm,\n            discount: i.per_product_discount,\n            discount_rate: i.per_product_discount_ratio,\n            product_note: i.product_note,\n            key: i.product_id,\n            total_price: i.total_price,\n            total_cost: i.total_cost,\n            total_profit: i.total_profit,\n          })\n        }\n      })\n      this.temp = data\n      this.dialogFormVisible = true\n      this.formType = 2\n      this.calculateOrderPrice()\n    },\n    deleteSelectedProduct(itemIndex) {\n      this.temp.deletedProducts.push(this.temp.selectedProducts[itemIndex])\n      this.$delete(this.temp.selectedProducts, itemIndex)\n      this.calculateOrderPrice()\n    },\n    searchMember(query) {\n      this.isSearchingMember = true\n      if (query.length > 3) {\n        MemberAPI.searchMemberByCellphone({cellphone: query})\n          .then(response => {\n            this.isSearchingMember = false\n            this.members = response\n            this.members.forEach(m => {\n              m.searchValue = m.cellphone + ' | ' + m.name\n            })\n          })\n          .catch(err => {\n            this.$message({\n              message: '搜索失败，请联系徐神检查',\n              type: 'error'\n            })\n            this.isSearchingMember = false\n          })\n      }\n    },\n    selectMember(item) {\n      this.temp.member_name = item.name\n      this.temp.member_cellphone = item.cellphone\n    },\n    addSalesOrder() {\n      this.$confirm('确定添加?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.sendAddSalesRequest()\n      }).catch(() => {        \n      });\n    },\n    sendAddSalesRequest() {\n      let that = this\n      if (!this.temp.sales_type) {\n        this.$message({\n          message: '入库类型必须填写',\n          type: 'error'\n        })\n      } else if (this.temp.products.length === 0) {\n        this.$message({\n          message: '至少要有一个或以上的产品入库',\n          type: 'error'\n        })\n      } else {\n        let data = {\n          sales_data: {\n            type: this.temp.sales_type,\n            coupon: this.temp.coupon,\n            discount: this.temp.discount,\n            manual_discount: this.temp.manual_discount,\n            shipping_cost: this.temp.shipping_cost,\n            other_cost: this.temp.other_cost,\n            order_total_price: this.temp.order_total_price ? this.temp.order_total_price : 0,\n            order_total_profit: this.temp.order_total_profit ? this.temp.order_total_profit : 0,\n            sales_channel_id: this.temp.sales_channel ? this.temp.sales_channel.id : null,\n            member_id: this.temp.member ? this.temp.member.id : null,\n            resaler_id: this.temp.resaler ? this.temp.resaler.id : null,\n            event_id: this.temp.event ? this.temp.event.id : null,\n            fully_paid: this.temp.fully_paid ? 1 : 0,\n            special_type: this.temp.special_type ? 1 : 0,\n            added_by: this.id,\n            date: moment(this.temp.date).format('YYYY-MM-DD'),\n            note: this.temp.note\n          },\n          product_data: [],\n        }\n        this.temp.products.forEach(p => {\n          let d = {\n            product_id: p.product_id,\n            quantity: p.quantity,\n            per_item_cost_atm: p.cost,\n            per_item_price_atm: p.price,\n            per_product_discount: p.discount,\n            per_product_discount_ratio: p.discount_rate,\n            total_price: p.total_price,\n            total_cost: p.total_cost,\n            total_profit: p.total_profit,\n            note: p.note,\n          }\n          data.product_data.push(d)\n        })\n\n        this.listLoading = true\n        SalesAPI.addNewSalesRequest(data)\n          .then(response => {\n            that.listLoading = false\n            this.$alert('库存添加成功', '成功', {\n              confirmButtonText: '确定',\n              callback: action => {\n                this.page = 1\n                this.getAllSales()\n                this.dialogFormVisible = false\n                this.setDataBackToDefault()\n              }\n            });\n          })\n          .catch(err => {\n            that.$message({\n              message: '添加库存失败，请联系徐神检查',\n              type: 'error'\n            })\n            that.listLoading = false\n          })\n      }\n    },\n    updateSalesOrder() {\n      this.$confirm('确定所有的修改?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.sendUpdateSalesRequest()\n      }).catch(() => {        \n      });\n    },\n    sendUpdateSalesRequest() {\n      let that = this\n      let data = {\n        sales_data: {\n          id: this.temp.id,\n          type: this.temp.sales_type,\n          coupon: this.temp.coupon,\n          discount: this.temp.discount,\n          manual_discount: this.temp.manual_discount,\n          shipping_cost: this.temp.shipping_cost,\n          other_cost: this.temp.other_cost,\n          order_total_price: this.temp.order_total_price ? this.temp.order_total_price : 0,\n          order_total_profit: this.temp.order_total_profit ? this.temp.order_total_profit : 0,\n          sales_channel_id: this.temp.sales_channel.id,\n          member_id: this.temp.member.id,\n          resaler_id: this.temp.resaler.id,\n          event_id: this.temp.event.id,\n          fully_paid: this.temp.fully_paid ? 1 : 0,\n          special_type: this.temp.special_type ? 1 : 0,\n          added_by: this.id,\n          date: moment(this.temp.date).format('YYYY-MM-DD'),\n          note: this.temp.note\n        },\n        add_products: [],\n        delete_products: []\n      }\n      that.temp.products.forEach(p => {\n        if (p.product_id) {\n          let d = {\n            product_id: p.product_id,\n            quantity: p.quantity,\n            per_item_cost_atm: p.cost,\n            per_item_price_atm: p.price,\n            per_product_discount: p.discount,\n            per_product_discount_ratio: p.discount_rate,\n            total_price: p.total_price,\n            total_cost: p.total_cost,\n            total_profit: p.total_profit,\n            note: p.note,\n          }\n          data.add_products.push(d)\n        }\n      })\n\n      that.temp.deletedProducts.forEach(p => {\n        data.delete_products.push(p.sales_product_id)\n      })\n      console.log(data)\n      that.listLoading = true\n      SalesAPI.updateSales(data)\n        .then(response => {\n          that.listLoading = false\n          that.$alert('销售订单修改成功', '成功', {\n            confirmButtonText: '确定',\n            callback: action => {\n              that.page = 1\n              that.getAllSales()\n              that.dialogFormVisible = false\n              this.setDataBackToDefault()\n            }\n          });\n        })\n        .catch(err => {\n          that.$message({\n            message: '销售订单修改失败，请联系徐神检查',\n            type: 'error'\n          })\n          that.listLoading = false\n        })\n    },\n    setDataBackToDefault() {\n      this.temp = {\n        id: undefined,\n        sales_type: undefined,\n        products: [{\n            product_type: '',\n            product_sub_type: '',\n            product_id: '',\n            quantity: 0,\n            cost: undefined,\n            price: undefined,\n            discount: 0,\n            discount_rate: 1,\n            note: undefined,\n            key: 1,\n            total_price: 0\n          }\n        ],\n        selectedProducts:[],\n        deletedProducts: [],\n        order_total_price: 0,\n        order_total_profit: 0,\n        coupon: 0,\n        discount: 1,\n        manual_discount: 0,\n        shipping_cost: 5,\n        other_cost: 0,\n        sales_channel: undefined,\n        resaler_id: undefined,\n        event_id: undefined,\n        note: undefined,\n        fully_paid: true,\n        special_type: false,\n        date: new Date()\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n  .tag {\n    color: white;\n    font-size: 12px;\n    width: 70px;\n  }\n  .sub_type_tag {\n    color: white;\n    font-size: 12px;\n    width: 100px;\n  }\n  .input-title {\n    display: inline-block;\n    width: 120px;\n    line-height: 25px;\n    font-size: 14px;\n    margin-left: 10px;\n  }\n  .section-title {\n    display: inline-block;\n    width: 100px;\n    vertical-align: top;\n    margin-top: 0;\n  }\n  .section-title-large {\n    vertical-align: top;\n    margin-top: 30;\n  }\n  .middle-title {\n    display: inline-block;\n    vertical-align: top;\n    margin-top: 0;\n  }\n  .block-title {\n    vertical-align: top;\n    margin-top: 0;\n  }\n  .input-title-long {\n    width: 120px;\n  }\n  .input-title-short {\n    width: 80px;\n  }\n  .input-title-extra-long {\n    width: 150px;\n  }\n  .inventory-in-input {\n    width: 120px; \n    margin-left: 10px;\n  }\n  .inventory-in-input-short {\n    width: 80px; \n    margin-left: 10px;\n  }\n  .inventory-in-input-extra {\n    width: 150px; \n    margin-left: 10px;\n  }\n  .inventory-in-input-line {\n    width: 250px; \n  }\n</style>\n"]}]}