{"remainingRequest":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/src/views/login/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/src/views/login/index.vue","mtime":1576644363052},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { login } from '@/api/user'\n\nexport default {\n  name: 'Login',\n  components: { },\n  data() {\n    const validatePassword = (rule, value, callback) => {\n      if (value.length < 6) {\n        callback(new Error('The password can not be less than 6 digits'))\n      } else {\n        callback()\n      }\n    }\n    return {\n      loginForm: {\n        login_name: '',\n        password: ''\n      },\n      loginRules: {\n        login_name: [{ required: true, trigger: 'blur' }],\n        password: [{ required: true, trigger: 'blur' }]\n      },\n      passwordType: 'password',\n      capsTooltip: false,\n      loading: false,\n      showDialog: false,\n      redirect: undefined,\n      otherQuery: {},\n      version: ''\n    }\n  },\n  watch: {\n    $route: {\n      handler: function(route) {\n        const query = route.query\n        if (query) {\n          this.redirect = query.redirect\n          this.otherQuery = this.getOtherQuery(query)\n        }\n      },\n      immediate: true\n    }\n  },\n  created() {\n    // window.addEventListener('storage', this.afterQRScan)\n  },\n  mounted() {\n    if (this.loginForm.login_name === '') {\n      this.$refs.username.focus()\n    } else if (this.loginForm.password === '') {\n      this.$refs.password.focus()\n    }\n  },\n  destroyed() {\n    // window.removeEventListener('storage', this.afterQRScan)\n  },\n  methods: {\n    checkCapslock({ shiftKey, key } = {}) {\n      if (key && key.length === 1) {\n        if (shiftKey && (key >= 'a' && key <= 'z') || !shiftKey && (key >= 'A' && key <= 'Z')) {\n          this.capsTooltip = true\n        } else {\n          this.capsTooltip = false\n        }\n      }\n      if (key === 'CapsLock' && this.capsTooltip === true) {\n        this.capsTooltip = false\n      }\n    },\n    showPwd() {\n      if (this.passwordType === 'password') {\n        this.passwordType = ''\n      } else {\n        this.passwordType = 'password'\n      }\n      this.$nextTick(() => {\n        this.$refs.password.focus()\n      })\n    },\n    handleLogin() {\n      this.$refs.loginForm.validate(valid => {\n        if (valid) {\n          this.loading = true\n          this.$store.dispatch('user/login', this.loginForm)\n            .then(() => {\n              this.$router.push({ path: this.redirect || '/', query: this.otherQuery })\n              this.loading = false\n            })\n            .catch(() => {\n              this.loading = false\n            })\n        } else {\n          return false\n        }\n      })\n    },\n    getOtherQuery(query) {\n      return Object.keys(query).reduce((acc, cur) => {\n        if (cur !== 'redirect') {\n          acc[cur] = query[cur]\n        }\n        return acc\n      }, {})\n    }\n  }\n}\n",null]}