{"remainingRequest":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/src/views/data/event.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/src/views/data/event.vue","mtime":1583987137938},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport EventAPI from '@/api/event'\n\nimport { parseTime } from '@/utils'\nimport Pagination from '@/components/Pagination' // secondary package based on el-pagination\nimport { mapGetters } from 'vuex'\n\nexport default {\n  name: 'ComplexTable',\n  components: { Pagination },\n  filters: {},\n  data() {\n    return {\n      tableKey: 0,\n      events: null,\n      total: 0,\n      listLoading: true,\n      dialogFormVisible: false,\n      rowSpans: null,\n      listQuery: {\n        page: 1,\n        limit: 10\n      },\n      temp: {\n        title: null,\n        start_date: null,\n        end_date: null,\n        note: null\n      }\n    }\n  },\n  created() {\n    this.getEvents()\n    this.getCount()\n  },\n  computed: {\n    ...mapGetters([\n      'id'\n    ])\n  },\n  methods: {\n    getEvents() {\n      this.listLoading = true\n      EventAPI.getAllEvents(this.listQuery)\n        .then(response => {\n          this.events = response\n          this.listLoading = false\n        })\n        .catch(err => {\n          this.$message({\n            message: '读取库存失败，请联系徐神检查',\n            type: 'error'\n          })\n          this.listLoading = false\n        })\n    },\n    getCount() {\n      EventAPI.getEventsCount()\n        .then(response => {\n          this.total = response.total\n        })\n    },\n    handleCreate() {\n      this.dialogFormVisible = true\n    },\n    addNewEvent() {\n      this.$confirm('确定添加?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.sendNewEventRequest()\n      }).catch((err) => {   \n        console.log(err)     \n      });\n    },\n    sendNewEventRequest() {\n      if (!this.temp.title || !this.temp.start_date || !this.temp.end_date) {\n        this.$message({\n          message: '必须填写所有信息',\n          type: 'error'\n        })\n    } else {\n      this.listLoading = true\n      EventAPI.addEvent(this.temp)\n        .then(response => {\n          this.listLoading = false\n            this.$alert('添加成功', '成功', {\n              confirmButtonText: '确定',\n              callback: action => {\n                this.page = 1\n                this.getEvents()\n                this.getCount()\n                this.dialogFormVisible = false;\n                this.temp = {\n                  title:null,\n                  start_date: null,\n                  end_date: null,\n                  note: undefined\n                }\n              }\n            });\n        })\n        .catch(err => {\n          console.log(err)     \n          this.$message({\n            message: '添加失败，请联系徐神检查',\n            type: 'error'\n          })\n          this.listLoading = false\n        })\n      }\n    },\n    editEvent() {\n      \n    },\n    deleteEvent(item) {\n      this.$confirm('确定删除>>' + item.title + '<<吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.sendDeleteEventRequest(item.id)\n      }).catch((err) => {   \n        console.log(err)     \n      });\n    },\n    sendDeleteEventRequest(id) {\n      this.listLoading = true\n      EventAPI.deleteEvent(id)\n        .then(response => {\n          this.listLoading = false\n            this.$alert('删除成功', '成功', {\n              confirmButtonText: '确定',\n              callback: action => {\n                this.page = 1\n                this.getEvents()\n                this.getCount()\n              }\n            });\n        })\n        .catch(err => {\n          console.log(err)     \n          this.$message({\n            message: '删除失败，请联系徐神检查',\n            type: 'error'\n          })\n          this.listLoading = false\n        })\n    }\n  }\n}\n",{"version":3,"sources":["event.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0GA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"event.vue","sourceRoot":"src/views/data","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div>\n    <h2 class=\"title\">线下活动</h2>\n    <el-button class=\"create-button\" style=\"width: 200px; margin-left: 10px;\" type=\"success\" icon=\"el-icon-edit\" @click=\"handleCreate\">\n        添加新活动\n      </el-button>\n    </div>\n    <el-table\n      :key=\"tableKey\"\n      v-loading=\"listLoading\"\n      :data=\"events\"\n      border\n      fit\n      highlight-current-row\n      style=\"width: 100%;\"\n    >\n      <el-table-column label=\"活动ID\" prop=\"id\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.id }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"活动名字\" prop=\"inventory_type\" width=\"250px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.title }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"起始时间\" prop=\"inventory_type\" width=\"200px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{moment(row.start_date).format('YYYY-MM-DD')}}</span>\n        </template>\n      </el-table-column>\n       <el-table-column label=\"结束时间\" prop=\"inventory_type\" width=\"200px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{moment(row.end_date).format('YYYY-MM-DD')}}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"活动备注\" prop=\"inventory_type\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.note }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" width=\"300px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <el-button type=\"primary\" plain @click=\"editEvent(row)\">编辑</el-button>\n          <el-button type=\"danger\" plain @click=\"deleteEvent(row)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.limit\" @pagination=\"getEvents\" />\n\n    <el-dialog title=\"添加新活动\" :visible.sync=\"dialogFormVisible\" width=\"80%\">\n      <el-form ref=\"dataForm\"\n        :model=\"temp\" \n        label-position=\"left\" \n        label-width=\"10px\" \n        style=\"margin-left:20px;\">\n        <div>\n          <h3 style=\"display: inline-block; width: 100px; vertical-align: top; margin-top: 0;\"> 活动信息 </h3>\n          <div style=\"display: inline-block;\">\n            <div style=\" margin-bottom: 5px;\">\n              <div class=\"input-title\">活动名称</div>\n              <div class=\"input-title\">开始日期</div>\n              <div class=\"input-title\">结束日期</div>\n            </div>\n            <el-form-item label=\"\" prop=\"event\" style=\"margin-bottom: 10px;\">\n              <el-input placeholder=\"活动名称\" v-model=\"temp.title\" style=\"width: 200px;\" class=\"filter-item\" />\n              <el-date-picker\n                v-model=\"temp.start_date\"\n                type=\"date\"\n                style=\"width: 200px;\"\n                placeholder=\"开始日期\">\n              </el-date-picker>\n              <el-date-picker\n                v-model=\"temp.end_date\"\n                type=\"date\"\n                style=\"width: 200px;\"\n                placeholder=\"结束如期\">\n              </el-date-picker>\n            </el-form-item>\n          </div>\n          <div>\n          <h3 style=\"display: inline-block; width: 100px; vertical-align: top; margin-top: 0;\"> 活动备注 </h3>\n          <el-input\n            type=\"textarea\"\n            :autosize=\"{ minRows: 2, maxRows: 4}\"\n            placeholder=\"备注\"\n            v-model=\"temp.note\"\n            style=\"width: 70%\" />\n            </div>\n        </div>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">\n          取消\n        </el-button>\n        <el-button type=\"primary\" @click=\"addNewEvent()\">\n          提交\n        </el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport EventAPI from '@/api/event'\n\nimport { parseTime } from '@/utils'\nimport Pagination from '@/components/Pagination' // secondary package based on el-pagination\nimport { mapGetters } from 'vuex'\n\nexport default {\n  name: 'ComplexTable',\n  components: { Pagination },\n  filters: {},\n  data() {\n    return {\n      tableKey: 0,\n      events: null,\n      total: 0,\n      listLoading: true,\n      dialogFormVisible: false,\n      rowSpans: null,\n      listQuery: {\n        page: 1,\n        limit: 10\n      },\n      temp: {\n        title: null,\n        start_date: null,\n        end_date: null,\n        note: null\n      }\n    }\n  },\n  created() {\n    this.getEvents()\n    this.getCount()\n  },\n  computed: {\n    ...mapGetters([\n      'id'\n    ])\n  },\n  methods: {\n    getEvents() {\n      this.listLoading = true\n      EventAPI.getAllEvents(this.listQuery)\n        .then(response => {\n          this.events = response\n          this.listLoading = false\n        })\n        .catch(err => {\n          this.$message({\n            message: '读取库存失败，请联系徐神检查',\n            type: 'error'\n          })\n          this.listLoading = false\n        })\n    },\n    getCount() {\n      EventAPI.getEventsCount()\n        .then(response => {\n          this.total = response.total\n        })\n    },\n    handleCreate() {\n      this.dialogFormVisible = true\n    },\n    addNewEvent() {\n      this.$confirm('确定添加?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.sendNewEventRequest()\n      }).catch((err) => {   \n        console.log(err)     \n      });\n    },\n    sendNewEventRequest() {\n      if (!this.temp.title || !this.temp.start_date || !this.temp.end_date) {\n        this.$message({\n          message: '必须填写所有信息',\n          type: 'error'\n        })\n    } else {\n      this.listLoading = true\n      EventAPI.addEvent(this.temp)\n        .then(response => {\n          this.listLoading = false\n            this.$alert('添加成功', '成功', {\n              confirmButtonText: '确定',\n              callback: action => {\n                this.page = 1\n                this.getEvents()\n                this.getCount()\n                this.dialogFormVisible = false;\n                this.temp = {\n                  title:null,\n                  start_date: null,\n                  end_date: null,\n                  note: undefined\n                }\n              }\n            });\n        })\n        .catch(err => {\n          console.log(err)     \n          this.$message({\n            message: '添加失败，请联系徐神检查',\n            type: 'error'\n          })\n          this.listLoading = false\n        })\n      }\n    },\n    editEvent() {\n      \n    },\n    deleteEvent(item) {\n      this.$confirm('确定删除>>' + item.title + '<<吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.sendDeleteEventRequest(item.id)\n      }).catch((err) => {   \n        console.log(err)     \n      });\n    },\n    sendDeleteEventRequest(id) {\n      this.listLoading = true\n      EventAPI.deleteEvent(id)\n        .then(response => {\n          this.listLoading = false\n            this.$alert('删除成功', '成功', {\n              confirmButtonText: '确定',\n              callback: action => {\n                this.page = 1\n                this.getEvents()\n                this.getCount()\n              }\n            });\n        })\n        .catch(err => {\n          console.log(err)     \n          this.$message({\n            message: '删除失败，请联系徐神检查',\n            type: 'error'\n          })\n          this.listLoading = false\n        })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n  .title {\n    display: inline-block;\n  }\n\n  .create-button {\n    margin-left: 50px !important;\n  }\n\n  .tag {\n    color: white;\n    font-size: 14px;\n    width: 100px;\n  }\n\n  .sub_type_tag {\n    color: white;\n    font-size: 14px;\n    width: 120px;\n  }\n  .input-title {\n    display: inline-block;\n    width: 200px;\n    line-height: 25px;\n    font-size: 14px;\n    margin-left: 10px;\n  }\n</style>\n"]}]}