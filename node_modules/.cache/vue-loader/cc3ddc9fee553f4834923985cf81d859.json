{"remainingRequest":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/src/views/member/member-chart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/src/views/member/member-chart.vue","mtime":1585030529998},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yinxu/Desktop/Dev/Fur-Admin/fur-admin-site/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport MemberAPI from '@/api/member'\n\nimport { parseTime } from '@/utils'\nimport Pagination from '@/components/Pagination' // secondary package based on el-pagination\nimport { mapGetters } from 'vuex'\n\nexport default {\n  name: 'ComplexTable',\n  components: { Pagination },\n  filters: {},\n  data() {\n    return {\n      tableKey: 0,\n      members: null,\n      total: 0,\n      listLoading: true,\n      dialogFormVisible: false,\n      rowSpans: null,\n      listQuery: {\n        page: 1,\n        limit: 10\n      },\n      petTypes: [\n        { id: 1, title: '狗' },\n        { id: 2, title: '猫' },\n      ],\n      petGenders: [\n        { id: 1, title: '公' },\n        { id: 2, title: '母' },\n      ],\n      temp: {\n        title: null,\n        start_date: null,\n        end_date: null,\n        note: null,\n        \n      }\n    }\n  },\n  created() {\n   \n  },\n  computed: {\n    ...mapGetters([\n      'id'\n    ])\n  },\n  beforeRouteEnter (to, from, next) {\n    next(vm => { \n      vm.getMembers()\n      vm.getCount()\n      next();\n    }) \n  },\n  methods: {\n    calculateRowSpan() {\n      let g = []\n      let count = 0\n      this.members.forEach(i => {\n        let found = false\n        \n        g.forEach(t => {\n          if (t.id === i.id) {\n            found = true\n            t.end++\n            t.rowSpan++\n            count = t.start + t.rowSpan\n          }\n        })\n\n        if (!found) {\n          let newT = {\n            id: i.id,\n            start: count,\n            end: count+1,\n            rowSpan: 1\n          }\n          count++\n          g.push(newT)\n        }\n      });\n      console.log(g)\n      this.rowSpans = g;\n    },\n    getMembers() {\n      this.listLoading = true\n      MemberAPI.getAllMembers(this.listQuery)\n        .then(response => {\n          this.members = response\n          this.listLoading = false\n          this.calculateRowSpan()\n        })\n        .catch(err => {\n          this.$message({\n            message: '读取库存失败，请联系徐神检查',\n            type: 'error'\n          })\n          this.listLoading = false\n        })\n    },\n    getCount() {\n      MemberAPI.getMembersCount()\n        .then(response => {\n          this.total = response.total\n        })\n    },\n    handleCreate() {\n      this.dialogFormVisible = true\n    },\n    addNewMember() {\n      this.$confirm('确定添加?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.sendNewEventRequest()\n      }).catch((err) => {   \n        console.log(err)     \n      });\n    },\n    sendNewEventRequest() {\n      if (!this.temp.title || !this.temp.start_date || !this.temp.end_date) {\n        this.$message({\n          message: '必须填写所有信息',\n          type: 'error'\n        })\n    } else {\n      this.listLoading = true\n      MemberAPI.addMember(this.temp)\n        .then(response => {\n          this.listLoading = false\n            this.$alert('添加成功', '成功', {\n              confirmButtonText: '确定',\n              callback: action => {\n                this.page = 1\n                this.getEvents()\n                this.getCount()\n                this.dialogFormVisible = false;\n                this.temp = {\n                  title:null,\n                  start_date: null,\n                  end_date: null,\n                  note: undefined\n                }\n              }\n            });\n        })\n        .catch(err => {\n          console.log(err)     \n          this.$message({\n            message: '添加失败，请联系徐神检查',\n            type: 'error'\n          })\n          this.listLoading = false\n        })\n      }\n    },\n    handleFilter() {\n      this.listQuery.page = 1\n      this.getAllSales()\n      this.getSalesCount()\n    },\n    checkMemberDetail() {\n      \n    },\n    objectSpanMethod({ row, column, rowIndex, columnIndex }) {\n      if (columnIndex <= 6) {\n        let data = {\n          rowspan: 0,\n          colspan: 0\n        };\n        this.rowSpans.forEach(i => {\n          if (rowIndex >= i.start && rowIndex < i.end && (rowIndex - i.start) % i.rowSpan === 0) {\n            data = {\n              rowspan: i.rowSpan,\n              colspan: 1\n            };\n            return;\n          }\n        })\n\n        return data;\n      }\n    }\n  }\n}\n",{"version":3,"sources":["member-chart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"member-chart.vue","sourceRoot":"src/views/member","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <h2>筛选结果</h2>\n      <el-input v-model=\"listQuery.id\" placeholder=\"会员id\" style=\"width: 150px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-input v-model=\"listQuery.cellphone\" placeholder=\"手机号\" style=\"width: 150px; margin-left: 15px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-input v-model=\"listQuery.city\" placeholder=\"所在城市\" style=\"width: 150px; margin-left: 15px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-select v-model=\"listQuery.pet_type\" placeholder=\"宠物类型\" clearable style=\"width: 150px; margin-left: 15px;\" class=\"filter-item\">\n        <el-option v-for=\"item in petTypes\" :key=\"item.id\" :label=\"item.title\" :value=\"item.id\" />\n      </el-select>\n      <el-select v-model=\"listQuery.pet_gender\" placeholder=\"宠物性别\" clearable style=\"width: 150px; margin-left: 15px;\" class=\"filter-item\">\n        <el-option v-for=\"item in petGenders\" :key=\"item.id\" :label=\"item.title\" :value=\"item.id\" />\n      </el-select>\n      <el-input v-model=\"listQuery.pet_sub_type\" placeholder=\"宠物品种\" style=\"width: 150px; margin-left: 15px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-button class=\"filter-item\" type=\"primary\" icon=\"el-icon-search\" @click=\"handleFilter\" style=\"width: 100px; margin-left: 15px;\">\n        搜索\n      </el-button>\n      <el-button class=\"filter-item\" style=\"width: 200px; margin-left: 10px;\" type=\"success\" icon=\"el-icon-edit\" @click=\"handleCreate\">\n        添加新会员\n      </el-button>\n    </div>\n    <div>\n      <h2 class=\"title\">会员列表</h2>\n    </div>\n    <el-table\n      :key=\"tableKey\"\n      v-loading=\"listLoading\"\n      :data=\"members\"\n      :span-method=\"objectSpanMethod\"\n      border\n      fit\n      highlight-current-row\n      style=\"width: 100%;\"\n    >\n      <el-table-column label=\"会员ID\" prop=\"id\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.id }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"姓名\" prop=\"name\" width=\"250px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.name }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"手机号码\" prop=\"cellphone\" width=\"200px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.cellphone }}</span>\n        </template>\n      </el-table-column>\n       <el-table-column label=\"微信账号\" prop=\"wechat_account\" width=\"200px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.wechat_account }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"淘宝账号\" prop=\"taobao_account\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.taobao_account }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"所在城市\" prop=\"city\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.city }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"总消费金额\" width=\"150px\" prop=\"total_spend\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.total_spend }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"宠物类别\" prop=\"pet_type\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.type === null ? '' : (row.type === 1 ? '狗':'猫') }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"宠物名字\" prop=\"pet_name\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.pet_name }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"宠物品种\" prop=\"pet_sub_type\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.sub_type }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"宠物性别\" prop=\"pet_gender\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.pet_gender === null ? '' : (row.pet_gender === 1 ? 'boy':'girl')}}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"宠物生日\" prop=\"birthday\" width=\"200px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.birthday === null ? '' : moment(row.birthday).format('YYYY-MM-DD') }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" width=\"200px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <el-button type=\"primary\" plain @click=\"checkMemberDetail(row)\">查看消费详情</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.limit\" @pagination=\"getMembers\" />\n\n    <el-dialog title=\"添加新会员\" :visible.sync=\"dialogFormVisible\" width=\"80%\">\n      <el-form ref=\"dataForm\"\n        :model=\"temp\" \n        label-position=\"left\" \n        label-width=\"10px\" \n        style=\"margin-left:20px;\">\n        <div>\n          <h3 style=\"display: inline-block; width: 100px; vertical-align: top; margin-top: 0;\"> 会员信息 </h3>\n          <div style=\"display: inline-block;\">\n            <div style=\" margin-bottom: 5px;\">\n              <div class=\"input-title\">姓名</div>\n              <div class=\"input-title\">开始日期</div>\n              <div class=\"input-title\">结束日期</div>\n            </div>\n            <el-form-item label=\"\" prop=\"event\" style=\"margin-bottom: 10px;\">\n              <el-input placeholder=\"活动名称\" v-model=\"temp.title\" style=\"width: 200px;\" class=\"filter-item\" />\n              <el-date-picker\n                v-model=\"temp.start_date\"\n                type=\"date\"\n                style=\"width: 200px;\"\n                placeholder=\"开始日期\">\n              </el-date-picker>\n              <el-date-picker\n                v-model=\"temp.end_date\"\n                type=\"date\"\n                style=\"width: 200px;\"\n                placeholder=\"结束如期\">\n              </el-date-picker>\n            </el-form-item>\n          </div>\n          \n        </div>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">\n          取消\n        </el-button>\n        <el-button type=\"primary\" @click=\"addNewMember()\">\n          提交\n        </el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport MemberAPI from '@/api/member'\n\nimport { parseTime } from '@/utils'\nimport Pagination from '@/components/Pagination' // secondary package based on el-pagination\nimport { mapGetters } from 'vuex'\n\nexport default {\n  name: 'ComplexTable',\n  components: { Pagination },\n  filters: {},\n  data() {\n    return {\n      tableKey: 0,\n      members: null,\n      total: 0,\n      listLoading: true,\n      dialogFormVisible: false,\n      rowSpans: null,\n      listQuery: {\n        page: 1,\n        limit: 10\n      },\n      petTypes: [\n        { id: 1, title: '狗' },\n        { id: 2, title: '猫' },\n      ],\n      petGenders: [\n        { id: 1, title: '公' },\n        { id: 2, title: '母' },\n      ],\n      temp: {\n        title: null,\n        start_date: null,\n        end_date: null,\n        note: null,\n        \n      }\n    }\n  },\n  created() {\n   \n  },\n  computed: {\n    ...mapGetters([\n      'id'\n    ])\n  },\n  beforeRouteEnter (to, from, next) {\n    next(vm => { \n      vm.getMembers()\n      vm.getCount()\n      next();\n    }) \n  },\n  methods: {\n    calculateRowSpan() {\n      let g = []\n      let count = 0\n      this.members.forEach(i => {\n        let found = false\n        \n        g.forEach(t => {\n          if (t.id === i.id) {\n            found = true\n            t.end++\n            t.rowSpan++\n            count = t.start + t.rowSpan\n          }\n        })\n\n        if (!found) {\n          let newT = {\n            id: i.id,\n            start: count,\n            end: count+1,\n            rowSpan: 1\n          }\n          count++\n          g.push(newT)\n        }\n      });\n      console.log(g)\n      this.rowSpans = g;\n    },\n    getMembers() {\n      this.listLoading = true\n      MemberAPI.getAllMembers(this.listQuery)\n        .then(response => {\n          this.members = response\n          this.listLoading = false\n          this.calculateRowSpan()\n        })\n        .catch(err => {\n          this.$message({\n            message: '读取库存失败，请联系徐神检查',\n            type: 'error'\n          })\n          this.listLoading = false\n        })\n    },\n    getCount() {\n      MemberAPI.getMembersCount()\n        .then(response => {\n          this.total = response.total\n        })\n    },\n    handleCreate() {\n      this.dialogFormVisible = true\n    },\n    addNewMember() {\n      this.$confirm('确定添加?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.sendNewEventRequest()\n      }).catch((err) => {   \n        console.log(err)     \n      });\n    },\n    sendNewEventRequest() {\n      if (!this.temp.title || !this.temp.start_date || !this.temp.end_date) {\n        this.$message({\n          message: '必须填写所有信息',\n          type: 'error'\n        })\n    } else {\n      this.listLoading = true\n      MemberAPI.addMember(this.temp)\n        .then(response => {\n          this.listLoading = false\n            this.$alert('添加成功', '成功', {\n              confirmButtonText: '确定',\n              callback: action => {\n                this.page = 1\n                this.getEvents()\n                this.getCount()\n                this.dialogFormVisible = false;\n                this.temp = {\n                  title:null,\n                  start_date: null,\n                  end_date: null,\n                  note: undefined\n                }\n              }\n            });\n        })\n        .catch(err => {\n          console.log(err)     \n          this.$message({\n            message: '添加失败，请联系徐神检查',\n            type: 'error'\n          })\n          this.listLoading = false\n        })\n      }\n    },\n    handleFilter() {\n      this.listQuery.page = 1\n      this.getAllSales()\n      this.getSalesCount()\n    },\n    checkMemberDetail() {\n      \n    },\n    objectSpanMethod({ row, column, rowIndex, columnIndex }) {\n      if (columnIndex <= 6) {\n        let data = {\n          rowspan: 0,\n          colspan: 0\n        };\n        this.rowSpans.forEach(i => {\n          if (rowIndex >= i.start && rowIndex < i.end && (rowIndex - i.start) % i.rowSpan === 0) {\n            data = {\n              rowspan: i.rowSpan,\n              colspan: 1\n            };\n            return;\n          }\n        })\n\n        return data;\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n  .title {\n    display: inline-block;\n  }\n\n  .create-button {\n    margin-left: 50px !important;\n  }\n\n  .tag {\n    color: white;\n    font-size: 14px;\n    width: 100px;\n  }\n\n  .sub_type_tag {\n    color: white;\n    font-size: 14px;\n    width: 120px;\n  }\n  .input-title {\n    display: inline-block;\n    width: 200px;\n    line-height: 25px;\n    font-size: 14px;\n    margin-left: 10px;\n  }\n</style>\n"]}]}